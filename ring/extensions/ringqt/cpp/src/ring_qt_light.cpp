/* Copyright (c) 2013-2022 Mahmoud Fayed <msfclipper@yahoo.com> */

extern "C" {
	#include "ring.h"
}

#include "gtimer.h"
#include "giodevice.h"
#include "gprocess.h"
#include "gthread.h"
#include <QtCore>

#include "gwindow.h"
#include "gguiapplication.h"
#include "gdrag.h"
#include "gmovie.h"
#include <QtGui>

#include "gallevents.h"
#include "gaction.h"
#include "gpushbutton.h"
#include "glineedit.h"
#include "gtextedit.h"
#include "glistwidget.h"
#include "gtreeview.h"
#include "gtreewidget.h"
#include "gcombobox.h"
#include "gtabwidget.h"
#include "gtablewidget.h"
#include "gprogressbar.h"
#include "gspinbox.h"
#include "gslider.h"
#include "gdial.h"
#include "gcheckbox.h"
#include "gradiobutton.h"
#include "gbuttongroup.h"
#include "gcolordialog.h"
#include "gplaintextedit.h"
#include "gheaderview.h"
#include "codeeditor.h"
#include "highlighter.h"
#include "gtoolbutton.h"
#include "gtextbrowser.h"
#include "gdockwidget.h"
#include "gstackedwidget.h"
#include "gcalendarwidget.h"
#include "gtabbar.h"
#include "ggraphicsscene.h"
#include "gcolordialog.h"
#include "gfontdialog.h"
#include "gfiledialog.h"
#include "mscompleter.h"
#include <QtWidgets>









#include <QTest>













extern "C" {

	RING_API void ring_qt_start(RingState *pRingState);

	RING_LIBINIT
	{
		new QApplication(pRingState->argc,pRingState->argv);
	   	ring_qt_start(pRingState) ;
	}

}

// Functions Prototype - Functions used to Free Memory 

	void ring_QObject_freefunc(void *pState,void *pPointer);
	void ring_QSize_freefunc(void *pState,void *pPointer);
	void ring_QDir_freefunc(void *pState,void *pPointer);
	void ring_QUrl_freefunc(void *pState,void *pPointer);
	void ring_QEvent_freefunc(void *pState,void *pPointer);
	void ring_QTimer_freefunc(void *pState,void *pPointer);
	void ring_QByteArray_freefunc(void *pState,void *pPointer);
	void ring_QIODevice_freefunc(void *pState,void *pPointer);
	void ring_QFileInfo_freefunc(void *pState,void *pPointer);
	void ring_QStringList_freefunc(void *pState,void *pPointer);
	void ring_QRect_freefunc(void *pState,void *pPointer);
	void ring_QTime_freefunc(void *pState,void *pPointer);
	void ring_QDate_freefunc(void *pState,void *pPointer);
	void ring_QTextCodec_freefunc(void *pState,void *pPointer);
	void ring_QVariant_freefunc(void *pState,void *pPointer);
	void ring_QVariant2_freefunc(void *pState,void *pPointer);
	void ring_QVariant3_freefunc(void *pState,void *pPointer);
	void ring_QVariant4_freefunc(void *pState,void *pPointer);
	void ring_QVariant5_freefunc(void *pState,void *pPointer);
	void ring_QVariantInt_freefunc(void *pState,void *pPointer);
	void ring_QVariantFloat_freefunc(void *pState,void *pPointer);
	void ring_QVariantDouble_freefunc(void *pState,void *pPointer);
	void ring_QVariantString_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamReader_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamWriter_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamNotationDeclaration_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamNamespaceDeclaration_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamEntityDeclaration_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamEntityResolver_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamAttributes_freefunc(void *pState,void *pPointer);
	void ring_QXmlStreamAttribute_freefunc(void *pState,void *pPointer);
	void ring_QRegularExpression_freefunc(void *pState,void *pPointer);
	void ring_QRegularExpressionMatch_freefunc(void *pState,void *pPointer);
	void ring_QRegularExpressionMatchIterator_freefunc(void *pState,void *pPointer);
	void ring_QJsonArray_freefunc(void *pState,void *pPointer);
	void ring_QJsonDocument_freefunc(void *pState,void *pPointer);
	void ring_QJsonObject_freefunc(void *pState,void *pPointer);
	void ring_QJsonParseError_freefunc(void *pState,void *pPointer);
	void ring_QJsonValue_freefunc(void *pState,void *pPointer);
	void ring_QPointF_freefunc(void *pState,void *pPointer);
	void ring_QPoint_freefunc(void *pState,void *pPointer);
	void ring_QString2_freefunc(void *pState,void *pPointer);
	void ring_QStringRef_freefunc(void *pState,void *pPointer);
	void ring_QBuffer_freefunc(void *pState,void *pPointer);
	void ring_QDateTime_freefunc(void *pState,void *pPointer);
	void ring_QCoreApplication_freefunc(void *pState,void *pPointer);
	void ring_QFile_freefunc(void *pState,void *pPointer);
	void ring_QFile2_freefunc(void *pState,void *pPointer);
	void ring_QFileDevice_freefunc(void *pState,void *pPointer);
	void ring_QStandardPaths_freefunc(void *pState,void *pPointer);
	void ring_QMimeData_freefunc(void *pState,void *pPointer);
	void ring_QChar_freefunc(void *pState,void *pPointer);
	void ring_QChildEvent_freefunc(void *pState,void *pPointer);
	void ring_QTextStream_freefunc(void *pState,void *pPointer);
	void ring_QTextStream2_freefunc(void *pState,void *pPointer);
	void ring_QTextStream3_freefunc(void *pState,void *pPointer);
	void ring_QTextStream4_freefunc(void *pState,void *pPointer);
	void ring_QTextStream5_freefunc(void *pState,void *pPointer);
	void ring_QLocale_freefunc(void *pState,void *pPointer);
	void ring_QThread_freefunc(void *pState,void *pPointer);
	void ring_QThreadPool_freefunc(void *pState,void *pPointer);
	void ring_QProcess_freefunc(void *pState,void *pPointer);
	void ring_QUuid_freefunc(void *pState,void *pPointer);
	void ring_QMutex_freefunc(void *pState,void *pPointer);
	void ring_QMutexLocker_freefunc(void *pState,void *pPointer);
	void ring_QDesktopServices_freefunc(void *pState,void *pPointer);
	void ring_QBitmap_freefunc(void *pState,void *pPointer);
	void ring_QPixmap_freefunc(void *pState,void *pPointer);
	void ring_QPixmap2_freefunc(void *pState,void *pPointer);
	void ring_QIcon_freefunc(void *pState,void *pPointer);
	void ring_QPainter_freefunc(void *pState,void *pPointer);
	void ring_QPainter2_freefunc(void *pState,void *pPointer);
	void ring_QPicture_freefunc(void *pState,void *pPointer);
	void ring_QPen_freefunc(void *pState,void *pPointer);
	void ring_QColor_freefunc(void *pState,void *pPointer);
	void ring_QFont_freefunc(void *pState,void *pPointer);
	void ring_QBrush_freefunc(void *pState,void *pPointer);
	void ring_QTextCursor_freefunc(void *pState,void *pPointer);
	void ring_QKeySequence_freefunc(void *pState,void *pPointer);
	void ring_QTextDocument_freefunc(void *pState,void *pPointer);
	void ring_QTextBlock_freefunc(void *pState,void *pPointer);
	void ring_QPainterPath_freefunc(void *pState,void *pPointer);
	void ring_QImage_freefunc(void *pState,void *pPointer);
	void ring_QTextCharFormat_freefunc(void *pState,void *pPointer);
	void ring_QFontMetrics_freefunc(void *pState,void *pPointer);
	void ring_QLinearGradient_freefunc(void *pState,void *pPointer);
	void ring_QGradient_freefunc(void *pState,void *pPointer);
	void ring_QCursor_freefunc(void *pState,void *pPointer);
	void ring_QScreen_freefunc(void *pState,void *pPointer);
	void ring_QWindow_freefunc(void *pState,void *pPointer);
	void ring_QGuiApplication_freefunc(void *pState,void *pPointer);
	void ring_QRegion_freefunc(void *pState,void *pPointer);
	void ring_QVector2D_freefunc(void *pState,void *pPointer);
	void ring_QVector3D_freefunc(void *pState,void *pPointer);
	void ring_QVector4D_freefunc(void *pState,void *pPointer);
	void ring_QQuaternion_freefunc(void *pState,void *pPointer);
	void ring_QMatrix4x4_freefunc(void *pState,void *pPointer);
	void ring_QDrag_freefunc(void *pState,void *pPointer);
	void ring_QDropEvent_freefunc(void *pState,void *pPointer);
	void ring_QDragMoveEvent_freefunc(void *pState,void *pPointer);
	void ring_QDragEnterEvent_freefunc(void *pState,void *pPointer);
	void ring_QDragLeaveEvent_freefunc(void *pState,void *pPointer);
	void ring_QClipboard_freefunc(void *pState,void *pPointer);
	void ring_QMovie_freefunc(void *pState,void *pPointer);
	void ring_QApp_freefunc(void *pState,void *pPointer);
	void ring_QWidget_freefunc(void *pState,void *pPointer);
	void ring_QLabel_freefunc(void *pState,void *pPointer);
	void ring_QPushButton_freefunc(void *pState,void *pPointer);
	void ring_QLineEdit_freefunc(void *pState,void *pPointer);
	void ring_QVBoxLayout_freefunc(void *pState,void *pPointer);
	void ring_QHBoxLayout_freefunc(void *pState,void *pPointer);
	void ring_QTextEdit_freefunc(void *pState,void *pPointer);
	void ring_QListWidget_freefunc(void *pState,void *pPointer);
	void ring_QTreeView_freefunc(void *pState,void *pPointer);
	void ring_QFileSystemModel_freefunc(void *pState,void *pPointer);
	void ring_QTreeWidget_freefunc(void *pState,void *pPointer);
	void ring_QTreeWidgetItem_freefunc(void *pState,void *pPointer);
	void ring_QComboBox_freefunc(void *pState,void *pPointer);
	void ring_QMenuBar_freefunc(void *pState,void *pPointer);
	void ring_QMenu_freefunc(void *pState,void *pPointer);
	void ring_QToolBar_freefunc(void *pState,void *pPointer);
	void ring_QMainWindow_freefunc(void *pState,void *pPointer);
	void ring_QStatusBar_freefunc(void *pState,void *pPointer);
	void ring_QDockWidget_freefunc(void *pState,void *pPointer);
	void ring_QTabWidget_freefunc(void *pState,void *pPointer);
	void ring_QTableWidgetItem_freefunc(void *pState,void *pPointer);
	void ring_QFrame_freefunc(void *pState,void *pPointer);
	void ring_QFrame2_freefunc(void *pState,void *pPointer);
	void ring_QFrame3_freefunc(void *pState,void *pPointer);
	void ring_QAbstractScrollArea_freefunc(void *pState,void *pPointer);
	void ring_QAbstractItemView_freefunc(void *pState,void *pPointer);
	void ring_QTableView_freefunc(void *pState,void *pPointer);
	void ring_QTableWidget_freefunc(void *pState,void *pPointer);
	void ring_QProgressBar_freefunc(void *pState,void *pPointer);
	void ring_QSpinBox_freefunc(void *pState,void *pPointer);
	void ring_QAbstractSlider_freefunc(void *pState,void *pPointer);
	void ring_QSlider_freefunc(void *pState,void *pPointer);
	void ring_QDateEdit_freefunc(void *pState,void *pPointer);
	void ring_QDateTimeEdit_freefunc(void *pState,void *pPointer);
	void ring_QAbstractSpinBox_freefunc(void *pState,void *pPointer);
	void ring_QDial_freefunc(void *pState,void *pPointer);
	void ring_QCheckBox_freefunc(void *pState,void *pPointer);
	void ring_QAbstractButton_freefunc(void *pState,void *pPointer);
	void ring_QRadioButton_freefunc(void *pState,void *pPointer);
	void ring_QButtonGroup_freefunc(void *pState,void *pPointer);
	void ring_QAction_freefunc(void *pState,void *pPointer);
	void ring_QMessageBox_freefunc(void *pState,void *pPointer);
	void ring_QFileDialog_freefunc(void *pState,void *pPointer);
	void ring_QDirModel_freefunc(void *pState,void *pPointer);
	void ring_QFontDialog_freefunc(void *pState,void *pPointer);
	void ring_QDialog_freefunc(void *pState,void *pPointer);
	void ring_QColorDialog_freefunc(void *pState,void *pPointer);
	void ring_QLCDNumber_freefunc(void *pState,void *pPointer);
	void ring_QInputDialog_freefunc(void *pState,void *pPointer);
	void ring_QAllEvents_freefunc(void *pState,void *pPointer);
	void ring_QDesktopWidget_freefunc(void *pState,void *pPointer);
	void ring_QListWidgetItem_freefunc(void *pState,void *pPointer);
	void ring_QSystemTrayIcon_freefunc(void *pState,void *pPointer);
	void ring_RingCodeHighlighter_freefunc(void *pState,void *pPointer);
	void ring_QPlainTextEdit_freefunc(void *pState,void *pPointer);
	void ring_CodeEditor_freefunc(void *pState,void *pPointer);
	void ring_QGridLayout_freefunc(void *pState,void *pPointer);
	void ring_QHeaderView_freefunc(void *pState,void *pPointer);
	void ring_QSplashScreen_freefunc(void *pState,void *pPointer);
	void ring_QBoxLayout_freefunc(void *pState,void *pPointer);
	void ring_QLayout_freefunc(void *pState,void *pPointer);
	void ring_QScrollArea_freefunc(void *pState,void *pPointer);
	void ring_QSplitter_freefunc(void *pState,void *pPointer);
	void ring_QCompleter_freefunc(void *pState,void *pPointer);
	void ring_QCompleter2_freefunc(void *pState,void *pPointer);
	void ring_QCompleter3_freefunc(void *pState,void *pPointer);
	void ring_QCompleter4_freefunc(void *pState,void *pPointer);
	void ring_QMdiArea_freefunc(void *pState,void *pPointer);
	void ring_QMdiSubWindow_freefunc(void *pState,void *pPointer);
	void ring_QListView_freefunc(void *pState,void *pPointer);
	void ring_QToolButton_freefunc(void *pState,void *pPointer);
	void ring_QTextBrowser_freefunc(void *pState,void *pPointer);
	void ring_QStackedWidget_freefunc(void *pState,void *pPointer);
	void ring_QCalendarWidget_freefunc(void *pState,void *pPointer);
	void ring_QTabBar_freefunc(void *pState,void *pPointer);
	void ring_QScrollBar_freefunc(void *pState,void *pPointer);
	void ring_QGraphicsView_freefunc(void *pState,void *pPointer);
	void ring_QGraphicsScene_freefunc(void *pState,void *pPointer);
	void ring_QStyle_freefunc(void *pState,void *pPointer);
	void ring_QTest_freefunc(void *pState,void *pPointer);

// End of Functions Prototype - Functions used to Free Memory 


RING_FUNC(ring_QObject_blockSignals)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->blockSignals( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QObject_children)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	{
		QObjectList *pValue ; 
		pValue = (QObjectList *) RING_API_MALLOC(sizeof(QObjectList)) ;
		*pValue = pObject->children();
		RING_API_RETMANAGEDCPOINTER(pValue,"QObjectList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QObject_dumpObjectInfo)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	pObject->dumpObjectInfo();
}


RING_FUNC(ring_QObject_dumpObjectTree)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	pObject->dumpObjectTree();
}


RING_FUNC(ring_QObject_inherits)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->inherits(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QObject_installEventFilter)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->installEventFilter((QObject *) RING_API_GETCPOINTER(2,"QObject"));
}


RING_FUNC(ring_QObject_isWidgetType)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETNUMBER(pObject->isWidgetType());
}


RING_FUNC(ring_QObject_killTimer)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->killTimer( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QObject_moveToThread)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveToThread((QThread *) RING_API_GETCPOINTER(2,"QThread"));
}


RING_FUNC(ring_QObject_objectName)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETSTRING(pObject->objectName().toStdString().c_str());
}


RING_FUNC(ring_QObject_parent)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETCPOINTER(pObject->parent(),"QObject");
}


RING_FUNC(ring_QObject_property)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->property(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QObject_removeEventFilter)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeEventFilter((QObject *) RING_API_GETCPOINTER(2,"QObject"));
}


RING_FUNC(ring_QObject_setObjectName)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setObjectName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QObject_setParent)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setParent((QObject *) RING_API_GETCPOINTER(2,"QObject"));
}


RING_FUNC(ring_QObject_setProperty)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant")));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QObject_setProperty_2)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2), (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QObject_setProperty_3)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2), (float) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QObject_setProperty_4)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2), (double) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QObject_setProperty_5)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QObject_setProperty_int)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2), (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QObject_setProperty_float)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2), (float) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QObject_setProperty_double)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2), (double) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QObject_setProperty_string)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QObject_signalsBlocked)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETNUMBER(pObject->signalsBlocked());
}


RING_FUNC(ring_QObject_startTimer)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startTimer( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QObject_thread)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETCPOINTER(pObject->thread(),"QThread");
}


RING_FUNC(ring_QObject_deleteLater)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	pObject->deleteLater();
}


RING_FUNC(ring_QDir_absoluteFilePath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->absoluteFilePath(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDir_absolutePath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->absolutePath().toStdString().c_str());
}


RING_FUNC(ring_QDir_canonicalPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->canonicalPath().toStdString().c_str());
}


RING_FUNC(ring_QDir_cd)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->cd(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_cdUp)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->cdUp());
}


RING_FUNC(ring_QDir_count)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QDir_dirName)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->dirName().toStdString().c_str());
}


RING_FUNC(ring_QDir_entryInfoList)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QFileInfoList *pValue ; 
		pValue = (QFileInfoList *) RING_API_MALLOC(sizeof(QFileInfoList)) ;
		*pValue = pObject->entryInfoList(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"), (QDir::Filters )  (int) RING_API_GETNUMBER(3), (QDir::SortFlags )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFileInfoList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QDir_entryInfoList_2)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QFileInfoList *pValue ; 
		pValue = (QFileInfoList *) RING_API_MALLOC(sizeof(QFileInfoList)) ;
		*pValue = pObject->entryInfoList( (QDir::Filters )  (int) RING_API_GETNUMBER(2), (QDir::SortFlags )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFileInfoList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QDir_entryList)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->entryList(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"), (QDir::Filters )  (int) RING_API_GETNUMBER(3), (QDir::SortFlags )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QDir_entryList_2)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->entryList( (QDir::Filters )  (int) RING_API_GETNUMBER(2), (QDir::SortFlags )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QDir_exists)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->exists(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_exists_2)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->exists());
}


RING_FUNC(ring_QDir_filePath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->filePath(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDir_filter)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->filter());
}


RING_FUNC(ring_QDir_isAbsolute)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->isAbsolute());
}


RING_FUNC(ring_QDir_isReadable)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->isReadable());
}


RING_FUNC(ring_QDir_isRelative)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->isRelative());
}


RING_FUNC(ring_QDir_isRoot)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->isRoot());
}


RING_FUNC(ring_QDir_makeAbsolute)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->makeAbsolute());
}


RING_FUNC(ring_QDir_mkdir)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->mkdir(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_mkpath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->mkpath(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_nameFilters)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->nameFilters();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QDir_path)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->path().toStdString().c_str());
}


RING_FUNC(ring_QDir_refresh)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	pObject->refresh();
}


RING_FUNC(ring_QDir_relativeFilePath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->relativeFilePath(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDir_remove)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->remove(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_removeRecursively)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->removeRecursively());
}


RING_FUNC(ring_QDir_rename)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rename(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QDir_rmdir)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rmdir(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_rmpath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rmpath(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_setFilter)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilter( (QDir::Filters )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDir_setNameFilters)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	pObject->setNameFilters(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QDir_setPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDir_setSorting)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSorting( (QDir::SortFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDir_sorting)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETNUMBER(pObject->sorting());
}


RING_FUNC(ring_QDir_swap)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	pObject->swap(* (QDir  *) RING_API_GETCPOINTER(2,"QDir"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDir"));
}


RING_FUNC(ring_QDir_addSearchPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addSearchPath(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QDir_cleanPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->cleanPath(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDir_current)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->current();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QDir_currentPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->currentPath().toStdString().c_str());
}


RING_FUNC(ring_QDir_drives)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	{
		QFileInfoList *pValue ; 
		pValue = (QFileInfoList *) RING_API_MALLOC(sizeof(QFileInfoList)) ;
		*pValue = pObject->drives();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFileInfoList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QDir_fromNativeSeparators)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->fromNativeSeparators(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDir_home)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->home();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QDir_homePath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->homePath().toStdString().c_str());
}


RING_FUNC(ring_QDir_isAbsolutePath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAbsolutePath(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_isRelativePath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isRelativePath(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_match)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->match(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QDir_match_2)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->match(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"),RING_API_GETSTRING(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QDir_root)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->root();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QDir_rootPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->rootPath().toStdString().c_str());
}


RING_FUNC(ring_QDir_searchPaths)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->searchPaths(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QDir_separator)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->separator();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QDir_setCurrent)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setCurrent(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QDir_setSearchPaths)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSearchPaths(RING_API_GETSTRING(2),* (QStringList  *) RING_API_GETCPOINTER(3,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QStringList"));
}


RING_FUNC(ring_QDir_temp)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->temp();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QDir_tempPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->tempPath().toStdString().c_str());
}


RING_FUNC(ring_QDir_toNativeSeparators)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toNativeSeparators(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_topLevelDomain)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->topLevelDomain( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_authority)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->authority( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_clear)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	pObject->clear();
}


RING_FUNC(ring_QUrl_errorString)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QUrl_fileName)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->fileName( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_fragment)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->fragment( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_hasFragment)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->hasFragment());
}


RING_FUNC(ring_QUrl_hasQuery)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->hasQuery());
}


RING_FUNC(ring_QUrl_host)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->host( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_isEmpty)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QUrl_isLocalFile)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isLocalFile());
}


RING_FUNC(ring_QUrl_isParentOf)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isParentOf(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QUrl"));
}


RING_FUNC(ring_QUrl_isRelative)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isRelative());
}


RING_FUNC(ring_QUrl_isValid)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QUrl_password)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->password( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_path)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->path( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_port)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->port( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QUrl_query)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->query( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_resolved)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->resolved(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QUrl"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QUrl_scheme)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETSTRING(pObject->scheme().toStdString().c_str());
}


RING_FUNC(ring_QUrl_setAuthority)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAuthority(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setFragment)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFragment(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setHost)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHost(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setPassword)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPassword(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setPath)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPath(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setPort)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPort( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QUrl_setQuery)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setQuery(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setScheme)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScheme(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QUrl_setUrl)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUrl(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setUserInfo)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserInfo(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setUserName)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserName(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_swap)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	pObject->swap(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QUrl"));
}


RING_FUNC(ring_QUrl_toLocalFile)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETSTRING(pObject->toLocalFile().toStdString().c_str());
}


RING_FUNC(ring_QUrl_userInfo)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->userInfo( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_userName)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->userName( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_fromLocalFile)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->fromLocalFile(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QEvent_accept)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	pObject->accept();
}


RING_FUNC(ring_QEvent_ignore)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	pObject->ignore();
}


RING_FUNC(ring_QEvent_isAccepted)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	RING_API_RETNUMBER(pObject->isAccepted());
}


RING_FUNC(ring_QEvent_setAccepted)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccepted( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QEvent_spontaneous)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	RING_API_RETNUMBER(pObject->spontaneous());
}


RING_FUNC(ring_QEvent_type)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QTimer_interval)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->interval());
}


RING_FUNC(ring_QTimer_isActive)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QTimer_isSingleShot)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->isSingleShot());
}


RING_FUNC(ring_QTimer_setInterval)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInterval( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTimer_setSingleShot)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSingleShot( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTimer_timerId)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->timerId());
}


RING_FUNC(ring_QTimer_start)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	pObject->start();
}


RING_FUNC(ring_QTimer_stop)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	pObject->stop();
}


RING_FUNC(ring_QTimer_settimeoutEvent)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settimeoutEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTimer_gettimeoutEvent)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETSTRING(pObject->gettimeoutEvent());
}


RING_FUNC(ring_QByteArray_append)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->append(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_append_2)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->append(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_at)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->at( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QByteArray_capacity)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->capacity());
}


RING_FUNC(ring_QByteArray_chop)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->chop( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_clear)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	pObject->clear();
}


RING_FUNC(ring_QByteArray_constData)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETSTRING(pObject->constData());
}


RING_FUNC(ring_QByteArray_contains)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_count)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_data)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETSTRING(pObject->data());
}


RING_FUNC(ring_QByteArray_endsWith)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_fill)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fill( (char ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_indexOf)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_insert)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->insert( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_isEmpty)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QByteArray_isNull)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QByteArray_lastIndexOf)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_left)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->left( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_leftJustified)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->leftJustified( (int ) RING_API_GETNUMBER(2), (char ) RING_API_GETNUMBER(3), (bool ) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_length)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QByteArray_mid)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->mid( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_prepend)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->prepend(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_push_back)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_back(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QByteArray_push_front)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_front(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QByteArray_remove)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->remove( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_repeated)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->repeated( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_2)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QByteArray  *) RING_API_GETCPOINTER(4,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_3)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_4)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace( (char ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_5)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace( (char ) RING_API_GETNUMBER(2),* (QByteArray  *) RING_API_GETCPOINTER(3,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_6)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_7)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_8)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace(* (const QByteArray  *) RING_API_GETCPOINTER(2,"const QByteArray"),* (QByteArray  *) RING_API_GETCPOINTER(3,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_9)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace(* (const QByteArray  *) RING_API_GETCPOINTER(2,"const QByteArray"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_10)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace(RING_API_GETSTRING(2),* (QByteArray  *) RING_API_GETCPOINTER(3,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_replace_11)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->replace( (char ) RING_API_GETNUMBER(2), (char ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_reserve)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->reserve( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_resize)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_right)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->right( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_rightJustified)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->rightJustified( (int ) RING_API_GETNUMBER(2), (char ) RING_API_GETNUMBER(3), (bool ) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_setNum)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->setNum( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_setRawData)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->setRawData(RING_API_GETSTRING(2), (uint ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_simplified)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->simplified();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_size)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QByteArray_squeeze)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	pObject->squeeze();
}


RING_FUNC(ring_QByteArray_startsWith)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_swap)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	pObject->swap(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QByteArray_toBase64)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toBase64();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_toDouble)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QByteArray_toFloat)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toFloat((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QByteArray_toHex)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toHex();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_toInt)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toLong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		long *pValue ; 
		pValue = (long *) RING_API_MALLOC(sizeof(long)) ;
		*pValue = pObject->toLong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"long",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QByteArray_toLongLong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qlonglong *pValue ; 
		pValue = (qlonglong *) RING_API_MALLOC(sizeof(qlonglong)) ;
		*pValue = pObject->toLongLong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"qlonglong",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QByteArray_toLower)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLower();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_toPercentEncoding)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toPercentEncoding(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"),* (QByteArray *) RING_API_GETCPOINTER(3,"QByteArray"), (char ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_toShort)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		short *pValue ; 
		pValue = (short *) RING_API_MALLOC(sizeof(short)) ;
		*pValue = pObject->toShort((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"short",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QByteArray_toUInt)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUInt((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toULong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toULong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toULongLong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toULongLong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toUShort)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUShort((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toUpper)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toUpper();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_trimmed)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->trimmed();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_truncate)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->truncate( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_fromBase64)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromBase64(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_fromHex)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromHex(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_fromPercentEncoding)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromPercentEncoding(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"), (char ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_fromRawData)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromRawData(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QByteArray_number)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->number( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QIODevice_errorString)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QIODevice_getChar)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->getChar(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QIODevice_isOpen)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isOpen());
}


RING_FUNC(ring_QIODevice_isReadable)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isReadable());
}


RING_FUNC(ring_QIODevice_isTextModeEnabled)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isTextModeEnabled());
}


RING_FUNC(ring_QIODevice_isWritable)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isWritable());
}


RING_FUNC(ring_QIODevice_openMode)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->openMode());
}


RING_FUNC(ring_QIODevice_peek)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->peek(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_putChar)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->putChar( (char ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QIODevice_read)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->read(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_readAll)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->readAll();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QIODevice_readLine)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->readLine(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_setTextModeEnabled)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextModeEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QIODevice_ungetChar)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ungetChar( (char ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QIODevice_write)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->write(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_atEnd)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QIODevice_canReadLine)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->canReadLine());
}


RING_FUNC(ring_QIODevice_close)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	pObject->close();
}


RING_FUNC(ring_QIODevice_open)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->open( (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QIODevice_pos)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->pos());
}


RING_FUNC(ring_QIODevice_seek)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->seek( (qint64 ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QIODevice_size)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QIODevice_setaboutToCloseEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setaboutToCloseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_setbytesWrittenEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbytesWrittenEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_setreadChannelFinishedEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadChannelFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_setreadyReadEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadyReadEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_getaboutToCloseEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getaboutToCloseEvent());
}


RING_FUNC(ring_QIODevice_getbytesWrittenEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getbytesWrittenEvent());
}


RING_FUNC(ring_QIODevice_getreadChannelFinishedEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getreadChannelFinishedEvent());
}


RING_FUNC(ring_QIODevice_getreadyReadEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getreadyReadEvent());
}


RING_FUNC(ring_QFileInfo_created)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->created();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QFileInfo_absoluteDir)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->absoluteDir();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QFileInfo_absoluteFilePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->absoluteFilePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_absolutePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->absolutePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_baseName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->baseName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_bundleName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->bundleName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_caching)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->caching());
}


RING_FUNC(ring_QFileInfo_canonicalFilePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->canonicalFilePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_canonicalPath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->canonicalPath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_completeBaseName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->completeBaseName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_completeSuffix)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->completeSuffix().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_dir)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->dir();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QFileInfo_exists)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->exists());
}


RING_FUNC(ring_QFileInfo_fileName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->fileName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_filePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->filePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_group)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->group().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_groupId)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->groupId());
}


RING_FUNC(ring_QFileInfo_isAbsolute)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isAbsolute());
}


RING_FUNC(ring_QFileInfo_isBundle)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isBundle());
}


RING_FUNC(ring_QFileInfo_isDir)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isDir());
}


RING_FUNC(ring_QFileInfo_isExecutable)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isExecutable());
}


RING_FUNC(ring_QFileInfo_isFile)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isFile());
}


RING_FUNC(ring_QFileInfo_isHidden)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QFileInfo_isNativePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isNativePath());
}


RING_FUNC(ring_QFileInfo_isReadable)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isReadable());
}


RING_FUNC(ring_QFileInfo_isRelative)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isRelative());
}


RING_FUNC(ring_QFileInfo_isRoot)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isRoot());
}


RING_FUNC(ring_QFileInfo_isSymLink)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isSymLink());
}


RING_FUNC(ring_QFileInfo_isWritable)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isWritable());
}


RING_FUNC(ring_QFileInfo_lastModified)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->lastModified();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QFileInfo_lastRead)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->lastRead();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QFileInfo_makeAbsolute)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->makeAbsolute());
}


RING_FUNC(ring_QFileInfo_owner)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->owner().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_ownerId)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->ownerId());
}


RING_FUNC(ring_QFileInfo_path)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->path().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_permission)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->permission( (QFileDevice::Permission )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFileInfo_permissions)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->permissions());
}


RING_FUNC(ring_QFileInfo_refresh)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	pObject->refresh();
}


RING_FUNC(ring_QFileInfo_setCaching)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCaching( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileInfo_setFile)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFile(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileInfo_size)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QFileInfo_suffix)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->suffix().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_swap)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	pObject->swap(* (QFileInfo *) RING_API_GETCPOINTER(2,"QFileInfo"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFileInfo"));
}


RING_FUNC(ring_QFileInfo_symLinkTarget)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->symLinkTarget().toStdString().c_str());
}


RING_FUNC(ring_QStringList_swap)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->swap( (int) RING_API_GETNUMBER(2), (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStringList_join)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->join(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QStringList_sort)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->sort();
}


RING_FUNC(ring_QStringList_removeDuplicates)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->removeDuplicates());
}


RING_FUNC(ring_QStringList_filter)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->filter(RING_API_GETSTRING(2), (Qt::CaseSensitivity)  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QStringList_replaceInStrings)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->replaceInStrings(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (Qt::CaseSensitivity)  (int) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QStringList_append)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_at)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->at( (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QStringList_back)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->back().toStdString().c_str());
}


RING_FUNC(ring_QStringList_clear)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->clear();
}


RING_FUNC(ring_QStringList_contains)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_count)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QStringList_empty)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->empty());
}


RING_FUNC(ring_QStringList_endsWith)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_first)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->first().toStdString().c_str());
}


RING_FUNC(ring_QStringList_front)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->front().toStdString().c_str());
}


RING_FUNC(ring_QStringList_indexOf)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2), (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringList_insert)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insert( (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QStringList_isEmpty)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QStringList_last)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->last().toStdString().c_str());
}


RING_FUNC(ring_QStringList_lastIndexOf)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(RING_API_GETSTRING(2), (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringList_length)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QStringList_move)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->move( (int) RING_API_GETNUMBER(2), (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStringList_pop_back)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->pop_back();
}


RING_FUNC(ring_QStringList_pop_front)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->pop_front();
}


RING_FUNC(ring_QStringList_prepend)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->prepend(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_push_back)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_back(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_push_front)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_front(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_removeAll)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->removeAll(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_removeAt)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeAt( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStringList_removeFirst)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->removeFirst();
}


RING_FUNC(ring_QStringList_removeLast)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->removeLast();
}


RING_FUNC(ring_QStringList_removeOne)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->removeOne(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_replace)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->replace( (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QStringList_reserve)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->reserve( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStringList_size)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QStringList_startsWith)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_takeAt)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->takeAt( (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QStringList_takeFirst)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->takeFirst().toStdString().c_str());
}


RING_FUNC(ring_QStringList_takeLast)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->takeLast().toStdString().c_str());
}


RING_FUNC(ring_QStringList_value)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->value( (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QRect_adjust)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->adjust( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QRect_adjusted)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->adjusted( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QRect_bottom)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->bottom());
}


RING_FUNC(ring_QRect_bottomLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->bottomLeft();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QRect_bottomRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->bottomRight();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QRect_center)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->center();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QRect_contains)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (bool ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QRect_getCoords)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getCoords(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QRect_getRect)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRect(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QRect_height)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QRect_intersected)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->intersected(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QRect_intersects)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->intersects(* (QRect *) RING_API_GETCPOINTER(2,"QRect")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QRect_isEmpty)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QRect_isNull)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QRect_isValid)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRect_left)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->left());
}


RING_FUNC(ring_QRect_moveBottom)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveBottom( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveBottomLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveBottomLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_moveBottomRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveBottomRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_moveCenter)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveCenter(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_moveLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveLeft( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveRight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveTo)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveTo( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRect_moveTop)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveTop( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveTopLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveTopLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_moveTopRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveTopRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_normalized)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->normalized();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QRect_right)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->right());
}


RING_FUNC(ring_QRect_setBottom)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBottom( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setBottomLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setBottomLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_setBottomRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setBottomRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_setCoords)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCoords( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QRect_setHeight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLeft( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setRect)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QRect_setRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setSize)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QRect_setTop)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTop( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setTopLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setTopLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_setTopRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setTopRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRect_setWidth)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setX)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setY)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_size)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QRect_top)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->top());
}


RING_FUNC(ring_QRect_topLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->topLeft();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QRect_topRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->topRight();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QRect_translate)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRect_translated)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->translated( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QRect_united)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->united(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QRect_width)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QRect_x)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QRect_y)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QTime_elapsed)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->elapsed());
}


RING_FUNC(ring_QTime_restart)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->restart());
}


RING_FUNC(ring_QTime_start)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	pObject->start();
}


RING_FUNC(ring_QTime_addMSecs)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->addMSecs( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QTime_addSecs)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->addSecs( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QTime_hour)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->hour());
}


RING_FUNC(ring_QTime_isNull)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QTime_isValid)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QTime_minute)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->minute());
}


RING_FUNC(ring_QTime_msec)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->msec());
}


RING_FUNC(ring_QTime_msecsSinceStartOfDay)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->msecsSinceStartOfDay());
}


RING_FUNC(ring_QTime_msecsTo)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->msecsTo(* (QTime *) RING_API_GETCPOINTER(2,"QTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QTime_second)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->second());
}


RING_FUNC(ring_QTime_secsTo)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->secsTo(* (QTime *) RING_API_GETCPOINTER(2,"QTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QTime_setHMS)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setHMS( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5)));
}


RING_FUNC(ring_QTime_toString)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QTime_currentTime)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->currentTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QTime_fromMSecsSinceStartOfDay)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->fromMSecsSinceStartOfDay( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QTime_fromString)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QDate_longDayName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->longDayName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_longMonthName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->longMonthName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_shortDayName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->shortDayName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_shortMonthName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->shortMonthName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_addDays)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->addDays( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDate_addMonths)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->addMonths( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDate_addYears)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->addYears( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDate_day)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->day());
}


RING_FUNC(ring_QDate_dayOfWeek)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->dayOfWeek());
}


RING_FUNC(ring_QDate_dayOfYear)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->dayOfYear());
}


RING_FUNC(ring_QDate_daysInMonth)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->daysInMonth());
}


RING_FUNC(ring_QDate_daysInYear)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->daysInYear());
}


RING_FUNC(ring_QDate_daysTo)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->daysTo(* (QDate *) RING_API_GETCPOINTER(2,"QDate")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QDate_getDate)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getDate(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
}


RING_FUNC(ring_QDate_isNull)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QDate_isValid)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QDate_month)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->month());
}


RING_FUNC(ring_QDate_setDate)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setDate( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QDate_toJulianDay)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->toJulianDay());
}


RING_FUNC(ring_QDate_toString)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_weekNumber)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->weekNumber(RING_API_GETINTPOINTER(2)));
	RING_API_ACCEPTINTVALUE(1) ;
}


RING_FUNC(ring_QDate_year)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->year());
}


RING_FUNC(ring_QDate_currentDate)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->currentDate();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDate_fromJulianDay)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->fromJulianDay( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDate_fromString)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDate_isLeapYear)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isLeapYear( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTextCodec_codecForName)
{
	RING_API_RETCPOINTER( QTextCodec::codecForName(RING_API_GETSTRING(1)) , "QTextCodec");
}

RING_FUNC(ring_QTextCodec_setCodecForLocale)
{
	 QTextCodec::setCodecForLocale( (QTextCodec *) RING_API_GETCPOINTER(1,"QTextCodec"));
}


RING_FUNC(ring_QVariant_canConvert)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->canConvert( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QVariant_clear)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	pObject->clear();
}


RING_FUNC(ring_QVariant_convert)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->convert( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QVariant_isNull)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QVariant_isValid)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QVariant_swap)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	pObject->swap(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QVariant_toBitArray)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QBitArray *pValue ; 
		pValue = (QBitArray *) RING_API_MALLOC(sizeof(QBitArray)) ;
		*pValue = pObject->toBitArray();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitArray",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toBool)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->toBool());
}


RING_FUNC(ring_QVariant_toByteArray)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toByteArray();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QVariant_toChar)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->toChar();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QVariant_toDate)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->toDate();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QVariant_toDateTime)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toDateTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QVariant_toDouble)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toEasingCurve)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QEasingCurve *pValue ; 
		pValue = (QEasingCurve *) RING_API_MALLOC(sizeof(QEasingCurve)) ;
		*pValue = pObject->toEasingCurve();
		RING_API_RETMANAGEDCPOINTER(pValue,"QEasingCurve",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toFloat)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toFloat((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toInt)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toJsonArray)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->toJsonArray();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonArray",ring_QJsonArray_freefunc);
	}
}


RING_FUNC(ring_QVariant_toJsonDocument)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->toJsonDocument();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonDocument",ring_QJsonDocument_freefunc);
	}
}


RING_FUNC(ring_QVariant_toJsonObject)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->toJsonObject();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonObject",ring_QJsonObject_freefunc);
	}
}


RING_FUNC(ring_QVariant_toJsonValue)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->toJsonValue();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QVariant_toLine)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QLine *pValue ; 
		pValue = (QLine *) RING_API_MALLOC(sizeof(QLine)) ;
		*pValue = pObject->toLine();
		RING_API_RETMANAGEDCPOINTER(pValue,"QLine",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toLineF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QLineF *pValue ; 
		pValue = (QLineF *) RING_API_MALLOC(sizeof(QLineF)) ;
		*pValue = pObject->toLineF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QLineF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toLocale)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QLocale *pValue ; 
		pValue = new QLocale() ;
		*pValue = pObject->toLocale();
		RING_API_RETMANAGEDCPOINTER(pValue,"QLocale",ring_QLocale_freefunc);
	}
}


RING_FUNC(ring_QVariant_toLongLong)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qlonglong *pValue ; 
		pValue = (qlonglong *) RING_API_MALLOC(sizeof(qlonglong)) ;
		*pValue = pObject->toLongLong((bool *) RING_API_GETCPOINTER(2,"bool"));
		RING_API_RETMANAGEDCPOINTER(pValue,"qlonglong",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toModelIndex)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->toModelIndex();
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toPoint)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->toPoint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QVariant_toPointF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->toPointF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QVariant_toReal)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toReal((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toRect)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->toRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QVariant_toRectF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->toRectF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toRegExp)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRegExp *pValue ; 
		pValue = (QRegExp *) RING_API_MALLOC(sizeof(QRegExp)) ;
		*pValue = pObject->toRegExp();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegExp",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toRegularExpression)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRegularExpression *pValue ; 
		pValue = new QRegularExpression() ;
		*pValue = pObject->toRegularExpression();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegularExpression",ring_QRegularExpression_freefunc);
	}
}


RING_FUNC(ring_QVariant_toSize)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->toSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QVariant_toSizeF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) RING_API_MALLOC(sizeof(QSizeF)) ;
		*pValue = pObject->toSizeF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSizeF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toStringList)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->toStringList();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QVariant_toTime)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->toTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QVariant_toUInt)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUInt((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toULongLong)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qulonglong *pValue ; 
		pValue = (qulonglong *) RING_API_MALLOC(sizeof(qulonglong)) ;
		*pValue = pObject->toULongLong((bool *) RING_API_GETCPOINTER(2,"bool"));
		RING_API_RETMANAGEDCPOINTER(pValue,"qulonglong",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QVariant_toUrl)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->toUrl();
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QVariant_toUuid)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QUuid *pValue ; 
		pValue = new QUuid() ;
		*pValue = pObject->toUuid();
		RING_API_RETMANAGEDCPOINTER(pValue,"QUuid",ring_QUuid_freefunc);
	}
}


RING_FUNC(ring_QVariant_type)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QVariant_typeName)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETSTRING(pObject->typeName());
}


RING_FUNC(ring_QVariant_userType)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->userType());
}


RING_FUNC(ring_QVariant_toString)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QXmlStreamReader_addData)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->addData(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QXmlStreamReader_addData_2)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addData(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamReader_addData_3)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addData(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamReader_addExtraNamespaceDeclaration)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->addExtraNamespaceDeclaration(* (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(2,"QXmlStreamNamespaceDeclaration"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QXmlStreamNamespaceDeclaration"));
}


RING_FUNC(ring_QXmlStreamReader_addExtraNamespaceDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->addExtraNamespaceDeclarations(* (QXmlStreamNamespaceDeclarations *) RING_API_GETCPOINTER(2,"QXmlStreamNamespaceDeclarations"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QXmlStreamNamespaceDeclarations"));
}


RING_FUNC(ring_QXmlStreamReader_atEnd)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QXmlStreamReader_attributes)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamAttributes *pValue ; 
		pValue = new QXmlStreamAttributes() ;
		*pValue = pObject->attributes();
		RING_API_RETMANAGEDCPOINTER(pValue,"QXmlStreamAttributes",ring_QXmlStreamAttributes_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_characterOffset)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->characterOffset());
}


RING_FUNC(ring_QXmlStreamReader_clear)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->clear();
}


RING_FUNC(ring_QXmlStreamReader_columnNumber)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->columnNumber());
}


RING_FUNC(ring_QXmlStreamReader_device)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETCPOINTER(pObject->device(),"QIODevice");
}


RING_FUNC(ring_QXmlStreamReader_documentEncoding)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->documentEncoding();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_documentVersion)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->documentVersion();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_dtdName)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->dtdName();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_dtdPublicId)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->dtdPublicId();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_dtdSystemId)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->dtdSystemId();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_entityDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamEntityDeclarations *pValue ; 
		pValue = (QXmlStreamEntityDeclarations *) RING_API_MALLOC(sizeof(QXmlStreamEntityDeclarations)) ;
		*pValue = pObject->entityDeclarations();
		RING_API_RETMANAGEDCPOINTER(pValue,"QXmlStreamEntityDeclarations",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QXmlStreamReader_entityResolver)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETCPOINTER(pObject->entityResolver(),"QXmlStreamEntityResolver");
}


RING_FUNC(ring_QXmlStreamReader_error)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QXmlStreamReader_errorString)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QXmlStreamReader_hasError)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->hasError());
}


RING_FUNC(ring_QXmlStreamReader_isCDATA)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isCDATA());
}


RING_FUNC(ring_QXmlStreamReader_isCharacters)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isCharacters());
}


RING_FUNC(ring_QXmlStreamReader_isComment)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isComment());
}


RING_FUNC(ring_QXmlStreamReader_isDTD)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isDTD());
}


RING_FUNC(ring_QXmlStreamReader_isEndDocument)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isEndDocument());
}


RING_FUNC(ring_QXmlStreamReader_isEndElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isEndElement());
}


RING_FUNC(ring_QXmlStreamReader_isEntityReference)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isEntityReference());
}


RING_FUNC(ring_QXmlStreamReader_isProcessingInstruction)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isProcessingInstruction());
}


RING_FUNC(ring_QXmlStreamReader_isStandaloneDocument)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isStandaloneDocument());
}


RING_FUNC(ring_QXmlStreamReader_isStartDocument)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isStartDocument());
}


RING_FUNC(ring_QXmlStreamReader_isStartElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isStartElement());
}


RING_FUNC(ring_QXmlStreamReader_isWhitespace)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isWhitespace());
}


RING_FUNC(ring_QXmlStreamReader_lineNumber)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->lineNumber());
}


RING_FUNC(ring_QXmlStreamReader_name)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_namespaceDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamNamespaceDeclarations *pValue ; 
		pValue = (QXmlStreamNamespaceDeclarations *) RING_API_MALLOC(sizeof(QXmlStreamNamespaceDeclarations)) ;
		*pValue = pObject->namespaceDeclarations();
		RING_API_RETMANAGEDCPOINTER(pValue,"QXmlStreamNamespaceDeclarations",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QXmlStreamReader_namespaceProcessing)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->namespaceProcessing());
}


RING_FUNC(ring_QXmlStreamReader_namespaceUri)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->namespaceUri();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_notationDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamNotationDeclarations *pValue ; 
		pValue = (QXmlStreamNotationDeclarations *) RING_API_MALLOC(sizeof(QXmlStreamNotationDeclarations)) ;
		*pValue = pObject->notationDeclarations();
		RING_API_RETMANAGEDCPOINTER(pValue,"QXmlStreamNotationDeclarations",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QXmlStreamReader_prefix)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->prefix();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_processingInstructionData)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->processingInstructionData();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_processingInstructionTarget)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->processingInstructionTarget();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_qualifiedName)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->qualifiedName();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_raiseError)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->raiseError(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamReader_readElementText)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->readElementText( (QXmlStreamReader::ReadElementTextBehaviour)  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QXmlStreamReader_readNext)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->readNext());
}


RING_FUNC(ring_QXmlStreamReader_readNextStartElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->readNextStartElement());
}


RING_FUNC(ring_QXmlStreamReader_setDevice)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevice((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"));
}


RING_FUNC(ring_QXmlStreamReader_setEntityResolver)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEntityResolver((QXmlStreamEntityResolver *) RING_API_GETCPOINTER(2,"QXmlStreamEntityResolver"));
}


RING_FUNC(ring_QXmlStreamReader_setNamespaceProcessing)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNamespaceProcessing( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QXmlStreamReader_skipCurrentElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->skipCurrentElement();
}


RING_FUNC(ring_QXmlStreamReader_text)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->text();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamReader_tokenString)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETSTRING(pObject->tokenString().toStdString().c_str());
}


RING_FUNC(ring_QXmlStreamReader_tokenType)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->tokenType());
}


RING_FUNC(ring_QXmlStreamWriter_autoFormatting)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETNUMBER(pObject->autoFormatting());
}


RING_FUNC(ring_QXmlStreamWriter_autoFormattingIndent)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETNUMBER(pObject->autoFormattingIndent());
}


RING_FUNC(ring_QXmlStreamWriter_codec)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETCPOINTER(pObject->codec(),"QTextCodec");
}


RING_FUNC(ring_QXmlStreamWriter_device)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETCPOINTER(pObject->device(),"QIODevice");
}


RING_FUNC(ring_QXmlStreamWriter_hasError)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETNUMBER(pObject->hasError());
}


RING_FUNC(ring_QXmlStreamWriter_setAutoFormatting)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoFormatting( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QXmlStreamWriter_setAutoFormattingIndent)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoFormattingIndent( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QXmlStreamWriter_setCodec)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCodec((QTextCodec *) RING_API_GETCPOINTER(2,"QTextCodec"));
}


RING_FUNC(ring_QXmlStreamWriter_setCodec_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCodec(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_setDevice)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevice((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttribute)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeAttribute(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttribute_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeAttribute(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttribute_3)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeAttribute(* (QXmlStreamAttribute *) RING_API_GETCPOINTER(2,"QXmlStreamAttribute"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QXmlStreamAttribute"));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttributes)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeAttributes(* (QXmlStreamAttributes *) RING_API_GETCPOINTER(2,"QXmlStreamAttributes"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QXmlStreamAttributes"));
}


RING_FUNC(ring_QXmlStreamWriter_writeCDATA)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeCDATA(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeCharacters)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeCharacters(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeComment)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeComment(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeCurrentToken)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeCurrentToken(* (QXmlStreamReader  *) RING_API_GETCPOINTER(2,"QXmlStreamReader"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QXmlStreamReader"));
}


RING_FUNC(ring_QXmlStreamWriter_writeDTD)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeDTD(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeDefaultNamespace)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeDefaultNamespace(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeEmptyElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeEmptyElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeEmptyElement_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeEmptyElement(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeEndDocument)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeEndDocument();
}


RING_FUNC(ring_QXmlStreamWriter_writeEndElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeEndElement();
}


RING_FUNC(ring_QXmlStreamWriter_writeEntityReference)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeEntityReference(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeNamespace)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeNamespace(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeProcessingInstruction)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeProcessingInstruction(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartDocument)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartDocument(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartDocument_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartDocument(RING_API_GETSTRING(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartDocument_3)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeStartDocument();
}


RING_FUNC(ring_QXmlStreamWriter_writeStartElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartElement_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartElement(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeTextElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeTextElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QXmlStreamWriter_writeTextElement_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeTextElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamNotationDeclaration_name)
{
	QXmlStreamNotationDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamNotationDeclaration_publicId)
{
	QXmlStreamNotationDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->publicId();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamNotationDeclaration_systemId)
{
	QXmlStreamNotationDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->systemId();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamNamespaceDeclaration_namespaceUri)
{
	QXmlStreamNamespaceDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->namespaceUri();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamNamespaceDeclaration_prefix)
{
	QXmlStreamNamespaceDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->prefix();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_name)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_notationName)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->notationName();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_publicId)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->publicId();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_systemId)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->systemId();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_value)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttributes_append)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QXmlStreamAttributes_append_2)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamAttributes_hasAttribute)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hasAttribute(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QXmlStreamAttributes_hasAttribute_2)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	RING_API_RETNUMBER(pObject->hasAttribute(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QXmlStreamAttributes_hasAttribute_3)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hasAttribute(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QXmlStreamAttributes_value)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_2)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(RING_API_GETSTRING(2),* (QLatin1String  *) RING_API_GETCPOINTER(3,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QLatin1String"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_3)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"),* (QLatin1String  *) RING_API_GETCPOINTER(3,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QLatin1String"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_4)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_5)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttribute_isDefault)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	RING_API_RETNUMBER(pObject->isDefault());
}


RING_FUNC(ring_QXmlStreamAttribute_name)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttribute_namespaceUri)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->namespaceUri();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttribute_prefix)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->prefix();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttribute_qualifiedName)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->qualifiedName();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QXmlStreamAttribute_value)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QRegularExpression_captureCount)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->captureCount());
}


RING_FUNC(ring_QRegularExpression_errorString)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QRegularExpression_globalMatch)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRegularExpressionMatchIterator *pValue ; 
		pValue = new QRegularExpressionMatchIterator() ;
		*pValue = pObject->globalMatch(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (QRegularExpression::MatchType )  (int) RING_API_GETNUMBER(4), (QRegularExpression::MatchOptions )  (int) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegularExpressionMatchIterator",ring_QRegularExpressionMatchIterator_freefunc);
	}
}


RING_FUNC(ring_QRegularExpression_isValid)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRegularExpression_match)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRegularExpressionMatch *pValue ; 
		pValue = new QRegularExpressionMatch() ;
		*pValue = pObject->match(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (QRegularExpression::MatchType )  (int) RING_API_GETNUMBER(4), (QRegularExpression::MatchOptions )  (int) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegularExpressionMatch",ring_QRegularExpressionMatch_freefunc);
	}
}


RING_FUNC(ring_QRegularExpression_namedCaptureGroups)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->namedCaptureGroups();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QRegularExpression_pattern)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETSTRING(pObject->pattern().toStdString().c_str());
}


RING_FUNC(ring_QRegularExpression_patternErrorOffset)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->patternErrorOffset());
}


RING_FUNC(ring_QRegularExpression_patternOptions)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->patternOptions());
}


RING_FUNC(ring_QRegularExpression_setPattern)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPattern(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRegularExpression_setPatternOptions)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPatternOptions( (QRegularExpression::PatternOptions )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRegularExpression_swap)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	pObject->swap(* (QRegularExpression   *) RING_API_GETCPOINTER(2,"QRegularExpression"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegularExpression"));
}


RING_FUNC(ring_QRegularExpressionMatch_captured)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->captured( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QRegularExpressionMatch_captured_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETSTRING(pObject->captured(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedEnd)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->capturedEnd( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedEnd_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->capturedEnd(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedLength)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->capturedLength( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedLength_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->capturedLength(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedRef)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->capturedRef( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QRegularExpressionMatch_capturedRef_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->capturedRef(* (const QString   *) RING_API_GETCPOINTER(2,"const QString"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QString"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QRegularExpressionMatch_capturedStart)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->capturedStart( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedStart_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->capturedStart(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedTexts)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->capturedTexts();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QRegularExpressionMatch_hasMatch)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->hasMatch());
}


RING_FUNC(ring_QRegularExpressionMatch_hasPartialMatch)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->hasPartialMatch());
}


RING_FUNC(ring_QRegularExpressionMatch_isValid)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRegularExpressionMatch_lastCapturedIndex)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->lastCapturedIndex());
}


RING_FUNC(ring_QRegularExpressionMatch_matchOptions)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->matchOptions());
}


RING_FUNC(ring_QRegularExpressionMatch_matchType)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->matchType());
}


RING_FUNC(ring_QRegularExpressionMatch_regularExpression)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	{
		QRegularExpression *pValue ; 
		pValue = new QRegularExpression() ;
		*pValue = pObject->regularExpression();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegularExpression",ring_QRegularExpression_freefunc);
	}
}


RING_FUNC(ring_QRegularExpressionMatch_swap)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	pObject->swap(* (QRegularExpressionMatch   *) RING_API_GETCPOINTER(2,"QRegularExpressionMatch"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegularExpressionMatch"));
}


RING_FUNC(ring_QRegularExpressionMatchIterator_hasNext)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->hasNext());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_isValid)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_matchOptions)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->matchOptions());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_matchType)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->matchType());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_next)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	{
		QRegularExpressionMatch *pValue ; 
		pValue = new QRegularExpressionMatch() ;
		*pValue = pObject->next();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegularExpressionMatch",ring_QRegularExpressionMatch_freefunc);
	}
}


RING_FUNC(ring_QRegularExpressionMatchIterator_peekNext)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	{
		QRegularExpressionMatch *pValue ; 
		pValue = new QRegularExpressionMatch() ;
		*pValue = pObject->peekNext();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegularExpressionMatch",ring_QRegularExpressionMatch_freefunc);
	}
}


RING_FUNC(ring_QRegularExpressionMatchIterator_regularExpression)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	{
		QRegularExpression *pValue ; 
		pValue = new QRegularExpression() ;
		*pValue = pObject->regularExpression();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegularExpression",ring_QRegularExpression_freefunc);
	}
}


RING_FUNC(ring_QRegularExpressionMatchIterator_swap)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	pObject->swap(* (QRegularExpressionMatchIterator  *) RING_API_GETCPOINTER(2,"QRegularExpressionMatchIterator"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegularExpressionMatchIterator"));
}


RING_FUNC(ring_QJsonArray_append)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->append(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_at)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->at( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QJsonArray_contains)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->contains(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_count)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QJsonArray_empty)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->empty());
}


RING_FUNC(ring_QJsonArray_first)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->first();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QJsonArray_insert)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insert( (int ) RING_API_GETNUMBER(2),* (QJsonValue   *) RING_API_GETCPOINTER(3,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_isEmpty)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QJsonArray_last)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->last();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QJsonArray_pop_back)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->pop_back();
}


RING_FUNC(ring_QJsonArray_pop_front)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->pop_front();
}


RING_FUNC(ring_QJsonArray_prepend)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->prepend(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_push_back)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->push_back(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_push_front)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->push_front(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_removeAt)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeAt( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QJsonArray_removeFirst)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->removeFirst();
}


RING_FUNC(ring_QJsonArray_removeLast)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->removeLast();
}


RING_FUNC(ring_QJsonArray_replace)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->replace( (int ) RING_API_GETNUMBER(2),* (QJsonValue   *) RING_API_GETCPOINTER(3,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_size)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QJsonArray_takeAt)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->takeAt( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QJsonArray_toVariantList)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QVariantList *pValue ; 
		pValue = (QVariantList *) RING_API_MALLOC(sizeof(QVariantList)) ;
		*pValue = pObject->toVariantList();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariantList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QJsonArray_fromStringList)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->fromStringList(* (QStringList   *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonArray",ring_QJsonArray_freefunc);
	}
}


RING_FUNC(ring_QJsonArray_fromVariantList)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->fromVariantList(* (QVariantList   *) RING_API_GETCPOINTER(2,"QVariantList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariantList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonArray",ring_QJsonArray_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_rawData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->rawData(RING_API_GETINTPOINTER(2)));
	RING_API_ACCEPTINTVALUE(1) ;
}


RING_FUNC(ring_QJsonDocument_toBinaryData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toBinaryData();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_fromBinaryData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromBinaryData(* (QByteArray   *) RING_API_GETCPOINTER(2,"QByteArray"), (QJsonDocument::DataValidation )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonDocument",ring_QJsonDocument_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_fromRawData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromRawData(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (QJsonDocument::DataValidation )  (int) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonDocument",ring_QJsonDocument_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_array)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->array();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonArray",ring_QJsonArray_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_isArray)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isArray());
}


RING_FUNC(ring_QJsonDocument_isEmpty)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QJsonDocument_isNull)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QJsonDocument_isObject)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isObject());
}


RING_FUNC(ring_QJsonDocument_object)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->object();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonObject",ring_QJsonObject_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_setArray)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	pObject->setArray(* (QJsonArray   *) RING_API_GETCPOINTER(2,"QJsonArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonArray"));
}


RING_FUNC(ring_QJsonDocument_setObject)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	pObject->setObject(* (QJsonObject   *) RING_API_GETCPOINTER(2,"QJsonObject"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonObject"));
}


RING_FUNC(ring_QJsonDocument_toJson)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toJson( (QJsonDocument::JsonFormat )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_toVariant)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->toVariant();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_fromJson)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromJson(* (QByteArray   *) RING_API_GETCPOINTER(2,"QByteArray"),(QJsonParseError *) RING_API_GETCPOINTER(3,"QJsonParseError"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonDocument",ring_QJsonDocument_freefunc);
	}
}


RING_FUNC(ring_QJsonDocument_fromVariant)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromVariant(* (QVariant   *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariant"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonDocument",ring_QJsonDocument_freefunc);
	}
}


RING_FUNC(ring_QJsonObject_contains)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QJsonObject_count)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QJsonObject_empty)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->empty());
}


RING_FUNC(ring_QJsonObject_isEmpty)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QJsonObject_keys)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->keys();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QJsonObject_length)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QJsonObject_remove)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->remove(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QJsonObject_size)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QJsonObject_take)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->take(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QJsonObject_toVariantMap)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	{
		QVariantMap *pValue ; 
		pValue = (QVariantMap *) RING_API_MALLOC(sizeof(QVariantMap)) ;
		*pValue = pObject->toVariantMap();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariantMap",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QJsonObject_value)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->value(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QJsonObject_fromVariantMap)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->fromVariantMap(* (QVariantMap   *) RING_API_GETCPOINTER(2,"QVariantMap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariantMap"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonObject",ring_QJsonObject_freefunc);
	}
}


RING_FUNC(ring_QJsonParseError_errorString)
{
	QJsonParseError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonParseError *) RING_API_GETCPOINTER(1,"QJsonParseError");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QJsonValue_isArray)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isArray());
}


RING_FUNC(ring_QJsonValue_isBool)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isBool());
}


RING_FUNC(ring_QJsonValue_isDouble)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isDouble());
}


RING_FUNC(ring_QJsonValue_isNull)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QJsonValue_isObject)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isObject());
}


RING_FUNC(ring_QJsonValue_isString)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isString());
}


RING_FUNC(ring_QJsonValue_isUndefined)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isUndefined());
}


RING_FUNC(ring_QJsonValue_toArray)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->toArray(* (QJsonArray   *) RING_API_GETCPOINTER(2,"QJsonArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonArray"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonArray",ring_QJsonArray_freefunc);
	}
}


RING_FUNC(ring_QJsonValue_toArray_2)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->toArray();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonArray",ring_QJsonArray_freefunc);
	}
}


RING_FUNC(ring_QJsonValue_toBool)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toBool( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QJsonValue_toDouble)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble( (double ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QJsonValue_toInt)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QJsonValue_toObject)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->toObject(* (QJsonObject   *) RING_API_GETCPOINTER(2,"QJsonObject"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QJsonObject"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonObject",ring_QJsonObject_freefunc);
	}
}


RING_FUNC(ring_QJsonValue_toObject_2)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->toObject();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonObject",ring_QJsonObject_freefunc);
	}
}


RING_FUNC(ring_QJsonValue_toString)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QJsonValue_toVariant)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->toVariant();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QJsonValue_type)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonValue::Type *pValue ; 
		pValue = (QJsonValue::Type *) RING_API_MALLOC(sizeof(QJsonValue::Type)) ;
		*pValue = pObject->type();
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue::Type",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QJsonValue_fromVariant)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->fromVariant(* (QVariant   *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariant"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QJsonValue",ring_QJsonValue_freefunc);
	}
}


RING_FUNC(ring_QPointF_isNull)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPointF_manhattanLength)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->manhattanLength());
}


RING_FUNC(ring_QPointF_rx)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->rx());
}


RING_FUNC(ring_QPointF_ry)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->ry());
}


RING_FUNC(ring_QPointF_setX)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPointF_setY)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPointF_toPoint)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->toPoint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QPointF_x)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QPointF_y)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QPoint_isNull)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPoint_manhattanLength)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->manhattanLength());
}


RING_FUNC(ring_QPoint_rx)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->rx());
}


RING_FUNC(ring_QPoint_ry)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->ry());
}


RING_FUNC(ring_QPoint_setX)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPoint_setY)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPoint_x)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QPoint_y)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QString2_split)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(RING_API_GETSTRING(2), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QString2_split_2)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QString2_split_3)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(* (QRegExp   *) RING_API_GETCPOINTER(2,"QRegExp"), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegExp"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QString2_split_4)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(* (QRegularExpression   *) RING_API_GETCPOINTER(2,"QRegularExpression"), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegularExpression"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QString2_append)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->append(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QString2_append_2)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETSTRING(pObject->append(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QString2_toUtf8)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toUtf8();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QString2_toLatin1)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLatin1();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QString2_toLocal8Bit)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLocal8Bit();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QString2_unicode)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETCPOINTER(pObject->unicode(),"QChar");
}


RING_FUNC(ring_QString2_number)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->number( (ulong ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QString2_count)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QString2_left)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->left( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QString2_mid)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->mid( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QString2_right)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->right( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QString2_compare)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QString2_contains)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QString2_indexOf)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QString2_insert)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->insert( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3)).toStdString().c_str());
}


RING_FUNC(ring_QString2_isRightToLeft)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETNUMBER(pObject->isRightToLeft());
}


RING_FUNC(ring_QString2_repeated)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->repeated( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QString2_replace)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->replace( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4)).toStdString().c_str());
}


RING_FUNC(ring_QString2_replace_2)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->replace(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (Qt::CaseSensitivity)  (int) RING_API_GETNUMBER(4)).toStdString().c_str());
}


RING_FUNC(ring_QString2_startsWith)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QString2_endsWith)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QString2_toHtmlEscaped)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETSTRING(pObject->toHtmlEscaped().toStdString().c_str());
}


RING_FUNC(ring_QString2_clear)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	pObject->clear();
}


RING_FUNC(ring_QString2_isNull)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QString2_resize)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QString2_fill)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->fill(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (int ) RING_API_GETNUMBER(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QString2_localeAwareCompare)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->localeAwareCompare(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QString2_leftJustified)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->leftJustified( (int ) RING_API_GETNUMBER(2),* (QChar  *) RING_API_GETCPOINTER(3,"QChar"), (bool ) RING_API_GETNUMBER(4)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QChar"));
}


RING_FUNC(ring_QString2_rightJustified)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->rightJustified( (int ) RING_API_GETNUMBER(2),* (QChar  *) RING_API_GETCPOINTER(3,"QChar"), (bool ) RING_API_GETNUMBER(4)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QChar"));
}


RING_FUNC(ring_QString2_section_1)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->section(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4),* (QString::SectionFlags  *) RING_API_GETCPOINTER(5,"QString::SectionFlags")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QString::SectionFlags"));
}


RING_FUNC(ring_QString2_section_2)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->section(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4),* (QString::SectionFlags  *) RING_API_GETCPOINTER(5,"QString::SectionFlags")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QString::SectionFlags"));
}


RING_FUNC(ring_QString2_section_3)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->section(* (QRegExp  *) RING_API_GETCPOINTER(2,"QRegExp"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4),* (QString::SectionFlags  *) RING_API_GETCPOINTER(5,"QString::SectionFlags")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegExp"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QString::SectionFlags"));
}


RING_FUNC(ring_QString2_section_4)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->section(* (QRegularExpression  *) RING_API_GETCPOINTER(2,"QRegularExpression"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4),* (QString::SectionFlags  *) RING_API_GETCPOINTER(5,"QString::SectionFlags")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegularExpression"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QString::SectionFlags"));
}


RING_FUNC(ring_QString2_simplified)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETSTRING(pObject->simplified().toStdString().c_str());
}


RING_FUNC(ring_QString2_toCaseFolded)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETSTRING(pObject->toCaseFolded().toStdString().c_str());
}


RING_FUNC(ring_QString2_trimmed)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	RING_API_RETSTRING(pObject->trimmed().toStdString().c_str());
}


RING_FUNC(ring_QString2_truncate)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->truncate( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStringRef_appendTo)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->appendTo((QString *) RING_API_GETCPOINTER(2,"QString"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringRef",ring_QStringRef_freefunc);
	}
}


RING_FUNC(ring_QStringRef_at)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->at( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QStringRef_clear)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	pObject->clear();
}


RING_FUNC(ring_QStringRef_compare_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_compare_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_constData)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->constData(),"QChar");
}


RING_FUNC(ring_QStringRef_contains)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_contains_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QStringRef_contains_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_contains_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_count)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QStringRef_count_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_count_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QStringRef_count_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_data)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->data(),"QChar");
}


RING_FUNC(ring_QStringRef_endsWith)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_endsWith_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QStringRef_endsWith_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_endsWith_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_indexOf)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStringRef_indexOf_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_indexOf_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QStringRef_indexOf_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_isEmpty)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QStringRef_isNull)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QStringRef_lastIndexOf)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStringRef_lastIndexOf_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QStringRef_lastIndexOf_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_lastIndexOf_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_length)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QStringRef_localeAwareCompare)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->localeAwareCompare(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringRef_localeAwareCompare_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->localeAwareCompare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_position)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->position());
}


RING_FUNC(ring_QStringRef_size)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QStringRef_startsWith)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_startsWith_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_startsWith_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_startsWith_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QStringRef_string)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->string(),"QString");
}


RING_FUNC(ring_QStringRef_toLatin1)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLatin1();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QStringRef_toLocal8Bit)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLocal8Bit();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QStringRef_toString)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QStringRef_toUcs4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QVector<uint> *pValue ; 
		pValue = (QVector<uint> *) RING_API_MALLOC(sizeof(QVector<uint>)) ;
		*pValue = pObject->toUcs4();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector<uint>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QStringRef_toUtf8)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toUtf8();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QStringRef_unicode)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->unicode(),"QChar");
}


RING_FUNC(ring_QStringRef_compare_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),RING_API_GETSTRING(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_compare_5)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),* (QStringRef  *) RING_API_GETCPOINTER(3,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QStringRef"));
}


RING_FUNC(ring_QStringRef_compare_6)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),* (QLatin1String  *) RING_API_GETCPOINTER(3,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_localeAwareCompare_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->localeAwareCompare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),RING_API_GETSTRING(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_localeAwareCompare_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->localeAwareCompare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),* (QStringRef  *) RING_API_GETCPOINTER(3,"QStringRef")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QStringRef"));
}


RING_FUNC(ring_QBuffer_buffer)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->buffer();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QBuffer_data)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->data();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QBuffer_setBuffer)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBuffer((QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QBuffer_setData)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	pObject->setData(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QBuffer_setData_2)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setData(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QDateTime_toTime_t)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->toTime_t());
}


RING_FUNC(ring_QDateTime_fromTime_t)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromTime_t( (uint ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_setTime_t)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTime_t( (uint ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTime_addDays)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addDays( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_addMSecs)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addMSecs( (qint64 ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_addMonths)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addMonths( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_addSecs)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addSecs( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_addYears)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addYears( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_date)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->date();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDateTime_daysTo)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->daysTo(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QDateTime_isNull)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QDateTime_isValid)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QDateTime_msecsTo)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->msecsTo(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QDateTime_secsTo)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->secsTo(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QDateTime_setDate)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	pObject->setDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QDateTime_setMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMSecsSinceEpoch( (qint64 ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTime_setTime)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	pObject->setTime(* (QTime  *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QDateTime_setTimeSpec)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTimeSpec( (Qt::TimeSpec )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTime_time)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->time();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_timeSpec)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->timeSpec());
}


RING_FUNC(ring_QDateTime_toLocalTime)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toLocalTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_toMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->toMSecsSinceEpoch());
}


RING_FUNC(ring_QDateTime_toString)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDateTime_toString_2)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString( (Qt::DateFormat )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDateTime_toTimeSpec)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toTimeSpec( (Qt::TimeSpec )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_toUTC)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toUTC();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_currentDateTime)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->currentDateTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_currentDateTimeUtc)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->currentDateTimeUtc();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_currentMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->currentMSecsSinceEpoch());
}


RING_FUNC(ring_QDateTime_fromMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromMSecsSinceEpoch( (qint64 ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_fromString)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2), (Qt::DateFormat )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTime_fromString_2)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QCoreApplication_installNativeEventFilter)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->installNativeEventFilter((QAbstractNativeEventFilter *) RING_API_GETCPOINTER(2,"QAbstractNativeEventFilter"));
}


RING_FUNC(ring_QCoreApplication_removeNativeEventFilter)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeNativeEventFilter((QAbstractNativeEventFilter *) RING_API_GETCPOINTER(2,"QAbstractNativeEventFilter"));
}


RING_FUNC(ring_QCoreApplication_quit)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	pObject->quit();
}


RING_FUNC(ring_QCoreApplication_addLibraryPath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLibraryPath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_applicationDirPath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationDirPath().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_applicationFilePath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationFilePath().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_applicationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationName().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_applicationPid)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->applicationPid());
}


RING_FUNC(ring_QCoreApplication_applicationVersion)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationVersion().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_arguments)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->arguments();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QCoreApplication_closingDown)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->closingDown());
}


RING_FUNC(ring_QCoreApplication_eventDispatcher)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETCPOINTER(pObject->eventDispatcher(),"QAbstractEventDispatcher");
}


RING_FUNC(ring_QCoreApplication_exec)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QCoreApplication_exit)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->exit( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCoreApplication_installTranslator)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->installTranslator((QTranslator *) RING_API_GETCPOINTER(2,"QTranslator")));
}


RING_FUNC(ring_QCoreApplication_instance)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETCPOINTER(pObject->instance(),"QCoreApplication");
}


RING_FUNC(ring_QCoreApplication_isQuitLockEnabled)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->isQuitLockEnabled());
}


RING_FUNC(ring_QCoreApplication_libraryPaths)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->libraryPaths();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QCoreApplication_organizationDomain)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->organizationDomain().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_organizationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->organizationName().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_postEvent)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->postEvent((QObject *) RING_API_GETCPOINTER(2,"QObject"),(QEvent *) RING_API_GETCPOINTER(3,"QEvent"), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QCoreApplication_processEvents)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->processEvents( (QEventLoop::ProcessEventsFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCoreApplication_processEvents_2)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->processEvents( (QEventLoop::ProcessEventsFlags )  (int) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_removeLibraryPath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeLibraryPath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_removePostedEvents)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removePostedEvents((QObject *) RING_API_GETCPOINTER(2,"QObject"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_removeTranslator)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->removeTranslator((QTranslator *) RING_API_GETCPOINTER(2,"QTranslator")));
}


RING_FUNC(ring_QCoreApplication_sendEvent)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sendEvent((QObject *) RING_API_GETCPOINTER(2,"QObject"),(QEvent *) RING_API_GETCPOINTER(3,"QEvent")));
}


RING_FUNC(ring_QCoreApplication_sendPostedEvents)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sendPostedEvents((QObject *) RING_API_GETCPOINTER(2,"QObject"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_setApplicationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setApplicationName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setApplicationVersion)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setApplicationVersion(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setAttribute)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAttribute( (Qt::ApplicationAttribute )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_setEventDispatcher)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEventDispatcher((QAbstractEventDispatcher *) RING_API_GETCPOINTER(2,"QAbstractEventDispatcher"));
}


RING_FUNC(ring_QCoreApplication_setLibraryPaths)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	pObject->setLibraryPaths(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QCoreApplication_setOrganizationDomain)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrganizationDomain(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setOrganizationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrganizationName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setQuitLockEnabled)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setQuitLockEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCoreApplication_startingUp)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->startingUp());
}


RING_FUNC(ring_QCoreApplication_testAttribute)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testAttribute( (Qt::ApplicationAttribute )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QCoreApplication_translate)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->translate(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5)).toStdString().c_str());
}


RING_FUNC(ring_QFile_copy)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->copy(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFile_exists)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	RING_API_RETNUMBER(pObject->exists());
}


RING_FUNC(ring_QFile_link)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->link(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFile_open)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->open((FILE *) RING_API_GETCPOINTER(2,"FILE"), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3), (QFile::FileHandleFlags )  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QFile_open_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->open( (int ) RING_API_GETNUMBER(2), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3), (QFile::FileHandleFlags )  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QFile_open_3)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->open( (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFile_remove)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	RING_API_RETNUMBER(pObject->remove());
}


RING_FUNC(ring_QFile_rename)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rename(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFile_setFileName)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFileName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFile_symLinkTarget)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	RING_API_RETSTRING(pObject->symLinkTarget().toStdString().c_str());
}


RING_FUNC(ring_QFile_copy_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->copy(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QFile_decodeName)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	RING_API_RETSTRING(pObject->decodeName(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QFile_decodeName_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->decodeName(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QFile_encodeName)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->encodeName(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QFile_exists_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->exists(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFile_link_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->link(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QFile_permissions)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->permissions(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFile_remove_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->remove(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFile_rename_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rename(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QFile_resize)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->resize(RING_API_GETSTRING(2), (qint64 ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QFile_setPermissions)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setPermissions(RING_API_GETSTRING(2), (QFile::Permissions )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QFile_symLinkTarget_2)
{
	QFile *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->symLinkTarget(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QFileDevice_error)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QFileDevice_flush)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	RING_API_RETNUMBER(pObject->flush());
}


RING_FUNC(ring_QFileDevice_handle)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	RING_API_RETNUMBER(pObject->handle());
}


RING_FUNC(ring_QFileDevice_map)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->map( (qint64 ) RING_API_GETNUMBER(2), (qint64 ) RING_API_GETNUMBER(3), (QFileDevice::MemoryMapFlags )  (int) RING_API_GETNUMBER(4)),"uchar");
}


RING_FUNC(ring_QFileDevice_permissions)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	RING_API_RETNUMBER(pObject->permissions());
}


RING_FUNC(ring_QFileDevice_resize)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->resize( (qint64 ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFileDevice_fileName)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	RING_API_RETSTRING(pObject->fileName().toStdString().c_str());
}


RING_FUNC(ring_QFileDevice_setPermissions)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setPermissions( (QFileDevice::Permissions )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFileDevice_unmap)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->unmap((uchar *) RING_API_GETCPOINTER(2,"uchar")));
}


RING_FUNC(ring_QFileDevice_unsetError)
{
	QFileDevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDevice *) RING_API_GETCPOINTER(1,"QFileDevice");
	pObject->unsetError();
}


RING_FUNC(ring_QStandardPaths_displayName)
{
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(QStandardPaths::displayName( (QStandardPaths::StandardLocation )  (int) RING_API_GETNUMBER(1)).toStdString().c_str());
}


RING_FUNC(ring_QStandardPaths_findExecutable)
{
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(QStandardPaths::findExecutable(RING_API_GETSTRING(1),* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QStringList"));
}


RING_FUNC(ring_QStandardPaths_locate)
{
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(QStandardPaths::locate( (QStandardPaths::StandardLocation )  (int) RING_API_GETNUMBER(1),RING_API_GETSTRING(2), (QStandardPaths::LocateOptions )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QStandardPaths_locateAll)
{
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = QStandardPaths::locateAll( (QStandardPaths::StandardLocation )  (int) RING_API_GETNUMBER(1),RING_API_GETSTRING(2), (QStandardPaths::LocateOptions )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QStandardPaths_setTestModeEnabled)
{
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QStandardPaths::setTestModeEnabled( (bool ) RING_API_GETNUMBER(1));
}


RING_FUNC(ring_QStandardPaths_standardLocations)
{
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = QStandardPaths::standardLocations( (QStandardPaths::StandardLocation )  (int) RING_API_GETNUMBER(1));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QStandardPaths_writableLocation)
{
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(QStandardPaths::writableLocation( (QStandardPaths::StandardLocation )  (int) RING_API_GETNUMBER(1)).toStdString().c_str());
}


RING_FUNC(ring_QMimeData_clear)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	pObject->clear();
}


RING_FUNC(ring_QMimeData_colorData)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->colorData();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QMimeData_data)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->data(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QMimeData_formats)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->formats();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QMimeData_hasColor)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	RING_API_RETNUMBER(pObject->hasColor());
}


RING_FUNC(ring_QMimeData_hasFormat)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hasFormat(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QMimeData_hasHtml)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	RING_API_RETNUMBER(pObject->hasHtml());
}


RING_FUNC(ring_QMimeData_hasImage)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	RING_API_RETNUMBER(pObject->hasImage());
}


RING_FUNC(ring_QMimeData_hasText)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	RING_API_RETNUMBER(pObject->hasText());
}


RING_FUNC(ring_QMimeData_hasUrls)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	RING_API_RETNUMBER(pObject->hasUrls());
}


RING_FUNC(ring_QMimeData_html)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	RING_API_RETSTRING(pObject->html().toStdString().c_str());
}


RING_FUNC(ring_QMimeData_imageData)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->imageData();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QMimeData_removeFormat)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeFormat(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMimeData_setColorData)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	pObject->setColorData(* (QVariant  *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QMimeData_setData)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setData(RING_API_GETSTRING(2),* (QByteArray  *) RING_API_GETCPOINTER(3,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QByteArray"));
}


RING_FUNC(ring_QMimeData_setHtml)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMimeData_setImageData)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	pObject->setImageData(* (QVariant  *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QMimeData_setText)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMimeData_setUrls)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	pObject->setUrls(* (QList<QUrl>  *) RING_API_GETCPOINTER(2,"QList<QUrl>"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QList<QUrl>"));
}


RING_FUNC(ring_QMimeData_text)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QMimeData_urls)
{
	QMimeData *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
	{
		QList<QUrl> *pValue ; 
		pValue = (QList<QUrl> *) RING_API_MALLOC(sizeof(QList<QUrl>)) ;
		*pValue = pObject->urls();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QUrl>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QChar_category)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->category());
}


RING_FUNC(ring_QChar_cell)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	{
		uchar *pValue ; 
		pValue = (uchar *) RING_API_MALLOC(sizeof(uchar)) ;
		*pValue = pObject->cell();
		RING_API_RETMANAGEDCPOINTER(pValue,"uchar",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QChar_combiningClass)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->combiningClass());
}


RING_FUNC(ring_QChar_decomposition)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETSTRING(pObject->decomposition().toStdString().c_str());
}


RING_FUNC(ring_QChar_decompositionTag)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->decompositionTag());
}


RING_FUNC(ring_QChar_digitValue)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->digitValue());
}


RING_FUNC(ring_QChar_direction)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->direction());
}


RING_FUNC(ring_QChar_hasMirrored)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->hasMirrored());
}


RING_FUNC(ring_QChar_isDigit)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isDigit());
}


RING_FUNC(ring_QChar_isHighSurrogate)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isHighSurrogate());
}


RING_FUNC(ring_QChar_isLetter)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isLetter());
}


RING_FUNC(ring_QChar_isLetterOrNumber)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isLetterOrNumber());
}


RING_FUNC(ring_QChar_isLowSurrogate)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isLowSurrogate());
}


RING_FUNC(ring_QChar_isLower)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isLower());
}


RING_FUNC(ring_QChar_isMark)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isMark());
}


RING_FUNC(ring_QChar_isNonCharacter)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isNonCharacter());
}


RING_FUNC(ring_QChar_isNull)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QChar_isNumber)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isNumber());
}


RING_FUNC(ring_QChar_isPrint)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isPrint());
}


RING_FUNC(ring_QChar_isPunct)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isPunct());
}


RING_FUNC(ring_QChar_isSpace)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isSpace());
}


RING_FUNC(ring_QChar_isSurrogate)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isSurrogate());
}


RING_FUNC(ring_QChar_isSymbol)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isSymbol());
}


RING_FUNC(ring_QChar_isTitleCase)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isTitleCase());
}


RING_FUNC(ring_QChar_isUpper)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->isUpper());
}


RING_FUNC(ring_QChar_mirroredChar)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->mirroredChar();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QChar_row)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	{
		uchar *pValue ; 
		pValue = (uchar *) RING_API_MALLOC(sizeof(uchar)) ;
		*pValue = pObject->row();
		RING_API_RETMANAGEDCPOINTER(pValue,"uchar",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QChar_script)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->script());
}


RING_FUNC(ring_QChar_toCaseFolded)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->toCaseFolded();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QChar_toLatin1)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->toLatin1());
}


RING_FUNC(ring_QChar_toLower)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->toLower();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QChar_toTitleCase)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->toTitleCase();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QChar_toUpper)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->toUpper();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QChar_unicode)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->unicode());
}


RING_FUNC(ring_QChar_unicode_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->unicode());
}


RING_FUNC(ring_QChar_unicodeVersion)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->unicodeVersion());
}


RING_FUNC(ring_QChar_category_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->category( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_combiningClass_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->combiningClass( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_currentUnicodeVersion)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->currentUnicodeVersion());
}


RING_FUNC(ring_QChar_decomposition_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->decomposition( (uint ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QChar_decompositionTag_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->decompositionTag( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_digitValue_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->digitValue( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_direction_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->direction( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_fromLatin1)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->fromLatin1( (char ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QChar_hasMirrored_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hasMirrored( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_highSurrogate)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->highSurrogate( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isDigit_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isDigit( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isHighSurrogate_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isHighSurrogate( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isLetter_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isLetter( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isLetterOrNumber_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isLetterOrNumber( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isLowSurrogate_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isLowSurrogate( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isLower_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isLower( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isMark_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isMark( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isNonCharacter_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isNonCharacter( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isNumber_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isNumber( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isPrint_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isPrint( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isPunct_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isPunct( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isSpace_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isSpace( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isSurrogate_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isSurrogate( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isSymbol_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isSymbol( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isTitleCase_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isTitleCase( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_isUpper_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isUpper( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_lowSurrogate)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lowSurrogate( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_mirroredChar_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->mirroredChar( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_requiresSurrogates)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->requiresSurrogates( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_script_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->script( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_surrogateToUcs4)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->surrogateToUcs4( (ushort ) RING_API_GETNUMBER(2), (ushort ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QChar_surrogateToUcs4_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	RING_API_RETNUMBER(pObject->surrogateToUcs4(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"),* (QChar  *) RING_API_GETCPOINTER(3,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QChar"));
}


RING_FUNC(ring_QChar_toCaseFolded_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toCaseFolded( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_toLower_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toLower( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_toTitleCase_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toTitleCase( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_toUpper_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUpper( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChar_unicodeVersion_2)
{
	QChar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->unicodeVersion( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QChildEvent_added)
{
	QChildEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChildEvent *) RING_API_GETCPOINTER(1,"QChildEvent");
	RING_API_RETNUMBER(pObject->added());
}


RING_FUNC(ring_QChildEvent_child)
{
	QChildEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChildEvent *) RING_API_GETCPOINTER(1,"QChildEvent");
	RING_API_RETCPOINTER(pObject->child(),"QObject");
}


RING_FUNC(ring_QChildEvent_polished)
{
	QChildEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChildEvent *) RING_API_GETCPOINTER(1,"QChildEvent");
	RING_API_RETNUMBER(pObject->polished());
}


RING_FUNC(ring_QChildEvent_removed)
{
	QChildEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QChildEvent *) RING_API_GETCPOINTER(1,"QChildEvent");
	RING_API_RETNUMBER(pObject->removed());
}


RING_FUNC(ring_QTextStream_atEnd)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QTextStream_autoDetectUnicode)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->autoDetectUnicode());
}


RING_FUNC(ring_QTextStream_codec)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETCPOINTER(pObject->codec(),"QTextCodec");
}


RING_FUNC(ring_QTextStream_device)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETCPOINTER(pObject->device(),"QIODevice");
}


RING_FUNC(ring_QTextStream_fieldAlignment)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->fieldAlignment());
}


RING_FUNC(ring_QTextStream_fieldWidth)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->fieldWidth());
}


RING_FUNC(ring_QTextStream_flush)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	pObject->flush();
}


RING_FUNC(ring_QTextStream_generateByteOrderMark)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->generateByteOrderMark());
}


RING_FUNC(ring_QTextStream_integerBase)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->integerBase());
}


RING_FUNC(ring_QTextStream_locale)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	{
		QLocale *pValue ; 
		pValue = new QLocale() ;
		*pValue = pObject->locale();
		RING_API_RETMANAGEDCPOINTER(pValue,"QLocale",ring_QLocale_freefunc);
	}
}


RING_FUNC(ring_QTextStream_numberFlags)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->numberFlags());
}


RING_FUNC(ring_QTextStream_padChar)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->padChar();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QTextStream_pos)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->pos());
}


RING_FUNC(ring_QTextStream_read)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->read( (qint64 ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTextStream_readAll)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETSTRING(pObject->readAll().toStdString().c_str());
}


RING_FUNC(ring_QTextStream_readLine)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->readLine( (qint64 ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTextStream_realNumberNotation)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->realNumberNotation());
}


RING_FUNC(ring_QTextStream_realNumberPrecision)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->realNumberPrecision());
}


RING_FUNC(ring_QTextStream_reset)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	pObject->reset();
}


RING_FUNC(ring_QTextStream_resetStatus)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	pObject->resetStatus();
}


RING_FUNC(ring_QTextStream_seek)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->seek( (qint64 ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTextStream_setAutoDetectUnicode)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoDetectUnicode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setCodec)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCodec((QTextCodec *) RING_API_GETCPOINTER(2,"QTextCodec"));
}


RING_FUNC(ring_QTextStream_setCodec_2)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCodec(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextStream_setDevice)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevice((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"));
}


RING_FUNC(ring_QTextStream_setFieldAlignment)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFieldAlignment( (QTextStream::FieldAlignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setFieldWidth)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFieldWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setGenerateByteOrderMark)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGenerateByteOrderMark( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setIntegerBase)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntegerBase( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setLocale)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	pObject->setLocale(* (QLocale  *) RING_API_GETCPOINTER(2,"QLocale"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLocale"));
}


RING_FUNC(ring_QTextStream_setNumberFlags)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNumberFlags( (QTextStream::NumberFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setPadChar)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	pObject->setPadChar(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QTextStream_setRealNumberNotation)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRealNumberNotation( (QTextStream::RealNumberNotation )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setRealNumberPrecision)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRealNumberPrecision( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setStatus)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatus( (QTextStream::Status )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextStream_setString)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setString((QString *) RING_API_GETCPOINTER(2,"QString"), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextStream_skipWhiteSpace)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	pObject->skipWhiteSpace();
}


RING_FUNC(ring_QTextStream_status)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETNUMBER(pObject->status());
}


RING_FUNC(ring_QTextStream_string)
{
	QTextStream *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
	RING_API_RETCPOINTER(pObject->string(),"QString");
}


RING_FUNC(ring_QLocale_amText)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->amText().toStdString().c_str());
}


RING_FUNC(ring_QLocale_bcp47Name)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->bcp47Name().toStdString().c_str());
}


RING_FUNC(ring_QLocale_country)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETNUMBER(pObject->country());
}


RING_FUNC(ring_QLocale_createSeparatedList)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->createSeparatedList(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QLocale_currencySymbol)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->currencySymbol( (QLocale::CurrencySymbolFormat )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_dateFormat)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->dateFormat( (QLocale::FormatType )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_dateTimeFormat)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->dateTimeFormat( (QLocale::FormatType )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_dayName)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->dayName( (int ) RING_API_GETNUMBER(2), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_decimalPoint)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->decimalPoint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QLocale_exponential)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->exponential();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QLocale_firstDayOfWeek)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		Qt::DayOfWeek *pValue ; 
		pValue = (Qt::DayOfWeek *) RING_API_MALLOC(sizeof(Qt::DayOfWeek)) ;
		*pValue = pObject->firstDayOfWeek();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::DayOfWeek",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_groupSeparator)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->groupSeparator();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QLocale_language)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETNUMBER(pObject->language());
}


RING_FUNC(ring_QLocale_measurementSystem)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETNUMBER(pObject->measurementSystem());
}


RING_FUNC(ring_QLocale_monthName)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->monthName( (int ) RING_API_GETNUMBER(2), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_name)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QLocale_nativeCountryName)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->nativeCountryName().toStdString().c_str());
}


RING_FUNC(ring_QLocale_nativeLanguageName)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->nativeLanguageName().toStdString().c_str());
}


RING_FUNC(ring_QLocale_negativeSign)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->negativeSign();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QLocale_numberOptions)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETNUMBER(pObject->numberOptions());
}


RING_FUNC(ring_QLocale_percent)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->percent();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QLocale_pmText)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->pmText().toStdString().c_str());
}


RING_FUNC(ring_QLocale_positiveSign)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->positiveSign();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QLocale_quoteString)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->quoteString(RING_API_GETSTRING(2), (QLocale::QuotationStyle )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_quoteString_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->quoteString(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (QLocale::QuotationStyle )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QLocale_script)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETNUMBER(pObject->script());
}


RING_FUNC(ring_QLocale_setNumberOptions)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNumberOptions( (QLocale::NumberOptions )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLocale_standaloneDayName)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->standaloneDayName( (int ) RING_API_GETNUMBER(2), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_standaloneMonthName)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->standaloneMonthName( (int ) RING_API_GETNUMBER(2), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_textDirection)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETNUMBER(pObject->textDirection());
}


RING_FUNC(ring_QLocale_timeFormat)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->timeFormat( (QLocale::FormatType )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_toDouble)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool")));
}


RING_FUNC(ring_QLocale_toDouble_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QLocale_toFloat)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toFloat(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool")));
}


RING_FUNC(ring_QLocale_toFloat_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toFloat(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QLocale_toInt)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool")));
}


RING_FUNC(ring_QLocale_toInt_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QLocale_toLongLong)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qlonglong *pValue ; 
		pValue = (qlonglong *) RING_API_MALLOC(sizeof(qlonglong)) ;
		*pValue = pObject->toLongLong(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool"));
		RING_API_RETMANAGEDCPOINTER(pValue,"qlonglong",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_toLongLong_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qlonglong *pValue ; 
		pValue = (qlonglong *) RING_API_MALLOC(sizeof(qlonglong)) ;
		*pValue = pObject->toLongLong(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
		RING_API_RETMANAGEDCPOINTER(pValue,"qlonglong",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_toLower)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toLower(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_toShort)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		short *pValue ; 
		pValue = (short *) RING_API_MALLOC(sizeof(short)) ;
		*pValue = pObject->toShort(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool"));
		RING_API_RETMANAGEDCPOINTER(pValue,"short",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_toShort_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		short *pValue ; 
		pValue = (short *) RING_API_MALLOC(sizeof(short)) ;
		*pValue = pObject->toShort(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
		RING_API_RETMANAGEDCPOINTER(pValue,"short",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_toString)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->toString(* (qlonglong  *) RING_API_GETCPOINTER(2,"qlonglong")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"qlonglong"));
}


RING_FUNC(ring_QLocale_toString_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->toString(* (qulonglong  *) RING_API_GETCPOINTER(2,"qulonglong")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"qulonglong"));
}


RING_FUNC(ring_QLocale_toString_4)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	RING_API_RETSTRING(pObject->toString(* (short  *) RING_API_GETCPOINTER(2,"short")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"short"));
}


RING_FUNC(ring_QLocale_toString_5)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString( (ushort ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_toString_6)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_toString_7)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString( (uint ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_toString_8)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString( (double ) RING_API_GETNUMBER(2), (char ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_toString_9)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString( (float ) RING_API_GETNUMBER(2), (char ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_toString_10)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"),RING_API_GETSTRING(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QLocale_toString_11)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(* (QTime  *) RING_API_GETCPOINTER(2,"QTime"),RING_API_GETSTRING(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QLocale_toString_12)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime"),RING_API_GETSTRING(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QLocale_toString_13)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QLocale_toString_14)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(* (QTime  *) RING_API_GETCPOINTER(2,"QTime"), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QLocale_toString_15)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime"), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3)).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QLocale_toTime)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->toTime(RING_API_GETSTRING(2), (QLocale::FormatType )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QLocale_toTime_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->toTime(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QLocale_toUInt)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUInt(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool")));
}


RING_FUNC(ring_QLocale_toUInt_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUInt(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QLocale_toULongLong)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qulonglong *pValue ; 
		pValue = (qulonglong *) RING_API_MALLOC(sizeof(qulonglong)) ;
		*pValue = pObject->toULongLong(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool"));
		RING_API_RETMANAGEDCPOINTER(pValue,"qulonglong",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_toULongLong_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qulonglong *pValue ; 
		pValue = (qulonglong *) RING_API_MALLOC(sizeof(qulonglong)) ;
		*pValue = pObject->toULongLong(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
		RING_API_RETMANAGEDCPOINTER(pValue,"qulonglong",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_toUShort)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUShort(RING_API_GETSTRING(2),(bool *) RING_API_GETCPOINTER(3,"bool")));
}


RING_FUNC(ring_QLocale_toUShort_2)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUShort(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),(bool *) RING_API_GETCPOINTER(3,"bool")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QLocale_toUpper)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toUpper(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_uiLanguages)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->uiLanguages();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QLocale_weekdays)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QList<Qt::DayOfWeek> *pValue ; 
		pValue = (QList<Qt::DayOfWeek> *) RING_API_MALLOC(sizeof(QList<Qt::DayOfWeek>)) ;
		*pValue = pObject->weekdays();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<Qt::DayOfWeek>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_zeroDigit)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->zeroDigit();
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QLocale_c)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QLocale *pValue ; 
		pValue = new QLocale() ;
		*pValue = pObject->c();
		RING_API_RETMANAGEDCPOINTER(pValue,"QLocale",ring_QLocale_freefunc);
	}
}


RING_FUNC(ring_QLocale_countryToString)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->countryToString( (QLocale::Country )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_languageToString)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->languageToString( (QLocale::Language )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_matchingLocales)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QLocale> *pValue ; 
		pValue = (QList<QLocale> *) RING_API_MALLOC(sizeof(QList<QLocale>)) ;
		*pValue = pObject->matchingLocales( (QLocale::Language )  (int) RING_API_GETNUMBER(2), (QLocale::Script )  (int) RING_API_GETNUMBER(3), (QLocale::Country )  (int) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QLocale>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLocale_scriptToString)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->scriptToString( (QLocale::Script )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLocale_setDefault)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	pObject->setDefault(* (QLocale  *) RING_API_GETCPOINTER(2,"QLocale"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLocale"));
}


RING_FUNC(ring_QLocale_system)
{
	QLocale *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
	{
		QLocale *pValue ; 
		pValue = new QLocale() ;
		*pValue = pObject->system();
		RING_API_RETMANAGEDCPOINTER(pValue,"QLocale",ring_QLocale_freefunc);
	}
}


RING_FUNC(ring_QThread_eventDispatcher)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETCPOINTER(pObject->eventDispatcher(),"QAbstractEventDispatcher");
}


RING_FUNC(ring_QThread_exit)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->exit( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThread_isFinished)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->isFinished());
}


RING_FUNC(ring_QThread_isInterruptionRequested)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->isInterruptionRequested());
}


RING_FUNC(ring_QThread_isRunning)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->isRunning());
}


RING_FUNC(ring_QThread_priority)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->priority());
}


RING_FUNC(ring_QThread_requestInterruption)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->requestInterruption();
}


RING_FUNC(ring_QThread_setEventDispatcher)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEventDispatcher((QAbstractEventDispatcher *) RING_API_GETCPOINTER(2,"QAbstractEventDispatcher"));
}


RING_FUNC(ring_QThread_setPriority)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPriority( (QThread::Priority )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThread_setStackSize)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStackSize( (uint ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThread_stackSize)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->stackSize());
}


RING_FUNC(ring_QThread_wait)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->wait(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"unsigned long"));
}


RING_FUNC(ring_QThread_quit)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->quit();
}


RING_FUNC(ring_QThread_start)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start( (QThread::Priority )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThread_terminate)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->terminate();
}


RING_FUNC(ring_QThread_currentThread)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETCPOINTER(pObject->currentThread(),"QThread");
}


RING_FUNC(ring_QThread_currentThreadId)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	{
		Qt::HANDLE *pValue ; 
		pValue = (Qt::HANDLE *) RING_API_MALLOC(sizeof(Qt::HANDLE)) ;
		*pValue = pObject->currentThreadId();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::HANDLE",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QThread_idealThreadCount)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->idealThreadCount());
}


RING_FUNC(ring_QThread_msleep)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->msleep(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"unsigned long"));
}


RING_FUNC(ring_QThread_sleep)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->sleep(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"unsigned long"));
}


RING_FUNC(ring_QThread_usleep)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->usleep(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"unsigned long"));
}


RING_FUNC(ring_QThread_yieldCurrentThread)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->yieldCurrentThread();
}


RING_FUNC(ring_QThread_setStartedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStartedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QThread_setFinishedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QThread_getStartedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETSTRING(pObject->getStartedEvent());
}


RING_FUNC(ring_QThread_getFinishedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETSTRING(pObject->getFinishedEvent());
}


RING_FUNC(ring_QThreadPool_activeThreadCount)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETNUMBER(pObject->activeThreadCount());
}


RING_FUNC(ring_QThreadPool_clear)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	pObject->clear();
}


RING_FUNC(ring_QThreadPool_expiryTimeout)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETNUMBER(pObject->expiryTimeout());
}


RING_FUNC(ring_QThreadPool_maxThreadCount)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETNUMBER(pObject->maxThreadCount());
}


RING_FUNC(ring_QThreadPool_releaseThread)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	pObject->releaseThread();
}


RING_FUNC(ring_QThreadPool_reserveThread)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	pObject->reserveThread();
}


RING_FUNC(ring_QThreadPool_setExpiryTimeout)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpiryTimeout( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThreadPool_setMaxThreadCount)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxThreadCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThreadPool_start)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start((QRunnable *) RING_API_GETCPOINTER(2,"QRunnable"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QThreadPool_tryStart)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->tryStart((QRunnable *) RING_API_GETCPOINTER(2,"QRunnable")));
}


RING_FUNC(ring_QThreadPool_waitForDone)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForDone( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QThreadPool_globalInstance)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETCPOINTER(pObject->globalInstance(),"QThreadPool");
}


RING_FUNC(ring_QProcess_start_2)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start(RING_API_GETSTRING(2), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProcess_arguments)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->arguments();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QProcess_closeReadChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->closeReadChannel( (QProcess::ProcessChannel )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_closeWriteChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->closeWriteChannel();
}


RING_FUNC(ring_QProcess_error)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QProcess_exitCode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->exitCode());
}


RING_FUNC(ring_QProcess_exitStatus)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->exitStatus());
}


RING_FUNC(ring_QProcess_inputChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->inputChannelMode());
}


RING_FUNC(ring_QProcess_processChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->processChannelMode());
}


RING_FUNC(ring_QProcess_processEnvironment)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QProcessEnvironment *pValue ; 
		pValue = (QProcessEnvironment *) RING_API_MALLOC(sizeof(QProcessEnvironment)) ;
		*pValue = pObject->processEnvironment();
		RING_API_RETMANAGEDCPOINTER(pValue,"QProcessEnvironment",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QProcess_program)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->program().toStdString().c_str());
}


RING_FUNC(ring_QProcess_readAllStandardError)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->readAllStandardError();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QProcess_readAllStandardOutput)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->readAllStandardOutput();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QProcess_readChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->readChannel());
}


RING_FUNC(ring_QProcess_setArguments)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->setArguments(* (QStringList   *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QProcess_setInputChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputChannelMode( (QProcess::InputChannelMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_setProcessChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setProcessChannelMode( (QProcess::ProcessChannelMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_setProcessEnvironment)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->setProcessEnvironment(* (QProcessEnvironment   *) RING_API_GETCPOINTER(2,"QProcessEnvironment"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QProcessEnvironment"));
}


RING_FUNC(ring_QProcess_setProgram)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setProgram(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_setReadChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadChannel( (QProcess::ProcessChannel )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_setStandardErrorFile)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardErrorFile(RING_API_GETSTRING(2), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProcess_setStandardInputFile)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardInputFile(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_setStandardOutputFile)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardOutputFile(RING_API_GETSTRING(2), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProcess_setStandardOutputProcess)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardOutputProcess((QProcess *) RING_API_GETCPOINTER(2,"QProcess"));
}


RING_FUNC(ring_QProcess_setWorkingDirectory)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWorkingDirectory(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_start)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start(RING_API_GETSTRING(2),* (QStringList   *) RING_API_GETCPOINTER(3,"QStringList"), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QStringList"));
}


RING_FUNC(ring_QProcess_start_3)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start( (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_state)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->state());
}


RING_FUNC(ring_QProcess_waitForFinished)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForFinished( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QProcess_waitForStarted)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForStarted( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QProcess_workingDirectory)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->workingDirectory().toStdString().c_str());
}


RING_FUNC(ring_QProcess_kill)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->kill();
}


RING_FUNC(ring_QProcess_terminate)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->terminate();
}


RING_FUNC(ring_QProcess_setreadyReadStandardErrorEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadyReadStandardErrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_setreadyReadStandardOutputEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadyReadStandardOutputEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_getreadyReadStandardErrorEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->getreadyReadStandardErrorEvent());
}


RING_FUNC(ring_QProcess_getreadyReadStandardOutputEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->getreadyReadStandardOutputEvent());
}


RING_FUNC(ring_QUuid_toString)
{
	QUuid *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUuid *) RING_API_GETCPOINTER(1,"QUuid");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QMutex_isRecursive)
{
	QMutex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
	RING_API_RETNUMBER(pObject->isRecursive());
}


RING_FUNC(ring_QMutex_lock)
{
	QMutex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
	pObject->lock();
}


RING_FUNC(ring_QMutex_unlock)
{
	QMutex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
	pObject->unlock();
}


RING_FUNC(ring_QMutexLocker_mutex)
{
	QMutexLocker *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
	RING_API_RETCPOINTER(pObject->mutex(),"QMutex");
}


RING_FUNC(ring_QMutexLocker_relock)
{
	QMutexLocker *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
	pObject->relock();
}


RING_FUNC(ring_QMutexLocker_unlock)
{
	QMutexLocker *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
	pObject->unlock();
}


RING_FUNC(ring_QDesktopServices_openUrl)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETNUMBER(QDesktopServices::openUrl(* (QUrl *) RING_API_GETCPOINTER(1,"QUrl"))) ;
}

RING_FUNC(ring_QDesktopServices_setUrlHandler)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDesktopServices::setUrlHandler(RING_API_GETSTRING(1),(QObject *) RING_API_GETCPOINTER(2,"QObject *"),RING_API_GETSTRING(3));
}

RING_FUNC(ring_QDesktopServices_unsetUrlHandler)
{
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDesktopServices::unsetUrlHandler(RING_API_GETSTRING(1));
}


RING_FUNC(ring_QBitmap_clear)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	pObject->clear();
}


RING_FUNC(ring_QBitmap_swap)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	pObject->swap(* (QBitmap *) RING_API_GETCPOINTER(2,"QBitmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBitmap"));
}


RING_FUNC(ring_QBitmap_transformed)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->transformed(* (QTransform *) RING_API_GETCPOINTER(2,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}


RING_FUNC(ring_QBitmap_fromData)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->fromData(* (QSize *) RING_API_GETCPOINTER(2,"QSize"),(uchar *) RING_API_GETCPOINTER(3,"uchar"), (QImage::Format )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}


RING_FUNC(ring_QBitmap_fromImage)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->fromImage(* (QImage *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QImage"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_transformed)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->transformed(* (QTransform  *) RING_API_GETCPOINTER(2,"QTransform"), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_copy)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->copy( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_scaled)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaled( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(4), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_width)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QPixmap_height)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QPixmap_createMaskFromColor)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->createMaskFromColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"), (Qt::MaskMode)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_mask)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->mask();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_setMask)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->setMask(* (QBitmap *) RING_API_GETCPOINTER(2,"QBitmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBitmap"));
}


RING_FUNC(ring_QPixmap_fill)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->fill(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QPixmap_fromImage)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->fromImage(* (QImage *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QImage"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_load)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->load(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (Qt::ImageConversionFlags)  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QPixmap_cacheKey)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->cacheKey());
}


RING_FUNC(ring_QPixmap_convertFromImage)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->convertFromImage(* (QImage  *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QImage"));
}


RING_FUNC(ring_QPixmap_copy_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->copy(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_createHeuristicMask)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->createHeuristicMask( (bool ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_depth)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->depth());
}


RING_FUNC(ring_QPixmap_detach)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->detach();
}


RING_FUNC(ring_QPixmap_devicePixelRatio)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QPixmap_hasAlpha)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->hasAlpha());
}


RING_FUNC(ring_QPixmap_hasAlphaChannel)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->hasAlphaChannel());
}


RING_FUNC(ring_QPixmap_isNull)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPixmap_isQBitmap)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->isQBitmap());
}


RING_FUNC(ring_QPixmap_loadFromData)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->loadFromData((uchar *) RING_API_GETCPOINTER(2,"uchar"), (uint ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(5)));
}


RING_FUNC(ring_QPixmap_loadFromData_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->loadFromData(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"),RING_API_GETSTRING(3), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QPixmap_rect)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->rect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QPixmap_save)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QPixmap_save_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QPixmap_scaled_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaled(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(3), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_scaledToHeight)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaledToHeight( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_scaledToWidth)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaledToWidth( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_scroll)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scroll( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7),(QRegion *) RING_API_GETCPOINTER(8,"QRegion"));
}


RING_FUNC(ring_QPixmap_scroll_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scroll( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"),(QRegion *) RING_API_GETCPOINTER(5,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRect"));
}


RING_FUNC(ring_QPixmap_setDevicePixelRatio)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevicePixelRatio( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPixmap_size)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QPixmap_swap)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->swap(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QPixmap_toImage)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->toImage();
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QPixmap_transformed_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->transformed(* (QTransform  *) RING_API_GETCPOINTER(2,"QTransform"), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_defaultDepth)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->defaultDepth());
}


RING_FUNC(ring_QPixmap_fromImage_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->fromImage(* (QImage  *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QImage"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_fromImageReader)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->fromImageReader((QImageReader *) RING_API_GETCPOINTER(2,"QImageReader"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QPixmap_trueMatrix)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->trueMatrix(* (QTransform  *) RING_API_GETCPOINTER(2,"QTransform"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainter_initFrom)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->initFrom((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QPainter_background)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QPainter_backgroundMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->backgroundMode());
}


RING_FUNC(ring_QPainter_begin)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->begin((QPaintDevice *) RING_API_GETCPOINTER(2,"QPaintDevice")));
}


RING_FUNC(ring_QPainter_beginNativePainting)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->beginNativePainting();
}


RING_FUNC(ring_QPainter_boundingRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6),RING_API_GETSTRING(7));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QPainter_brush)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->brush();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QPainter_brushOrigin)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->brushOrigin();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QPainter_clipBoundingRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->clipBoundingRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainter_clipPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->clipPath();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QPainter_clipRegion)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->clipRegion();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QPainter_combinedTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->combinedTransform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainter_compositionMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->compositionMode());
}


RING_FUNC(ring_QPainter_device)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETCPOINTER(pObject->device(),"QPaintDevice");
}


RING_FUNC(ring_QPainter_deviceTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->deviceTransform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainter_drawArc)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawArc( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainter_drawChord)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawChord( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainter_drawEllipse)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawEllipse( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_drawGlyphRun)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->drawGlyphRun(* (QPointF   *) RING_API_GETCPOINTER(2,"QPointF"),* (QGlyphRun   *) RING_API_GETCPOINTER(3,"QGlyphRun"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QGlyphRun"));
}


RING_FUNC(ring_QPainter_drawImage)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawImage( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QImage  *) RING_API_GETCPOINTER(4,"QImage"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QImage"));
}


RING_FUNC(ring_QPainter_drawLine)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawLine( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_drawLines)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawLines((QLine *) RING_API_GETCPOINTER(2,"QLine"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->drawPath(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
}


RING_FUNC(ring_QPainter_drawPicture)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPicture( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QPicture   *) RING_API_GETCPOINTER(4,"QPicture"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QPicture"));
}


RING_FUNC(ring_QPainter_drawPie)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPie( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainter_drawPixmap)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPixmap( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QPixmap *) RING_API_GETCPOINTER(4,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QPixmap"));
}


RING_FUNC(ring_QPainter_drawPoint)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPoint( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_drawRects)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawRects((QRectF *) RING_API_GETCPOINTER(2,"QRectF"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawRoundedRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawRoundedRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7), (Qt::SizeMode )  (int) RING_API_GETNUMBER(8));
}


RING_FUNC(ring_QPainter_drawStaticText)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawStaticText( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QStaticText   *) RING_API_GETCPOINTER(4,"QStaticText"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QStaticText"));
}


RING_FUNC(ring_QPainter_drawText)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawText( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QPainter_drawTiledPixmap)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawTiledPixmap( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5),* (QPixmap   *) RING_API_GETCPOINTER(6,"QPixmap"), (int ) RING_API_GETNUMBER(7), (int ) RING_API_GETNUMBER(8));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QPixmap"));
}


RING_FUNC(ring_QPainter_end)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->end());
}


RING_FUNC(ring_QPainter_endNativePainting)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->endNativePainting();
}


RING_FUNC(ring_QPainter_eraseRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->eraseRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_fillPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->fillPath(* (QPainterPath   *) RING_API_GETCPOINTER(2,"QPainterPath"),* (QBrush   *) RING_API_GETCPOINTER(3,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QBrush"));
}


RING_FUNC(ring_QPainter_fillRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->fillRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5),* (QBrush *) RING_API_GETCPOINTER(6,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QBrush"));
}


RING_FUNC(ring_QPainter_font)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QPainter_fontInfo)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QFontInfo *pValue ; 
		pValue = (QFontInfo *) RING_API_MALLOC(sizeof(QFontInfo)) ;
		*pValue = pObject->fontInfo();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFontInfo",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainter_hasClipping)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->hasClipping());
}


RING_FUNC(ring_QPainter_isActive)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QPainter_layoutDirection)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->layoutDirection());
}


RING_FUNC(ring_QPainter_opacity)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->opacity());
}


RING_FUNC(ring_QPainter_paintEngine)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETCPOINTER(pObject->paintEngine(),"QPaintEngine");
}


RING_FUNC(ring_QPainter_pen)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QPen *pValue ; 
		pValue = new QPen() ;
		*pValue = pObject->pen();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPen",ring_QPen_freefunc);
	}
}


RING_FUNC(ring_QPainter_renderHints)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->renderHints());
}


RING_FUNC(ring_QPainter_resetTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->resetTransform();
}


RING_FUNC(ring_QPainter_restore)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->restore();
}


RING_FUNC(ring_QPainter_rotate)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->rotate( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_save)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->save();
}


RING_FUNC(ring_QPainter_scale)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scale( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_setBackground)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setBackground(* (QBrush   *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QPainter_setBackgroundMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackgroundMode( (Qt::BGMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setBrush)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setBrush(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QPainter_setBrushOrigin)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBrushOrigin( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_setClipPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipPath(* (QPainterPath   *) RING_API_GETCPOINTER(2,"QPainterPath"), (Qt::ClipOperation )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
}


RING_FUNC(ring_QPainter_setClipRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (Qt::ClipOperation )  (int) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QPainter_setClipRegion)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipRegion(* (QRegion   *) RING_API_GETCPOINTER(2,"QRegion"), (Qt::ClipOperation )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
}


RING_FUNC(ring_QPainter_setClipping)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setCompositionMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompositionMode( (QPainter::CompositionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setFont)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QPainter_setLayoutDirection)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutDirection( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setOpacity)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpacity( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setPen)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setPen(* (QPen  *) RING_API_GETCPOINTER(2,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPen"));
}


RING_FUNC(ring_QPainter_setRenderHint)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRenderHint( (QPainter::RenderHint )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_setTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTransform(* (QTransform   *) RING_API_GETCPOINTER(2,"QTransform"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
}


RING_FUNC(ring_QPainter_setViewTransformEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewTransformEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setViewport)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewport( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_setWindow)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindow( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_setWorldMatrixEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWorldMatrixEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setWorldTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWorldTransform(* (QTransform   *) RING_API_GETCPOINTER(2,"QTransform"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
}


RING_FUNC(ring_QPainter_shear)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->shear( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_strokePath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->strokePath(* (QPainterPath   *) RING_API_GETCPOINTER(2,"QPainterPath"),* (QPen   *) RING_API_GETCPOINTER(3,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPen"));
}


RING_FUNC(ring_QPainter_testRenderHint)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testRenderHint( (QPainter::RenderHint )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainter_transform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->transform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainter_translate)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_viewTransformEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->viewTransformEnabled());
}


RING_FUNC(ring_QPainter_viewport)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->viewport();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QPainter_window)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->window();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QPainter_worldMatrixEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->worldMatrixEnabled());
}


RING_FUNC(ring_QPainter_worldTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform  *pValue ; 
		pValue = (QTransform  *) RING_API_MALLOC(sizeof(QTransform )) ;
		*pValue = pObject->worldTransform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}

RING_FUNC(ring_QPainter_drawPolygon)
{
	QPainter *pObject;
	List *pList,*pList2;
	int x,nSize;
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pList = (List *) RING_API_GETLIST(2);
	nSize = ring_list_getsize(pList);
	QPointF *points = new QPointF[nSize];
	for (x=0 ; x < nSize ; x++) {
		pList2 = ring_list_getlist(pList,x+1);
		points[x].setX((float) ring_list_getdouble(pList2,1));
		points[x].setY((float) ring_list_getdouble(pList2,2));
	}
	pObject->drawPolygon(points, nSize, (Qt::FillRule )  (int) RING_API_GETNUMBER(3));	
	delete [] points;
}

RING_FUNC(ring_QPainter_drawConvexPolygon)
{
	QPainter *pObject ;
	List *pList,*pList2;
	int x,nSize;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pList = (List *) RING_API_GETLIST(2);
	nSize = ring_list_getsize(pList);
	QPoint *points = new QPoint[nSize];
	for (x=0 ; x < nSize ; x++) {
		pList2 = ring_list_getlist(pList,x+1);
		points[x].setX((float) ring_list_getdouble(pList2,1));
		points[x].setY((float) ring_list_getdouble(pList2,2));
	}
	pObject->drawConvexPolygon(points, nSize);
	delete [] points;
}

RING_FUNC(ring_QPainter_drawPoints)
{
	QPainter *pObject ;
	List *pList,*pList2;
	int x,nSize;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pList = (List *) RING_API_GETLIST(2);
	nSize = ring_list_getsize(pList);
	QPointF *points = new QPointF[nSize];
	for (x=0 ; x < nSize ; x++) {
		pList2 = ring_list_getlist(pList,x+1);
		points[x].setX((float) ring_list_getdouble(pList2,1));
		points[x].setY((float) ring_list_getdouble(pList2,2));
	}
	pObject->drawPoints(points, nSize);
	delete [] points;
}

RING_FUNC(ring_QPainter_drawPolyline)
{
	QPainter *pObject ;
	List *pList,*pList2;
	int x,nSize;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pList = (List *) RING_API_GETLIST(2);
	nSize = ring_list_getsize(pList);
	QPointF *points = new QPointF[nSize];
	for (x=0 ; x < nSize ; x++) {
		pList2 = ring_list_getlist(pList,x+1);
		points[x].setX((float) ring_list_getdouble(pList2,1));
		points[x].setY((float) ring_list_getdouble(pList2,2));
	}
	pObject->drawPolyline(points, nSize);
	delete [] points;
}

void ring_QPainter_drawList(void *pPointer,int nType) {
	QPainter *pObject;
	QColor oColor;
	QPen oPen;
	List *pList,*pList2;
	int x,nSize;
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pList = (List *) RING_API_GETLIST(2);
	nSize = ring_list_getsize(pList);
	for (x=1 ; x <= nSize ; x++) {
		pList2 = ring_list_getlist(pList,x);
		switch (nType) {
			case 1:
				oColor.setHsvF((float) ring_list_getdouble(pList2,3),
				(float) ring_list_getdouble(pList2,4),
				(float) ring_list_getdouble(pList2,5),
				(float) ring_list_getdouble(pList2,6));
				break;
			case 2:
				oColor.setRgbF((float) ring_list_getdouble(pList2,3),
				(float) ring_list_getdouble(pList2,4),
				(float) ring_list_getdouble(pList2,5),
				(float) ring_list_getdouble(pList2,6));
				break;
		}
		oPen.setColor(oColor);
		pObject->setPen(oPen);
		pObject->drawPoint( ring_list_getdouble(pList2,1),
			    ring_list_getdouble(pList2,2));	
	}
}

RING_FUNC(ring_QPainter_drawHSVFList)
{
	ring_QPainter_drawList(pPointer,1);
}

RING_FUNC(ring_QPainter_drawRGBFList)
{
	ring_QPainter_drawList(pPointer,2);
}


RING_FUNC(ring_QPicture_boundingRect)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QPicture_data)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	RING_API_RETSTRING(pObject->data());
}


RING_FUNC(ring_QPicture_isNull)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPicture_load)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->load(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QPicture_play)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->play((QPainter *) RING_API_GETCPOINTER(2,"QPainter")));
}


RING_FUNC(ring_QPicture_save)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QPicture_setBoundingRect)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	pObject->setBoundingRect(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QPicture_size)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QPicture_swap)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	pObject->swap(* (QPicture *) RING_API_GETCPOINTER(2,"QPicture"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPicture"));
}


RING_FUNC(ring_QPen_brush)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->brush();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QPen_capStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->capStyle());
}


RING_FUNC(ring_QPen_color)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->color();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QPen_dashOffset)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->dashOffset());
}


RING_FUNC(ring_QPen_isCosmetic)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->isCosmetic());
}


RING_FUNC(ring_QPen_isSolid)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->isSolid());
}


RING_FUNC(ring_QPen_joinStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->joinStyle());
}


RING_FUNC(ring_QPen_miterLimit)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->miterLimit());
}


RING_FUNC(ring_QPen_setBrush)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	pObject->setBrush(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QPen_setCapStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCapStyle( (Qt::PenCapStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setColor)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	pObject->setColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QPen_setCosmetic)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCosmetic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setDashOffset)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDashOffset( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setJoinStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setJoinStyle( (Qt::PenJoinStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setMiterLimit)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMiterLimit( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle( (Qt::PenStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setWidth)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setWidthF)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidthF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_style)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->style());
}


RING_FUNC(ring_QPen_swap)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	pObject->swap(* (QPen *) RING_API_GETCPOINTER(2,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPen"));
}


RING_FUNC(ring_QPen_width)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QPen_widthF)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->widthF());
}


RING_FUNC(ring_QColor_alpha)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->alpha());
}


RING_FUNC(ring_QColor_alphaF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->alphaF());
}


RING_FUNC(ring_QColor_black)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->black());
}


RING_FUNC(ring_QColor_blackF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->blackF());
}


RING_FUNC(ring_QColor_blue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->blue());
}


RING_FUNC(ring_QColor_blueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->blueF());
}


RING_FUNC(ring_QColor_convertTo)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->convertTo( (QColor::Spec )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_cyan)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->cyan());
}


RING_FUNC(ring_QColor_cyanF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->cyanF());
}


RING_FUNC(ring_QColor_darker)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->darker( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_getCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getCmyk(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5),RING_API_GETINTPOINTER(6));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
	RING_API_ACCEPTINTVALUE(5) ;
}


RING_FUNC(ring_QColor_getCmykF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getCmykF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"),(qreal *) RING_API_GETCPOINTER(6,"qreal"));
}


RING_FUNC(ring_QColor_getHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHsl(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QColor_getHslF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHslF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"));
}


RING_FUNC(ring_QColor_getHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHsv(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QColor_getHsvF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHsvF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"));
}


RING_FUNC(ring_QColor_getRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRgb(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QColor_getRgbF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRgbF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"));
}


RING_FUNC(ring_QColor_green)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->green());
}


RING_FUNC(ring_QColor_greenF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->greenF());
}


RING_FUNC(ring_QColor_hslHue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslHue());
}


RING_FUNC(ring_QColor_hslHueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslHueF());
}


RING_FUNC(ring_QColor_hslSaturation)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslSaturation());
}


RING_FUNC(ring_QColor_hslSaturationF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslSaturationF());
}


RING_FUNC(ring_QColor_hsvHue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvHue());
}


RING_FUNC(ring_QColor_hsvHueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvHueF());
}


RING_FUNC(ring_QColor_hsvSaturation)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvSaturation());
}


RING_FUNC(ring_QColor_hsvSaturationF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvSaturationF());
}


RING_FUNC(ring_QColor_hue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hue());
}


RING_FUNC(ring_QColor_hueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hueF());
}


RING_FUNC(ring_QColor_isValid)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QColor_lighter)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->lighter( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_lightness)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->lightness());
}


RING_FUNC(ring_QColor_lightnessF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->lightnessF());
}


RING_FUNC(ring_QColor_magenta)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->magenta());
}


RING_FUNC(ring_QColor_magentaF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->magentaF());
}


RING_FUNC(ring_QColor_name)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QColor_red)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->red());
}


RING_FUNC(ring_QColor_redF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->redF());
}


RING_FUNC(ring_QColor_rgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QRgb *pValue ; 
		pValue = (QRgb *) RING_API_MALLOC(sizeof(QRgb)) ;
		*pValue = pObject->rgb();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRgb",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QColor_rgba)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QRgb *pValue ; 
		pValue = (QRgb *) RING_API_MALLOC(sizeof(QRgb)) ;
		*pValue = pObject->rgba();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRgb",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QColor_saturation)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->saturation());
}


RING_FUNC(ring_QColor_saturationF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->saturationF());
}


RING_FUNC(ring_QColor_setAlpha)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlpha( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setAlphaF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlphaF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setBlue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBlue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setBlueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBlueF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCmyk( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QColor_setCmykF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCmykF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5), (double ) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QColor_setGreen)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGreen( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setGreenF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGreenF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHsl( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setHslF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHslF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHsv( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setHsvF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHsvF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setNamedColor)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNamedColor(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QColor_setRed)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRed( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setRedF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRedF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRgb( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setRgbF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRgbF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setRgba)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	pObject->setRgba(* (QRgb  *) RING_API_GETCPOINTER(2,"QRgb"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRgb"));
}


RING_FUNC(ring_QColor_spec)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->spec());
}


RING_FUNC(ring_QColor_toCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toCmyk();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_toHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toHsl();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_toHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toHsv();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_toRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toRgb();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_value)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QColor_valueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->valueF());
}


RING_FUNC(ring_QColor_yellow)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->yellow());
}


RING_FUNC(ring_QColor_yellowF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->yellowF());
}


RING_FUNC(ring_QColor_colorNames)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->colorNames();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QColor_fromCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromCmyk( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromCmykF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromCmykF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5), (double ) RING_API_GETNUMBER(6));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHsl( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromHslF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHslF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHsv( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromHsvF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHsvF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromRgb( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromRgbF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromRgbF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_fromRgba)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromRgba(* (QRgb  *) RING_API_GETCPOINTER(2,"QRgb"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRgb"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColor_isValidColor)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isValidColor(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFont_setRawMode)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRawMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setRawName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRawName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFont_rawMode)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->rawMode());
}


RING_FUNC(ring_QFont_rawName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->rawName().toStdString().c_str());
}


RING_FUNC(ring_QFont_lastResortFamily)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->lastResortFamily().toStdString().c_str());
}


RING_FUNC(ring_QFont_lastResortFont)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->lastResortFont().toStdString().c_str());
}


RING_FUNC(ring_QFont_bold)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->bold());
}


RING_FUNC(ring_QFont_capitalization)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->capitalization());
}


RING_FUNC(ring_QFont_defaultFamily)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->defaultFamily().toStdString().c_str());
}


RING_FUNC(ring_QFont_exactMatch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->exactMatch());
}


RING_FUNC(ring_QFont_family)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->family().toStdString().c_str());
}


RING_FUNC(ring_QFont_fixedPitch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->fixedPitch());
}


RING_FUNC(ring_QFont_fromString)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->fromString(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFont_hintingPreference)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->hintingPreference());
}


RING_FUNC(ring_QFont_isCopyOf)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->isCopyOf(* (QFont *) RING_API_GETCPOINTER(2,"QFont")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QFont_italic)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->italic());
}


RING_FUNC(ring_QFont_kerning)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->kerning());
}


RING_FUNC(ring_QFont_key)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->key().toStdString().c_str());
}


RING_FUNC(ring_QFont_letterSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->letterSpacing());
}


RING_FUNC(ring_QFont_letterSpacingType)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->letterSpacingType());
}


RING_FUNC(ring_QFont_overline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->overline());
}


RING_FUNC(ring_QFont_pixelSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->pixelSize());
}


RING_FUNC(ring_QFont_pointSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->pointSize());
}


RING_FUNC(ring_QFont_pointSizeF)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->pointSizeF());
}


RING_FUNC(ring_QFont_resolve)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->resolve(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QFont_setBold)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBold( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setCapitalization)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCapitalization( (QFont::Capitalization )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setFamily)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFamily(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFont_setFixedPitch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedPitch( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setHintingPreference)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHintingPreference( (QFont::HintingPreference )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setItalic)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItalic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setKerning)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKerning( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setLetterSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLetterSpacing( (QFont::SpacingType )  (int) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFont_setOverline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOverline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setPixelSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPixelSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setPointSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPointSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setPointSizeF)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPointSizeF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setStretch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretch( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setStrikeOut)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStrikeOut( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setStyle)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle( (QFont::Style )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setStyleHint)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleHint( (QFont::StyleHint )  (int) RING_API_GETNUMBER(2), (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFont_setStyleName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFont_setStyleStrategy)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleStrategy( (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setUnderline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUnderline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setWeight)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setWordSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordSpacing( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_stretch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->stretch());
}


RING_FUNC(ring_QFont_strikeOut)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->strikeOut());
}


RING_FUNC(ring_QFont_style)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->style());
}


RING_FUNC(ring_QFont_styleHint)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->styleHint());
}


RING_FUNC(ring_QFont_styleName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->styleName().toStdString().c_str());
}


RING_FUNC(ring_QFont_styleStrategy)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->styleStrategy());
}


RING_FUNC(ring_QFont_toString)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QFont_underline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->underline());
}


RING_FUNC(ring_QFont_weight)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->weight());
}


RING_FUNC(ring_QFont_wordSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->wordSpacing());
}


RING_FUNC(ring_QFont_insertSubstitution)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSubstitution(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFont_insertSubstitutions)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSubstitutions(RING_API_GETSTRING(2),* (QStringList *) RING_API_GETCPOINTER(3,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QStringList"));
}


RING_FUNC(ring_QFont_substitute)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->substitute(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QFont_substitutes)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->substitutes(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFont_substitutions)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->substitutions();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QBrush_matrix)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QMatrix *pValue ; 
		pValue = (QMatrix *) RING_API_MALLOC(sizeof(QMatrix)) ;
		*pValue = pObject->matrix();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMatrix",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QBrush_setMatrix)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setMatrix(* (QMatrix *) RING_API_GETCPOINTER(2,"QMatrix"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QMatrix"));
}


RING_FUNC(ring_QBrush_color)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->color();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QBrush_gradient)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	RING_API_RETCPOINTER(pObject->gradient(),"QGradient");
}


RING_FUNC(ring_QBrush_isOpaque)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	RING_API_RETNUMBER(pObject->isOpaque());
}


RING_FUNC(ring_QBrush_setColor)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QBrush_setStyle)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle( (Qt::BrushStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBrush_setTexture)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setTexture(* (QPixmap *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QBrush_setTextureImage)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setTextureImage(* (QImage *) RING_API_GETCPOINTER(2,"QImage"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QImage"));
}


RING_FUNC(ring_QBrush_setTransform)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setTransform(* (QTransform *) RING_API_GETCPOINTER(2,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
}


RING_FUNC(ring_QBrush_style)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	RING_API_RETNUMBER(pObject->style());
}


RING_FUNC(ring_QBrush_swap)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->swap(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QBrush_texture)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->texture();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QBrush_textureImage)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->textureImage();
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QBrush_transform)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->transform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextCursor_anchor)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->anchor());
}


RING_FUNC(ring_QTextCursor_atBlockEnd)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atBlockEnd());
}


RING_FUNC(ring_QTextCursor_atBlockStart)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atBlockStart());
}


RING_FUNC(ring_QTextCursor_atEnd)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QTextCursor_atStart)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atStart());
}


RING_FUNC(ring_QTextCursor_beginEditBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->beginEditBlock();
}


RING_FUNC(ring_QTextCursor_block)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->block();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextCursor_blockCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->blockCharFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QTextCursor_blockFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextBlockFormat *pValue ; 
		pValue = (QTextBlockFormat *) RING_API_MALLOC(sizeof(QTextBlockFormat)) ;
		*pValue = pObject->blockFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlockFormat",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextCursor_blockNumber)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->blockNumber());
}


RING_FUNC(ring_QTextCursor_charFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->charFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QTextCursor_clearSelection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->clearSelection();
}


RING_FUNC(ring_QTextCursor_columnNumber)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->columnNumber());
}


RING_FUNC(ring_QTextCursor_createList)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->createList(* (QTextListFormat *) RING_API_GETCPOINTER(2,"QTextListFormat")),"QTextList");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextListFormat"));
}


RING_FUNC(ring_QTextCursor_currentFrame)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->currentFrame(),"QTextFrame");
}


RING_FUNC(ring_QTextCursor_currentList)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->currentList(),"QTextList");
}


RING_FUNC(ring_QTextCursor_currentTable)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->currentTable(),"QTextTable");
}


RING_FUNC(ring_QTextCursor_deleteChar)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->deleteChar();
}


RING_FUNC(ring_QTextCursor_deletePreviousChar)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->deletePreviousChar();
}


RING_FUNC(ring_QTextCursor_document)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QTextCursor_endEditBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->endEditBlock();
}


RING_FUNC(ring_QTextCursor_hasComplexSelection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->hasComplexSelection());
}


RING_FUNC(ring_QTextCursor_hasSelection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->hasSelection());
}


RING_FUNC(ring_QTextCursor_insertBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->insertBlock();
}


RING_FUNC(ring_QTextCursor_insertFragment)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->insertFragment(* (QTextDocumentFragment *) RING_API_GETCPOINTER(2,"QTextDocumentFragment"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextDocumentFragment"));
}


RING_FUNC(ring_QTextCursor_insertFrame)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->insertFrame(* (QTextFrameFormat *) RING_API_GETCPOINTER(2,"QTextFrameFormat")),"QTextFrame");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextFrameFormat"));
}


RING_FUNC(ring_QTextCursor_insertHtml)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCursor_insertImage)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->insertImage(* (QTextImageFormat *) RING_API_GETCPOINTER(2,"QTextImageFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextImageFormat"));
}


RING_FUNC(ring_QTextCursor_insertList)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->insertList(* (QTextListFormat *) RING_API_GETCPOINTER(2,"QTextListFormat")),"QTextList");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextListFormat"));
}


RING_FUNC(ring_QTextCursor_insertTable)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertTable( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QTextTableFormat *) RING_API_GETCPOINTER(4,"QTextTableFormat")),"QTextTable");
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QTextTableFormat"));
}


RING_FUNC(ring_QTextCursor_insertText)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCursor_insertText_2)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertText(RING_API_GETSTRING(2),* (QTextCharFormat *) RING_API_GETCPOINTER(3,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_isCopyOf)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->isCopyOf(* (QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCursor"));
}


RING_FUNC(ring_QTextCursor_isNull)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QTextCursor_joinPreviousEditBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->joinPreviousEditBlock();
}


RING_FUNC(ring_QTextCursor_keepPositionOnInsert)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->keepPositionOnInsert());
}


RING_FUNC(ring_QTextCursor_mergeBlockCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->mergeBlockCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_mergeBlockFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->mergeBlockFormat(* (QTextBlockFormat *) RING_API_GETCPOINTER(2,"QTextBlockFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextBlockFormat"));
}


RING_FUNC(ring_QTextCursor_mergeCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->mergeCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_movePosition)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->movePosition( (QTextCursor::MoveOperation )  (int) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QTextCursor_position)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->position());
}


RING_FUNC(ring_QTextCursor_positionInBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->positionInBlock());
}


RING_FUNC(ring_QTextCursor_removeSelectedText)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->removeSelectedText();
}


RING_FUNC(ring_QTextCursor_select)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->select( (QTextCursor::SelectionType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_selectedTableCells)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectedTableCells(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QTextCursor_selectedText)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETSTRING(pObject->selectedText().toStdString().c_str());
}


RING_FUNC(ring_QTextCursor_selection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextDocumentFragment *pValue ; 
		pValue = (QTextDocumentFragment *) RING_API_MALLOC(sizeof(QTextDocumentFragment)) ;
		*pValue = pObject->selection();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextDocumentFragment",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextCursor_selectionEnd)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->selectionEnd());
}


RING_FUNC(ring_QTextCursor_selectionStart)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->selectionStart());
}


RING_FUNC(ring_QTextCursor_setBlockCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->setBlockCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_setBlockFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->setBlockFormat(* (QTextBlockFormat *) RING_API_GETCPOINTER(2,"QTextBlockFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextBlockFormat"));
}


RING_FUNC(ring_QTextCursor_setCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->setCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_setKeepPositionOnInsert)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeepPositionOnInsert( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_setPosition)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPosition( (int ) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextCursor_setVerticalMovementX)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalMovementX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_setVisualNavigation)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisualNavigation( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_verticalMovementX)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->verticalMovementX());
}


RING_FUNC(ring_QTextCursor_visualNavigation)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->visualNavigation());
}


RING_FUNC(ring_QTextDocument_addResource)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addResource( (int ) RING_API_GETNUMBER(2),* (QUrl  *) RING_API_GETCPOINTER(3,"QUrl"),* (QVariant  *) RING_API_GETCPOINTER(4,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QVariant"));
}


RING_FUNC(ring_QTextDocument_adjustSize)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->adjustSize();
}


RING_FUNC(ring_QTextDocument_allFormats)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QVector<QTextFormat> *pValue ; 
		pValue = (QVector<QTextFormat> *) RING_API_MALLOC(sizeof(QVector<QTextFormat>)) ;
		*pValue = pObject->allFormats();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector<QTextFormat>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextDocument_availableRedoSteps)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->availableRedoSteps());
}


RING_FUNC(ring_QTextDocument_availableUndoSteps)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->availableUndoSteps());
}


RING_FUNC(ring_QTextDocument_begin)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->begin();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_blockCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->blockCount());
}


RING_FUNC(ring_QTextDocument_characterAt)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QChar *pValue ; 
		pValue = new QChar() ;
		*pValue = pObject->characterAt( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QChar",ring_QChar_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_characterCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->characterCount());
}


RING_FUNC(ring_QTextDocument_clearUndoRedoStacks)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->clearUndoRedoStacks( (QTextDocument::Stacks )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_clone)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->clone((QObject *) RING_API_GETCPOINTER(2,"QObject")),"QTextDocument");
}


RING_FUNC(ring_QTextDocument_defaultCursorMoveStyle)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->defaultCursorMoveStyle());
}


RING_FUNC(ring_QTextDocument_defaultFont)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->defaultFont();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_defaultStyleSheet)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETSTRING(pObject->defaultStyleSheet().toStdString().c_str());
}


RING_FUNC(ring_QTextDocument_defaultTextOption)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextOption *pValue ; 
		pValue = (QTextOption *) RING_API_MALLOC(sizeof(QTextOption)) ;
		*pValue = pObject->defaultTextOption();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextOption",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextDocument_documentLayout)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETCPOINTER(pObject->documentLayout(),"QAbstractTextDocumentLayout");
}


RING_FUNC(ring_QTextDocument_documentMargin)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->documentMargin());
}


RING_FUNC(ring_QTextDocument_drawContents)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawContents((QPainter *) RING_API_GETCPOINTER(2,"QPainter"),* (QRectF  *) RING_API_GETCPOINTER(3,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRectF"));
}


RING_FUNC(ring_QTextDocument_end)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->end();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_find)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->find(RING_API_GETSTRING(2),* (QTextCursor  *) RING_API_GETCPOINTER(3,"QTextCursor"), (QTextDocument::FindFlag )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTextCursor"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCursor",ring_QTextCursor_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_findBlock)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->findBlock( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_findBlockByLineNumber)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->findBlockByLineNumber( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_findBlockByNumber)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->findBlockByNumber( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_firstBlock)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->firstBlock();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_idealWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->idealWidth());
}


RING_FUNC(ring_QTextDocument_indentWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->indentWidth());
}


RING_FUNC(ring_QTextDocument_isEmpty)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QTextDocument_isModified)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isModified());
}


RING_FUNC(ring_QTextDocument_isRedoAvailable)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isRedoAvailable());
}


RING_FUNC(ring_QTextDocument_isUndoAvailable)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isUndoAvailable());
}


RING_FUNC(ring_QTextDocument_isUndoRedoEnabled)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isUndoRedoEnabled());
}


RING_FUNC(ring_QTextDocument_lastBlock)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->lastBlock();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_lineCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->lineCount());
}


RING_FUNC(ring_QTextDocument_markContentsDirty)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->markContentsDirty( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextDocument_maximumBlockCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->maximumBlockCount());
}


RING_FUNC(ring_QTextDocument_metaInformation)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->metaInformation( (QTextDocument::MetaInformation )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTextDocument_object)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->object( (int ) RING_API_GETNUMBER(2)),"QTextObject");
}


RING_FUNC(ring_QTextDocument_objectForFormat)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETCPOINTER(pObject->objectForFormat(* (QTextFormat  *) RING_API_GETCPOINTER(2,"QTextFormat")),"QTextObject");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextFormat"));
}


RING_FUNC(ring_QTextDocument_pageCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->pageCount());
}


RING_FUNC(ring_QTextDocument_pageSize)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) RING_API_MALLOC(sizeof(QSizeF)) ;
		*pValue = pObject->pageSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSizeF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextDocument_redo)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->redo((QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor"));
}


RING_FUNC(ring_QTextDocument_resource)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->resource( (int ) RING_API_GETNUMBER(2),* (QUrl  *) RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QUrl"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QTextDocument_revision)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->revision());
}


RING_FUNC(ring_QTextDocument_rootFrame)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETCPOINTER(pObject->rootFrame(),"QTextFrame");
}


RING_FUNC(ring_QTextDocument_setDefaultCursorMoveStyle)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultCursorMoveStyle( (Qt::CursorMoveStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setDefaultFont)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->setDefaultFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QTextDocument_setDefaultStyleSheet)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultStyleSheet(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextDocument_setDefaultTextOption)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->setDefaultTextOption(* (QTextOption  *) RING_API_GETCPOINTER(2,"QTextOption"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextOption"));
}


RING_FUNC(ring_QTextDocument_setDocumentLayout)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentLayout((QAbstractTextDocumentLayout *) RING_API_GETCPOINTER(2,"QAbstractTextDocumentLayout"));
}


RING_FUNC(ring_QTextDocument_setDocumentMargin)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMargin( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setHtml)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextDocument_setIndentWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndentWidth( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setMaximumBlockCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumBlockCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setMetaInformation)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMetaInformation( (QTextDocument::MetaInformation )  (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTextDocument_setPageSize)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->setPageSize(* (QSizeF  *) RING_API_GETCPOINTER(2,"QSizeF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSizeF"));
}


RING_FUNC(ring_QTextDocument_setPlainText)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextDocument_setTextWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextWidth( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setUndoRedoEnabled)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUndoRedoEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setUseDesignMetrics)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUseDesignMetrics( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_size)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) RING_API_MALLOC(sizeof(QSizeF)) ;
		*pValue = pObject->size();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSizeF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextDocument_textWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->textWidth());
}


RING_FUNC(ring_QTextDocument_toHtml)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETSTRING(pObject->toHtml(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QTextDocument_toPlainText)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETSTRING(pObject->toPlainText().toStdString().c_str());
}


RING_FUNC(ring_QTextDocument_undo)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->undo((QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor"));
}


RING_FUNC(ring_QTextDocument_useDesignMetrics)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->useDesignMetrics());
}


RING_FUNC(ring_QTextDocument_setModified)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModified( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_blockFormat)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextBlockFormat *pValue ; 
		pValue = (QTextBlockFormat *) RING_API_MALLOC(sizeof(QTextBlockFormat)) ;
		*pValue = pObject->blockFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlockFormat",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTextBlock_blockFormatIndex)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->blockFormatIndex());
}


RING_FUNC(ring_QTextBlock_blockNumber)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->blockNumber());
}


RING_FUNC(ring_QTextBlock_charFormat)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->charFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QTextBlock_charFormatIndex)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->charFormatIndex());
}


RING_FUNC(ring_QTextBlock_clearLayout)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	pObject->clearLayout();
}


RING_FUNC(ring_QTextBlock_contains)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTextBlock_document)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QTextBlock_firstLineNumber)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->firstLineNumber());
}


RING_FUNC(ring_QTextBlock_isValid)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QTextBlock_isVisible)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QTextBlock_layout)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->layout(),"QTextLayout");
}


RING_FUNC(ring_QTextBlock_length)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QTextBlock_lineCount)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->lineCount());
}


RING_FUNC(ring_QTextBlock_next)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->next();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextBlock_position)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->position());
}


RING_FUNC(ring_QTextBlock_previous)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->previous();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextBlock",ring_QTextBlock_freefunc);
	}
}


RING_FUNC(ring_QTextBlock_revision)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->revision());
}


RING_FUNC(ring_QTextBlock_setLineCount)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_setRevision)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRevision( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_setUserData)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserData((QTextBlockUserData *) RING_API_GETCPOINTER(2,"QTextBlockUserData"));
}


RING_FUNC(ring_QTextBlock_setUserState)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserState( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_setVisible)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_text)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QTextBlock_textDirection)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->textDirection());
}


RING_FUNC(ring_QTextBlock_textList)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->textList(),"QTextList");
}


RING_FUNC(ring_QTextBlock_userData)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->userData(),"QTextBlockUserData");
}


RING_FUNC(ring_QTextBlock_userState)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->userState());
}


RING_FUNC(ring_QPainterPath_addEllipse)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addEllipse( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainterPath_addPath)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->addPath(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
}


RING_FUNC(ring_QPainterPath_addPolygon)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->addPolygon(* (QPolygonF *) RING_API_GETCPOINTER(2,"QPolygonF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPolygonF"));
}


RING_FUNC(ring_QPainterPath_addRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addRect( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainterPath_addRegion)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->addRegion(* (QRegion *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
}


RING_FUNC(ring_QPainterPath_addRoundedRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addRoundedRect( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7), (Qt::SizeMode )  (int) RING_API_GETNUMBER(8));
}


RING_FUNC(ring_QPainterPath_addText)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addText( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3),* (QFont *) RING_API_GETCPOINTER(4,"QFont"),RING_API_GETSTRING(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QFont"));
}


RING_FUNC(ring_QPainterPath_angleAtPercent)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->angleAtPercent( (qreal ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainterPath_arcMoveTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->arcMoveTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QPainterPath_arcTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->arcTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainterPath_boundingRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->boundingRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainterPath_closeSubpath)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->closeSubpath();
}


RING_FUNC(ring_QPainterPath_connectPath)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->connectPath(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
}


RING_FUNC(ring_QPainterPath_contains)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->contains(* (QPointF *) RING_API_GETCPOINTER(2,"QPointF")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
}


RING_FUNC(ring_QPainterPath_controlPointRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->controlPointRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainterPath_cubicTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cubicTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainterPath_currentPosition)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->currentPosition();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QPainterPath_elementAt)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPainterPath::Element *pValue ; 
		pValue = (QPainterPath::Element *) RING_API_MALLOC(sizeof(QPainterPath::Element)) ;
		*pValue = pObject->elementAt( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath::Element",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainterPath_elementCount)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->elementCount());
}


RING_FUNC(ring_QPainterPath_fillRule)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->fillRule());
}


RING_FUNC(ring_QPainterPath_intersected)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->intersected(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QPainterPath_intersects)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->intersects(* (QRectF *) RING_API_GETCPOINTER(2,"QRectF")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QPainterPath_isEmpty)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QPainterPath_length)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QPainterPath_lineTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->lineTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainterPath_moveTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainterPath_percentAtLength)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->percentAtLength( (qreal ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainterPath_pointAtPercent)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->pointAtPercent( (qreal ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QPainterPath_quadTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->quadTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainterPath_setElementPositionAt)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setElementPositionAt( (int ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QPainterPath_setFillRule)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFillRule( (Qt::FillRule )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainterPath_simplified)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->simplified();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QPainterPath_slopeAtPercent)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->slopeAtPercent( (qreal ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainterPath_subtracted)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->subtracted(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QPainterPath_swap)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->swap(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
}


RING_FUNC(ring_QPainterPath_toFillPolygon)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPolygonF *pValue ; 
		pValue = (QPolygonF *) RING_API_MALLOC(sizeof(QPolygonF)) ;
		*pValue = pObject->toFillPolygon(* (QTransform *) RING_API_GETCPOINTER(2,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPolygonF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPainterPath_toReversed)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->toReversed();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QPainterPath_translate)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainterPath_translated)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->translated( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QPainterPath_united)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->united(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QImage_byteCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->byteCount());
}


RING_FUNC(ring_QImage_allGray)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->allGray());
}


RING_FUNC(ring_QImage_bitPlaneCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->bitPlaneCount());
}


RING_FUNC(ring_QImage_bits)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETCPOINTER(pObject->bits(),"uchar");
}


RING_FUNC(ring_QImage_bytesPerLine)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->bytesPerLine());
}


RING_FUNC(ring_QImage_cacheKey)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->cacheKey());
}


RING_FUNC(ring_QImage_color)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRgb *pValue ; 
		pValue = (QRgb *) RING_API_MALLOC(sizeof(QRgb)) ;
		*pValue = pObject->color( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRgb",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QImage_colorCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->colorCount());
}


RING_FUNC(ring_QImage_constBits)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETCPOINTER(pObject->constBits(),"uchar");
}


RING_FUNC(ring_QImage_constScanLine)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->constScanLine( (int ) RING_API_GETNUMBER(2)),"uchar");
}


RING_FUNC(ring_QImage_convertToFormat)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->convertToFormat( (QImage::Format )  (int) RING_API_GETNUMBER(2), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_copy)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->copy( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_createAlphaMask)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->createAlphaMask( (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_createHeuristicMask)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->createHeuristicMask( (bool ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_createMaskFromColor)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->createMaskFromColor(* (QRgb  *) RING_API_GETCPOINTER(2,"QRgb"), (Qt::MaskMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRgb"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_depth)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->depth());
}


RING_FUNC(ring_QImage_dotsPerMeterX)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->dotsPerMeterX());
}


RING_FUNC(ring_QImage_dotsPerMeterY)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->dotsPerMeterY());
}


RING_FUNC(ring_QImage_fill)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	pObject->fill(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QImage_format)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->format());
}


RING_FUNC(ring_QImage_hasAlphaChannel)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->hasAlphaChannel());
}


RING_FUNC(ring_QImage_height)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QImage_invertPixels)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->invertPixels( (QImage::InvertMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_isGrayscale)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->isGrayscale());
}


RING_FUNC(ring_QImage_isNull)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QImage_load)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->load(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QImage_loadFromData)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->loadFromData(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"),RING_API_GETSTRING(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QImage_mirrored)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->mirrored( (bool ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_offset)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->offset();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QImage_pixel)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRgb *pValue ; 
		pValue = (QRgb *) RING_API_MALLOC(sizeof(QRgb)) ;
		*pValue = pObject->pixel( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRgb",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QImage_pixelIndex)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->pixelIndex( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QImage_rect)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->rect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QImage_rgbSwapped)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->rgbSwapped();
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_save)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QImage_scaled)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->scaled( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(4), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_scaledToHeight)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->scaledToHeight( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_scaledToWidth)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->scaledToWidth( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QImage_scanLine)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->scanLine( (int ) RING_API_GETNUMBER(2)),"uchar");
}


RING_FUNC(ring_QImage_setColor)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColor( (int ) RING_API_GETNUMBER(2),* (QRgb  *) RING_API_GETCPOINTER(3,"QRgb"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRgb"));
}


RING_FUNC(ring_QImage_setColorCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColorCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_setDotsPerMeterX)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDotsPerMeterX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_setDotsPerMeterY)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDotsPerMeterY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_setOffset)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	pObject->setOffset(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QImage_setPixel)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPixel( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (uint ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QImage_setText)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QImage_size)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QImage_swap)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	pObject->swap(* (QImage *) RING_API_GETCPOINTER(2,"QImage"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QImage"));
}


RING_FUNC(ring_QImage_text)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->text(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QImage_textKeys)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->textKeys();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QImage_valid)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->valid( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QImage_width)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QTextCharFormat_anchorHref)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETSTRING(pObject->anchorHref().toStdString().c_str());
}


RING_FUNC(ring_QTextCharFormat_anchorNames)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->anchorNames();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QTextCharFormat_font)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QTextCharFormat_fontCapitalization)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontCapitalization());
}


RING_FUNC(ring_QTextCharFormat_fontFamily)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETSTRING(pObject->fontFamily().toStdString().c_str());
}


RING_FUNC(ring_QTextCharFormat_fontFixedPitch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontFixedPitch());
}


RING_FUNC(ring_QTextCharFormat_fontHintingPreference)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontHintingPreference());
}


RING_FUNC(ring_QTextCharFormat_fontItalic)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontItalic());
}


RING_FUNC(ring_QTextCharFormat_fontKerning)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontKerning());
}


RING_FUNC(ring_QTextCharFormat_fontLetterSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontLetterSpacing());
}


RING_FUNC(ring_QTextCharFormat_fontLetterSpacingType)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontLetterSpacingType());
}


RING_FUNC(ring_QTextCharFormat_fontOverline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontOverline());
}


RING_FUNC(ring_QTextCharFormat_fontPointSize)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontPointSize());
}


RING_FUNC(ring_QTextCharFormat_fontStretch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStretch());
}


RING_FUNC(ring_QTextCharFormat_fontStrikeOut)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStrikeOut());
}


RING_FUNC(ring_QTextCharFormat_fontStyleHint)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStyleHint());
}


RING_FUNC(ring_QTextCharFormat_fontStyleStrategy)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStyleStrategy());
}


RING_FUNC(ring_QTextCharFormat_fontUnderline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontUnderline());
}


RING_FUNC(ring_QTextCharFormat_fontWeight)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontWeight());
}


RING_FUNC(ring_QTextCharFormat_fontWordSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontWordSpacing());
}


RING_FUNC(ring_QTextCharFormat_isAnchor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->isAnchor());
}


RING_FUNC(ring_QTextCharFormat_isValid)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QTextCharFormat_setAnchor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAnchor( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setAnchorHref)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAnchorHref(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCharFormat_setAnchorNames)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setAnchorNames(* (QStringList    *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QTextCharFormat_setFont_2)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setFont(* (QFont    *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QTextCharFormat_setFontCapitalization)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontCapitalization( (QFont::Capitalization )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontFamily)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontFamily(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCharFormat_setFontFixedPitch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontFixedPitch( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontHintingPreference)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontHintingPreference( (QFont::HintingPreference )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontItalic)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontItalic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontKerning)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontKerning( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontLetterSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontLetterSpacing( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontLetterSpacingType)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontLetterSpacingType( (QFont::SpacingType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontOverline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontOverline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontPointSize)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontPointSize( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontStretch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStretch( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontStrikeOut)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStrikeOut( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontStyleHint)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStyleHint( (QFont::StyleHint )  (int) RING_API_GETNUMBER(2), (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextCharFormat_setFontStyleStrategy)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStyleStrategy( (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontUnderline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontUnderline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontWeight)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontWeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontWordSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontWordSpacing( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setTextOutline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setTextOutline(* (QPen    *) RING_API_GETCPOINTER(2,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPen"));
}


RING_FUNC(ring_QTextCharFormat_setToolTip)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCharFormat_setUnderlineColor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setUnderlineColor(* (QColor    *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QTextCharFormat_setUnderlineStyle)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUnderlineStyle( (QTextCharFormat::UnderlineStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setVerticalAlignment)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalAlignment( (QTextCharFormat::VerticalAlignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_textOutline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QPen *pValue ; 
		pValue = new QPen() ;
		*pValue = pObject->textOutline();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPen",ring_QPen_freefunc);
	}
}


RING_FUNC(ring_QTextCharFormat_toolTip)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QTextCharFormat_underlineColor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->underlineColor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QTextCharFormat_underlineStyle)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->underlineStyle());
}


RING_FUNC(ring_QTextCharFormat_verticalAlignment)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->verticalAlignment());
}


RING_FUNC(ring_QFontMetrics_width)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->width(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QFontMetrics_width_2)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->width(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QFontMetrics_ascent)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->ascent());
}


RING_FUNC(ring_QFontMetrics_averageCharWidth)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->averageCharWidth());
}


RING_FUNC(ring_QFontMetrics_boundingRect)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QFontMetrics_boundingRect_2)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QFontMetrics_boundingRect_3)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 9 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6),RING_API_GETSTRING(7), (int ) RING_API_GETNUMBER(8),RING_API_GETINTPOINTER(9));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
	RING_API_ACCEPTINTVALUE(8) ;
}


RING_FUNC(ring_QFontMetrics_boundingRect_4)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect(* (QRect    *) RING_API_GETCPOINTER(2,"QRect"), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5),RING_API_GETINTPOINTER(6));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
	RING_API_ACCEPTINTVALUE(5) ;
}


RING_FUNC(ring_QFontMetrics_descent)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->descent());
}


RING_FUNC(ring_QFontMetrics_elidedText)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->elidedText(RING_API_GETSTRING(2), (Qt::TextElideMode )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5)).toStdString().c_str());
}


RING_FUNC(ring_QFontMetrics_height)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QFontMetrics_inFont)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->inFont(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QFontMetrics_inFontUcs4)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->inFontUcs4( (uint ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFontMetrics_leading)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->leading());
}


RING_FUNC(ring_QFontMetrics_leftBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->leftBearing(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QFontMetrics_lineSpacing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->lineSpacing());
}


RING_FUNC(ring_QFontMetrics_lineWidth)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->lineWidth());
}


RING_FUNC(ring_QFontMetrics_maxWidth)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->maxWidth());
}


RING_FUNC(ring_QFontMetrics_minLeftBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->minLeftBearing());
}


RING_FUNC(ring_QFontMetrics_minRightBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->minRightBearing());
}


RING_FUNC(ring_QFontMetrics_overlinePos)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->overlinePos());
}


RING_FUNC(ring_QFontMetrics_rightBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->rightBearing(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QFontMetrics_size)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4),RING_API_GETINTPOINTER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QFontMetrics_strikeOutPos)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->strikeOutPos());
}


RING_FUNC(ring_QFontMetrics_tightBoundingRect)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->tightBoundingRect(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QFontMetrics_underlinePos)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->underlinePos());
}


RING_FUNC(ring_QFontMetrics_xHeight)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->xHeight());
}


RING_FUNC(ring_QFontMetrics_horizontalAdvance)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->horizontalAdvance(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QFontMetrics_horizontalAdvance_2)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->horizontalAdvance(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QChar"));
}


RING_FUNC(ring_QLinearGradient_finalStop)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->finalStop();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QLinearGradient_setFinalStop)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	pObject->setFinalStop(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
}


RING_FUNC(ring_QLinearGradient_setFinalStop_2)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFinalStop( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLinearGradient_setStart)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	pObject->setStart(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
}


RING_FUNC(ring_QLinearGradient_setStart_2)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStart( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLinearGradient_start)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->start();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QGradient_coordinateMode)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	RING_API_RETNUMBER(pObject->coordinateMode());
}


RING_FUNC(ring_QGradient_setColorAt)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColorAt( (qreal ) RING_API_GETNUMBER(2),* (QColor    *) RING_API_GETCPOINTER(3,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QColor"));
}


RING_FUNC(ring_QGradient_setCoordinateMode)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCoordinateMode( (QGradient::CoordinateMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGradient_setSpread)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpread( (QGradient::Spread )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGradient_setStops)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	pObject->setStops(* (QGradientStops  *) RING_API_GETCPOINTER(2,"QGradientStops"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QGradientStops"));
}


RING_FUNC(ring_QGradient_spread)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	RING_API_RETNUMBER(pObject->spread());
}


RING_FUNC(ring_QGradient_stops)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	{
		QGradientStops *pValue ; 
		pValue = (QGradientStops *) RING_API_MALLOC(sizeof(QGradientStops)) ;
		*pValue = pObject->stops();
		RING_API_RETMANAGEDCPOINTER(pValue,"QGradientStops",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGradient_type)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QCursor_bitmap)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	RING_API_RETCPOINTER(pObject->bitmap(),"QBitmap");
}


RING_FUNC(ring_QCursor_mask)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	RING_API_RETCPOINTER(pObject->mask(),"QBitmap");
}


RING_FUNC(ring_QCursor_hotSpot)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->hotSpot();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QCursor_pixmap)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->pixmap();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QCursor_setShape)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShape( (Qt::CursorShape )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCursor_shape)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	RING_API_RETNUMBER(pObject->shape());
}


RING_FUNC(ring_QCursor_pos)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->pos();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QCursor_pos_2)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->pos((QScreen *) RING_API_GETCPOINTER(2,"QScreen"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QCursor_setPos)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPos( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCursor_setPos_2)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPos((QScreen *) RING_API_GETCPOINTER(2,"QScreen"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QCursor_setPos_3)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	pObject->setPos(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QCursor_setPos_4)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPos((QScreen *) RING_API_GETCPOINTER(2,"QScreen"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPoint"));
}


RING_FUNC(ring_QScreen_angleBetween)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->angleBetween(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"),* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(3,"Qt::ScreenOrientation")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QScreen_availableGeometry)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->availableGeometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QScreen_availableSize)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->availableSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QScreen_availableVirtualGeometry)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->availableVirtualGeometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QScreen_availableVirtualSize)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->availableVirtualSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QScreen_depth)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->depth());
}


RING_FUNC(ring_QScreen_devicePixelRatio)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QScreen_geometry)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QScreen_grabWindow)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->grabWindow( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QScreen_grabWindow_2)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->grabWindow( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QScreen_handle)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETCPOINTER(pObject->handle(),"QPlatformScreen");
}


RING_FUNC(ring_QScreen_isLandscape)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->isLandscape(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QScreen_isPortrait)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->isPortrait(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QScreen_logicalDotsPerInch)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->logicalDotsPerInch());
}


RING_FUNC(ring_QScreen_logicalDotsPerInchX)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->logicalDotsPerInchX());
}


RING_FUNC(ring_QScreen_logicalDotsPerInchY)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->logicalDotsPerInchY());
}


RING_FUNC(ring_QScreen_mapBetween)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->mapBetween(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"),* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(3,"Qt::ScreenOrientation"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QScreen_name)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QScreen_nativeOrientation)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) RING_API_MALLOC(sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->nativeOrientation();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ScreenOrientation",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QScreen_orientation)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) RING_API_MALLOC(sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->orientation();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ScreenOrientation",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QScreen_orientationUpdateMask)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientations *pValue ; 
		pValue = (Qt::ScreenOrientations *) RING_API_MALLOC(sizeof(Qt::ScreenOrientations)) ;
		*pValue = pObject->orientationUpdateMask();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ScreenOrientations",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QScreen_physicalDotsPerInch)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->physicalDotsPerInch());
}


RING_FUNC(ring_QScreen_physicalDotsPerInchX)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->physicalDotsPerInchX());
}


RING_FUNC(ring_QScreen_physicalDotsPerInchY)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->physicalDotsPerInchY());
}


RING_FUNC(ring_QScreen_physicalSize)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) RING_API_MALLOC(sizeof(QSizeF)) ;
		*pValue = pObject->physicalSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSizeF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QScreen_primaryOrientation)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) RING_API_MALLOC(sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->primaryOrientation();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ScreenOrientation",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QScreen_refreshRate)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->refreshRate());
}


RING_FUNC(ring_QScreen_setOrientationUpdateMask)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	pObject->setOrientationUpdateMask(* (Qt::ScreenOrientations  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientations"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ScreenOrientations"));
}


RING_FUNC(ring_QScreen_size)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QScreen_transformBetween)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->transformBetween(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"),* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(3,"Qt::ScreenOrientation"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWindow_baseSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->baseSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWindow_contentOrientation)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) RING_API_MALLOC(sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->contentOrientation();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ScreenOrientation",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWindow_create)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->create();
}


RING_FUNC(ring_QWindow_cursor)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QCursor *pValue ; 
		pValue = new QCursor() ;
		*pValue = pObject->cursor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QCursor",ring_QCursor_freefunc);
	}
}


RING_FUNC(ring_QWindow_destroy)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->destroy();
}


RING_FUNC(ring_QWindow_devicePixelRatio)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QWindow_filePath)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->filePath().toStdString().c_str());
}


RING_FUNC(ring_QWindow_flags)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QWindow_focusObject)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->focusObject(),"QObject");
}


RING_FUNC(ring_QWindow_frameGeometry)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->frameGeometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWindow_frameMargins)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) RING_API_MALLOC(sizeof(QMargins)) ;
		*pValue = pObject->frameMargins();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMargins",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWindow_framePosition)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->framePosition();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWindow_geometry)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWindow_height)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QWindow_icon)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QWindow_isActive)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QWindow_isAncestorOf)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAncestorOf((QWindow *) RING_API_GETCPOINTER(2,"QWindow"), (QWindow::AncestorMode )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QWindow_isExposed)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isExposed());
}


RING_FUNC(ring_QWindow_isModal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isModal());
}


RING_FUNC(ring_QWindow_isTopLevel)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isTopLevel());
}


RING_FUNC(ring_QWindow_isVisible)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QWindow_mapFromGlobal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromGlobal(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWindow_mapToGlobal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapToGlobal(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWindow_mask)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->mask();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QWindow_maximumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->maximumHeight());
}


RING_FUNC(ring_QWindow_maximumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->maximumSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWindow_maximumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->maximumWidth());
}


RING_FUNC(ring_QWindow_minimumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->minimumHeight());
}


RING_FUNC(ring_QWindow_minimumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWindow_minimumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->minimumWidth());
}


RING_FUNC(ring_QWindow_modality)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->modality());
}


RING_FUNC(ring_QWindow_opacity)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->opacity());
}


RING_FUNC(ring_QWindow_position)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->position();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWindow_reportContentOrientationChange)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->reportContentOrientationChange(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QWindow_requestedFormat)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSurfaceFormat *pValue ; 
		pValue = (QSurfaceFormat *) RING_API_MALLOC(sizeof(QSurfaceFormat)) ;
		*pValue = pObject->requestedFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSurfaceFormat",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWindow_resize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->resize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QWindow_resize_2)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWindow_screen)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->screen(),"QScreen");
}


RING_FUNC(ring_QWindow_setBaseSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setBaseSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QWindow_setCursor)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setCursor(* (QCursor  *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QCursor"));
}


RING_FUNC(ring_QWindow_setFilePath)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilePath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setFlags)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::WindowFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setFormat)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setFormat(* (QSurfaceFormat  *) RING_API_GETCPOINTER(2,"QSurfaceFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSurfaceFormat"));
}


RING_FUNC(ring_QWindow_setFramePosition)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setFramePosition(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QWindow_setGeometry)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGeometry( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWindow_setGeometry_2)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setGeometry(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QWindow_setIcon)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setIcon(* (QIcon  *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QWindow_setKeyboardGrabEnabled)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setKeyboardGrabEnabled( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWindow_setMask)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setMask(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
}


RING_FUNC(ring_QWindow_setMaximumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setMaximumSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QWindow_setMinimumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setMinimumSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QWindow_setModality)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModality( (Qt::WindowModality )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMouseGrabEnabled)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setMouseGrabEnabled( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWindow_setOpacity)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpacity( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setParent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setParent((QWindow *) RING_API_GETCPOINTER(2,"QWindow"));
}


RING_FUNC(ring_QWindow_setPosition)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setPosition(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QWindow_setPosition_2)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPosition( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWindow_setScreen)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScreen((QScreen *) RING_API_GETCPOINTER(2,"QScreen"));
}


RING_FUNC(ring_QWindow_setSizeIncrement)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setSizeIncrement(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QWindow_setTransientParent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTransientParent((QWindow *) RING_API_GETCPOINTER(2,"QWindow"));
}


RING_FUNC(ring_QWindow_setVisibility)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisibility( (QWindow::Visibility )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setWindowState)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowState( (Qt::WindowState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_sizeIncrement)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeIncrement();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWindow_title)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->title().toStdString().c_str());
}


RING_FUNC(ring_QWindow_transientParent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->transientParent(),"QWindow");
}


RING_FUNC(ring_QWindow_type)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QWindow_unsetCursor)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->unsetCursor();
}


RING_FUNC(ring_QWindow_visibility)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->visibility());
}


RING_FUNC(ring_QWindow_width)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QWindow_winId)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		WId *pValue ; 
		pValue = (WId *) RING_API_MALLOC(sizeof(WId)) ;
		*pValue = pObject->winId();
		RING_API_RETMANAGEDCPOINTER(pValue,"WId",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWindow_windowState)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->windowState());
}


RING_FUNC(ring_QWindow_x)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QWindow_y)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QWindow_alert)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->alert( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_close)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->close());
}


RING_FUNC(ring_QWindow_hide)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->hide();
}


RING_FUNC(ring_QWindow_lower)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->lower();
}


RING_FUNC(ring_QWindow_raise)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->raise();
}


RING_FUNC(ring_QWindow_requestActivate)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->requestActivate();
}


RING_FUNC(ring_QWindow_setHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMaximumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMaximumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMinimumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMinimumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setTitle)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setVisible)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setX)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setY)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_show)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->show();
}


RING_FUNC(ring_QWindow_showFullScreen)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showFullScreen();
}


RING_FUNC(ring_QWindow_showMaximized)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showMaximized();
}


RING_FUNC(ring_QWindow_showMinimized)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showMinimized();
}


RING_FUNC(ring_QWindow_showNormal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showNormal();
}


RING_FUNC(ring_QWindow_fromWinId)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->fromWinId(* (WId  *) RING_API_GETCPOINTER(2,"WId")),"QWindow");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"WId"));
}


RING_FUNC(ring_QWindow_setactiveChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactiveChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setcontentOrientationChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcontentOrientationChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setfocusObjectChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfocusObjectChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setheightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setheightChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setmaximumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmaximumHeightChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setmaximumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmaximumWidthChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setminimumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setminimumHeightChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setminimumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setminimumWidthChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setmodalityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmodalityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setopacityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setopacityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setscreenChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setscreenChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setvisibilityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvisibilityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setvisibleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvisibleChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setwidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwidthChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setwindowStateChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwindowStateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setwindowTitleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwindowTitleChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setxChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setxChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setyChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setyChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_getactiveChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getactiveChangedEvent());
}


RING_FUNC(ring_QWindow_getcontentOrientationChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getcontentOrientationChangedEvent());
}


RING_FUNC(ring_QWindow_getfocusObjectChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getfocusObjectChangedEvent());
}


RING_FUNC(ring_QWindow_getheightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getheightChangedEvent());
}


RING_FUNC(ring_QWindow_getmaximumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getmaximumHeightChangedEvent());
}


RING_FUNC(ring_QWindow_getmaximumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getmaximumWidthChangedEvent());
}


RING_FUNC(ring_QWindow_getminimumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getminimumHeightChangedEvent());
}


RING_FUNC(ring_QWindow_getminimumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getminimumWidthChangedEvent());
}


RING_FUNC(ring_QWindow_getmodalityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getmodalityChangedEvent());
}


RING_FUNC(ring_QWindow_getopacityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getopacityChangedEvent());
}


RING_FUNC(ring_QWindow_getscreenChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getscreenChangedEvent());
}


RING_FUNC(ring_QWindow_getvisibilityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getvisibilityChangedEvent());
}


RING_FUNC(ring_QWindow_getvisibleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getvisibleChangedEvent());
}


RING_FUNC(ring_QWindow_getwidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getwidthChangedEvent());
}


RING_FUNC(ring_QWindow_getwindowStateChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getwindowStateChangedEvent());
}


RING_FUNC(ring_QWindow_getwindowTitleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getwindowTitleChangedEvent());
}


RING_FUNC(ring_QWindow_getxChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getxChangedEvent());
}


RING_FUNC(ring_QWindow_getyChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getyChangedEvent());
}


RING_FUNC(ring_QGuiApplication_devicePixelRatio)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QGuiApplication_isSavingSession)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isSavingSession());
}


RING_FUNC(ring_QGuiApplication_isSessionRestored)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isSessionRestored());
}


RING_FUNC(ring_QGuiApplication_sessionId)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->sessionId().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_sessionKey)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->sessionKey().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_allWindows)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QWindowList *pValue ; 
		pValue = (QWindowList *) RING_API_MALLOC(sizeof(QWindowList)) ;
		*pValue = pObject->allWindows();
		RING_API_RETMANAGEDCPOINTER(pValue,"QWindowList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGuiApplication_applicationDisplayName)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->applicationDisplayName().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_applicationState)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		Qt::ApplicationState *pValue ; 
		pValue = (Qt::ApplicationState *) RING_API_MALLOC(sizeof(Qt::ApplicationState)) ;
		*pValue = pObject->applicationState();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ApplicationState",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGuiApplication_changeOverrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->changeOverrideCursor(* (QCursor  *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QCursor"));
}


RING_FUNC(ring_QGuiApplication_clipboard)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->clipboard(),"QClipboard");
}


RING_FUNC(ring_QGuiApplication_desktopSettingsAware)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->desktopSettingsAware());
}


RING_FUNC(ring_QGuiApplication_exec)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QGuiApplication_focusObject)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->focusObject(),"QObject");
}


RING_FUNC(ring_QGuiApplication_focusWindow)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->focusWindow(),"QWindow");
}


RING_FUNC(ring_QGuiApplication_font)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QGuiApplication_inputMethod)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->inputMethod(),"QInputMethod");
}


RING_FUNC(ring_QGuiApplication_isLeftToRight)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isLeftToRight());
}


RING_FUNC(ring_QGuiApplication_isRightToLeft)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isRightToLeft());
}


RING_FUNC(ring_QGuiApplication_keyboardModifiers)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->keyboardModifiers());
}


RING_FUNC(ring_QGuiApplication_layoutDirection)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->layoutDirection());
}


RING_FUNC(ring_QGuiApplication_modalWindow)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->modalWindow(),"QWindow");
}


RING_FUNC(ring_QGuiApplication_mouseButtons)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->mouseButtons());
}


RING_FUNC(ring_QGuiApplication_overrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->overrideCursor(),"QCursor");
}


RING_FUNC(ring_QGuiApplication_palette)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QPalette *pValue ; 
		pValue = (QPalette *) RING_API_MALLOC(sizeof(QPalette)) ;
		*pValue = pObject->palette();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPalette",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGuiApplication_platformName)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->platformName().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_platformNativeInterface)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->platformNativeInterface(),"QPlatformNativeInterface");
}


RING_FUNC(ring_QGuiApplication_primaryScreen)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->primaryScreen(),"QScreen");
}


RING_FUNC(ring_QGuiApplication_queryKeyboardModifiers)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->queryKeyboardModifiers());
}


RING_FUNC(ring_QGuiApplication_quitOnLastWindowClosed)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->quitOnLastWindowClosed());
}


RING_FUNC(ring_QGuiApplication_restoreOverrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->restoreOverrideCursor();
}


RING_FUNC(ring_QGuiApplication_screens)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QList<QScreen *> *pValue ; 
		pValue = (QList<QScreen *> *) RING_API_MALLOC(sizeof(QList<QScreen *>)) ;
		*pValue = pObject->screens();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QScreen *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGuiApplication_setApplicationDisplayName)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setApplicationDisplayName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setDesktopSettingsAware)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDesktopSettingsAware( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGuiApplication_setFont)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->setFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QGuiApplication_setLayoutDirection)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutDirection( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGuiApplication_setOverrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->setOverrideCursor(* (QCursor  *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QCursor"));
}


RING_FUNC(ring_QGuiApplication_setPalette)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->setPalette(* (QPalette  *) RING_API_GETCPOINTER(2,"QPalette"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPalette"));
}


RING_FUNC(ring_QGuiApplication_setQuitOnLastWindowClosed)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setQuitOnLastWindowClosed( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGuiApplication_styleHints)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->styleHints(),"QStyleHints");
}


RING_FUNC(ring_QGuiApplication_sync)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->sync();
}


RING_FUNC(ring_QGuiApplication_topLevelAt)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->topLevelAt(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")),"QWindow");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QGuiApplication_topLevelWindows)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QWindowList *pValue ; 
		pValue = (QWindowList *) RING_API_MALLOC(sizeof(QWindowList)) ;
		*pValue = pObject->topLevelWindows();
		RING_API_RETMANAGEDCPOINTER(pValue,"QWindowList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGuiApplication_setapplicationDisplayNameChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setapplicationDisplayNameChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setapplicationStateChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setapplicationStateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setcommitDataRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcommitDataRequestEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setfocusObjectChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfocusObjectChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setfocusWindowChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfocusWindowChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setfontDatabaseChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfontDatabaseChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setlastWindowClosedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setlastWindowClosedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setlayoutDirectionChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setlayoutDirectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setpaletteChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpaletteChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setprimaryScreenChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setprimaryScreenChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setsaveStateRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsaveStateRequestEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setscreenAddedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setscreenAddedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setscreenRemovedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setscreenRemovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_getapplicationDisplayNameChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getapplicationDisplayNameChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getapplicationStateChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getapplicationStateChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getcommitDataRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getcommitDataRequestEvent());
}


RING_FUNC(ring_QGuiApplication_getfocusObjectChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getfocusObjectChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getfocusWindowChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getfocusWindowChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getfontDatabaseChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getfontDatabaseChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getlastWindowClosedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getlastWindowClosedEvent());
}


RING_FUNC(ring_QGuiApplication_getlayoutDirectionChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getlayoutDirectionChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getpaletteChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getpaletteChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getprimaryScreenChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getprimaryScreenChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getsaveStateRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getsaveStateRequestEvent());
}


RING_FUNC(ring_QGuiApplication_getscreenAddedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getscreenAddedEvent());
}


RING_FUNC(ring_QGuiApplication_getscreenRemovedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getscreenRemovedEvent());
}


RING_FUNC(ring_QRegion_rects)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QVector<QRect> *pValue ; 
		pValue = (QVector<QRect> *) RING_API_MALLOC(sizeof(QVector<QRect>)) ;
		*pValue = pObject->rects();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector<QRect>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QRegion_boundingRect)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QRegion_contains)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->contains(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRegion_contains_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->contains(* (QRect  *) RING_API_GETCPOINTER(2,"QRect")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QRegion_intersected)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->intersected(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QRegion_intersected_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->intersected(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QRegion_intersects)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->intersects(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
}


RING_FUNC(ring_QRegion_intersects_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->intersects(* (QRect  *) RING_API_GETCPOINTER(2,"QRect")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QRegion_isEmpty)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QRegion_isNull)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QRegion_rectCount)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->rectCount());
}


RING_FUNC(ring_QRegion_setRects)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRects((QRect *) RING_API_GETCPOINTER(2,"QRect"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRegion_subtracted)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->subtracted(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QRegion_swap)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	pObject->swap(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
}


RING_FUNC(ring_QRegion_translate)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRegion_translate_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	pObject->translate(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QRegion_translated)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->translated( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QRegion_translated_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->translated(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QRegion_united)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->united(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QRegion_united_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->united(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QRegion_xored)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->xored(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRegion"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QVector2D_distanceToLine)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->distanceToLine(* (QVector2D  *) RING_API_GETCPOINTER(2,"QVector2D"),* (QVector2D  *) RING_API_GETCPOINTER(3,"QVector2D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector2D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector2D"));
}


RING_FUNC(ring_QVector2D_distanceToPoint)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->distanceToPoint(* (QVector2D  *) RING_API_GETCPOINTER(2,"QVector2D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector2D"));
}


RING_FUNC(ring_QVector2D_isNull)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QVector2D_length)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QVector2D_lengthSquared)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->lengthSquared());
}


RING_FUNC(ring_QVector2D_normalize)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	pObject->normalize();
}


RING_FUNC(ring_QVector2D_normalized)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	{
		QVector2D *pValue ; 
		pValue = new QVector2D() ;
		*pValue = pObject->normalized();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector2D",ring_QVector2D_freefunc);
	}
}


RING_FUNC(ring_QVector2D_setX)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector2D_setY)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector2D_toPoint)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->toPoint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QVector2D_toPointF)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->toPointF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QVector2D_toVector3D)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->toVector3D();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector2D_toVector4D)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	{
		QVector4D *pValue ; 
		pValue = new QVector4D() ;
		*pValue = pObject->toVector4D();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector4D",ring_QVector4D_freefunc);
	}
}


RING_FUNC(ring_QVector2D_x)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QVector2D_y)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QVector2D_dotProduct)
{
	QVector2D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
	RING_API_RETNUMBER(pObject->dotProduct(* (QVector2D  *) RING_API_GETCPOINTER(2,"QVector2D"),* (QVector2D  *) RING_API_GETCPOINTER(3,"QVector2D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector2D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector2D"));
}


RING_FUNC(ring_QVector3D_distanceToLine)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->distanceToLine(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
}


RING_FUNC(ring_QVector3D_distanceToPlane)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->distanceToPlane(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
}


RING_FUNC(ring_QVector3D_distanceToPlane_2)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->distanceToPlane(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(4,"QVector3D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QVector3D"));
}


RING_FUNC(ring_QVector3D_distanceToPoint)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->distanceToPoint(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
}


RING_FUNC(ring_QVector3D_isNull)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QVector3D_length)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QVector3D_lengthSquared)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->lengthSquared());
}


RING_FUNC(ring_QVector3D_normalize)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	pObject->normalize();
}


RING_FUNC(ring_QVector3D_normalized)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->normalized();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector3D_project)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->project(* (QMatrix4x4  *) RING_API_GETCPOINTER(2,"QMatrix4x4"),* (QMatrix4x4  *) RING_API_GETCPOINTER(3,"QMatrix4x4"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QMatrix4x4"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QMatrix4x4"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector3D_setX)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector3D_setY)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector3D_setZ)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setZ( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector3D_toPoint)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->toPoint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QVector3D_toPointF)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->toPointF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QVector3D_toVector2D)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector2D *pValue ; 
		pValue = new QVector2D() ;
		*pValue = pObject->toVector2D();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector2D",ring_QVector2D_freefunc);
	}
}


RING_FUNC(ring_QVector3D_toVector4D)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector4D *pValue ; 
		pValue = new QVector4D() ;
		*pValue = pObject->toVector4D();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector4D",ring_QVector4D_freefunc);
	}
}


RING_FUNC(ring_QVector3D_unproject)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->unproject(* (QMatrix4x4  *) RING_API_GETCPOINTER(2,"QMatrix4x4"),* (QMatrix4x4  *) RING_API_GETCPOINTER(3,"QMatrix4x4"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QMatrix4x4"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QMatrix4x4"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector3D_x)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QVector3D_y)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QVector3D_z)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->z());
}


RING_FUNC(ring_QVector3D_crossProduct)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->crossProduct(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector3D_dotProduct)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	RING_API_RETNUMBER(pObject->dotProduct(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
}


RING_FUNC(ring_QVector3D_normal)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->normal(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector3D_normal_2)
{
	QVector3D *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->normal(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(4,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QVector3D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector4D_isNull)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QVector4D_length)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QVector4D_lengthSquared)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->lengthSquared());
}


RING_FUNC(ring_QVector4D_normalize)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	pObject->normalize();
}


RING_FUNC(ring_QVector4D_normalized)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	{
		QVector4D *pValue ; 
		pValue = new QVector4D() ;
		*pValue = pObject->normalized();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector4D",ring_QVector4D_freefunc);
	}
}


RING_FUNC(ring_QVector4D_setW)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setW( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector4D_setX)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector4D_setY)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector4D_setZ)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setZ( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVector4D_toPoint)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->toPoint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QVector4D_toPointF)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->toPointF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QVector4D_toVector2D)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	{
		QVector2D *pValue ; 
		pValue = new QVector2D() ;
		*pValue = pObject->toVector2D();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector2D",ring_QVector2D_freefunc);
	}
}


RING_FUNC(ring_QVector4D_toVector2DAffine)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	{
		QVector2D *pValue ; 
		pValue = new QVector2D() ;
		*pValue = pObject->toVector2DAffine();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector2D",ring_QVector2D_freefunc);
	}
}


RING_FUNC(ring_QVector4D_toVector3D)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->toVector3D();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector4D_toVector3DAffine)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->toVector3DAffine();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QVector4D_w)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->w());
}


RING_FUNC(ring_QVector4D_x)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QVector4D_y)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QVector4D_z)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->z());
}


RING_FUNC(ring_QVector4D_dotProduct)
{
	QVector4D *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
	RING_API_RETNUMBER(pObject->dotProduct(* (QVector4D  *) RING_API_GETCPOINTER(2,"QVector4D"),* (QVector4D  *) RING_API_GETCPOINTER(3,"QVector4D")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector4D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector4D"));
}


RING_FUNC(ring_QQuaternion_isIdentity)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->isIdentity());
}


RING_FUNC(ring_QQuaternion_isNull)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QQuaternion_length)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QQuaternion_lengthSquared)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->lengthSquared());
}


RING_FUNC(ring_QQuaternion_normalize)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	pObject->normalize();
}


RING_FUNC(ring_QQuaternion_normalized)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	{
		QQuaternion *pValue ; 
		pValue = new QQuaternion() ;
		*pValue = pObject->normalized();
		RING_API_RETMANAGEDCPOINTER(pValue,"QQuaternion",ring_QQuaternion_freefunc);
	}
}


RING_FUNC(ring_QQuaternion_rotatedVector)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->rotatedVector(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QQuaternion_scalar)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->scalar());
}


RING_FUNC(ring_QQuaternion_setScalar)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScalar( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QQuaternion_setVector)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	pObject->setVector(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
}


RING_FUNC(ring_QQuaternion_setVector_2)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVector( (float ) RING_API_GETNUMBER(2), (float ) RING_API_GETNUMBER(3), (float ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QQuaternion_setX)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QQuaternion_setY)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QQuaternion_setZ)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setZ( (float ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QQuaternion_toVector4D)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	{
		QVector4D *pValue ; 
		pValue = new QVector4D() ;
		*pValue = pObject->toVector4D();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector4D",ring_QVector4D_freefunc);
	}
}


RING_FUNC(ring_QQuaternion_vector)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->vector();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QQuaternion_x)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QQuaternion_y)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QQuaternion_z)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	RING_API_RETNUMBER(pObject->z());
}


RING_FUNC(ring_QQuaternion_fromAxisAndAngle)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QQuaternion *pValue ; 
		pValue = new QQuaternion() ;
		*pValue = pObject->fromAxisAndAngle(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"), (float ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QQuaternion",ring_QQuaternion_freefunc);
	}
}


RING_FUNC(ring_QQuaternion_fromAxisAndAngle_2)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QQuaternion *pValue ; 
		pValue = new QQuaternion() ;
		*pValue = pObject->fromAxisAndAngle( (float ) RING_API_GETNUMBER(2), (float ) RING_API_GETNUMBER(3), (float ) RING_API_GETNUMBER(4), (float ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QQuaternion",ring_QQuaternion_freefunc);
	}
}


RING_FUNC(ring_QQuaternion_nlerp)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QQuaternion *pValue ; 
		pValue = new QQuaternion() ;
		*pValue = pObject->nlerp(* (QQuaternion  *) RING_API_GETCPOINTER(2,"QQuaternion"),* (QQuaternion  *) RING_API_GETCPOINTER(3,"QQuaternion"), (float ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QQuaternion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QQuaternion"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QQuaternion",ring_QQuaternion_freefunc);
	}
}


RING_FUNC(ring_QQuaternion_slerp)
{
	QQuaternion *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QQuaternion *pValue ; 
		pValue = new QQuaternion() ;
		*pValue = pObject->slerp(* (QQuaternion  *) RING_API_GETCPOINTER(2,"QQuaternion"),* (QQuaternion  *) RING_API_GETCPOINTER(3,"QQuaternion"), (float ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QQuaternion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QQuaternion"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QQuaternion",ring_QQuaternion_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_toAffine)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QMatrix *pValue ; 
		pValue = (QMatrix *) RING_API_MALLOC(sizeof(QMatrix)) ;
		*pValue = pObject->toAffine();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMatrix",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QMatrix4x4_column)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVector4D *pValue ; 
		pValue = new QVector4D() ;
		*pValue = pObject->column( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector4D",ring_QVector4D_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_constData)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	RING_API_RETCPOINTER(pObject->constData(),"qreal");
}


RING_FUNC(ring_QMatrix4x4_data)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	RING_API_RETCPOINTER(pObject->data(),"qreal");
}


RING_FUNC(ring_QMatrix4x4_data_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	RING_API_RETCPOINTER(pObject->data(),"qreal");
}


RING_FUNC(ring_QMatrix4x4_determinant)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	RING_API_RETNUMBER(pObject->determinant());
}


RING_FUNC(ring_QMatrix4x4_fill)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->fill( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMatrix4x4_flipCoordinates)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->flipCoordinates();
}


RING_FUNC(ring_QMatrix4x4_frustum)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->frustum( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QMatrix4x4_inverted)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QMatrix4x4 *pValue ; 
		pValue = new QMatrix4x4() ;
		*pValue = pObject->inverted((bool *) RING_API_GETCPOINTER(2,"bool"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QMatrix4x4",ring_QMatrix4x4_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_isIdentity)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	RING_API_RETNUMBER(pObject->isIdentity());
}


RING_FUNC(ring_QMatrix4x4_lookAt)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->lookAt(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D"),* (QVector3D  *) RING_API_GETCPOINTER(4,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QVector3D"));
}


RING_FUNC(ring_QMatrix4x4_map)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->map(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_map_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->map(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_map_3)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->map(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_map_4)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QVector4D *pValue ; 
		pValue = new QVector4D() ;
		*pValue = pObject->map(* (QVector4D  *) RING_API_GETCPOINTER(2,"QVector4D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector4D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector4D",ring_QVector4D_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_mapRect)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->mapRect(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_mapRect_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->mapRect(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QMatrix4x4_mapVector)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QVector3D *pValue ; 
		pValue = new QVector3D() ;
		*pValue = pObject->mapVector(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector3D",ring_QVector3D_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_normalMatrix)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QMatrix3x3 *pValue ; 
		pValue = (QMatrix3x3 *) RING_API_MALLOC(sizeof(QMatrix3x3)) ;
		*pValue = pObject->normalMatrix();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMatrix3x3",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QMatrix4x4_optimize)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->optimize();
}


RING_FUNC(ring_QMatrix4x4_ortho)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ortho( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QMatrix4x4_ortho_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->ortho(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QMatrix4x4_ortho_3)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->ortho(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QMatrix4x4_perspective)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->perspective( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QMatrix4x4_rotate)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->rotate( (qreal ) RING_API_GETNUMBER(2),* (QVector3D  *) RING_API_GETCPOINTER(3,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector3D"));
}


RING_FUNC(ring_QMatrix4x4_rotate_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->rotate(* (QQuaternion  *) RING_API_GETCPOINTER(2,"QQuaternion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QQuaternion"));
}


RING_FUNC(ring_QMatrix4x4_rotate_3)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->rotate( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QMatrix4x4_row)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVector4D *pValue ; 
		pValue = new QVector4D() ;
		*pValue = pObject->row( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVector4D",ring_QVector4D_freefunc);
	}
}


RING_FUNC(ring_QMatrix4x4_scale)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->scale(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
}


RING_FUNC(ring_QMatrix4x4_scale_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scale( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMatrix4x4_scale_3)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scale( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QMatrix4x4_scale_4)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scale( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMatrix4x4_setColumn)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumn( (int ) RING_API_GETNUMBER(2),* (QVector4D  *) RING_API_GETCPOINTER(3,"QVector4D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector4D"));
}


RING_FUNC(ring_QMatrix4x4_setRow)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRow( (int ) RING_API_GETNUMBER(2),* (QVector4D  *) RING_API_GETCPOINTER(3,"QVector4D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVector4D"));
}


RING_FUNC(ring_QMatrix4x4_setToIdentity)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->setToIdentity();
}


RING_FUNC(ring_QMatrix4x4_toTransform)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->toTransform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QMatrix4x4_toTransform_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->toTransform( (qreal ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QMatrix4x4_translate)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	pObject->translate(* (QVector3D  *) RING_API_GETCPOINTER(2,"QVector3D"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVector3D"));
}


RING_FUNC(ring_QMatrix4x4_translate_2)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMatrix4x4_translate_3)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QMatrix4x4_transposed)
{
	QMatrix4x4 *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
	{
		QMatrix4x4 *pValue ; 
		pValue = new QMatrix4x4() ;
		*pValue = pObject->transposed();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMatrix4x4",ring_QMatrix4x4_freefunc);
	}
}


RING_FUNC(ring_QDrag_defaultAction)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	RING_API_RETNUMBER(pObject->defaultAction());
}


RING_FUNC(ring_QDrag_dragCursor)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->dragCursor( (Qt::DropAction )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QDrag_exec)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->exec( (Qt::DropActions )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QDrag_exec_2)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->exec( (Qt::DropActions )  (int) RING_API_GETNUMBER(2), (Qt::DropAction )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QDrag_hotSpot)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->hotSpot();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QDrag_mimeData)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	RING_API_RETCPOINTER(pObject->mimeData(),"QMimeData");
}


RING_FUNC(ring_QDrag_pixmap)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->pixmap();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QDrag_setDragCursor)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragCursor(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap"), (Qt::DropAction )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QDrag_setHotSpot)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	pObject->setHotSpot(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QDrag_setMimeData)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMimeData((QMimeData *) RING_API_GETCPOINTER(2,"QMimeData"));
}


RING_FUNC(ring_QDrag_setPixmap)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	pObject->setPixmap(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QDrag_source)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	RING_API_RETCPOINTER(pObject->source(),"QObject");
}


RING_FUNC(ring_QDrag_supportedActions)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	RING_API_RETNUMBER(pObject->supportedActions());
}


RING_FUNC(ring_QDrag_target)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	RING_API_RETCPOINTER(pObject->target(),"QObject");
}


RING_FUNC(ring_QDrag_setactionChangedEvent)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDrag_settargetChangedEvent)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settargetChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDrag_getactionChangedEvent)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	RING_API_RETSTRING(pObject->getactionChangedEvent());
}


RING_FUNC(ring_QDrag_gettargetChangedEvent)
{
	GDrag *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDrag *) RING_API_GETCPOINTER(1,"QDrag");
	RING_API_RETSTRING(pObject->gettargetChangedEvent());
}


RING_FUNC(ring_QDropEvent_acceptProposedAction)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	pObject->acceptProposedAction();
}


RING_FUNC(ring_QDropEvent_dropAction)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	RING_API_RETNUMBER(pObject->dropAction());
}


RING_FUNC(ring_QDropEvent_keyboardModifiers)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	RING_API_RETNUMBER(pObject->keyboardModifiers());
}


RING_FUNC(ring_QDropEvent_mimeData)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	RING_API_RETCPOINTER(pObject->mimeData(),"QMimeData");
}


RING_FUNC(ring_QDropEvent_mouseButtons)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	RING_API_RETNUMBER(pObject->mouseButtons());
}


RING_FUNC(ring_QDropEvent_pos)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->pos();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QDropEvent_posF)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->posF();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QDropEvent_possibleActions)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	RING_API_RETNUMBER(pObject->possibleActions());
}


RING_FUNC(ring_QDropEvent_proposedAction)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	RING_API_RETNUMBER(pObject->proposedAction());
}


RING_FUNC(ring_QDropEvent_setDropAction)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDropAction( (Qt::DropAction )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDropEvent_source)
{
	QDropEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
	RING_API_RETCPOINTER(pObject->source(),"QObject");
}


RING_FUNC(ring_QDragMoveEvent_accept)
{
	QDragMoveEvent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDragMoveEvent *) RING_API_GETCPOINTER(1,"QDragMoveEvent");
	pObject->accept(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QDragMoveEvent_accept_2)
{
	QDragMoveEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDragMoveEvent *) RING_API_GETCPOINTER(1,"QDragMoveEvent");
	pObject->accept();
}


RING_FUNC(ring_QDragMoveEvent_answerRect)
{
	QDragMoveEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDragMoveEvent *) RING_API_GETCPOINTER(1,"QDragMoveEvent");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->answerRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QDragMoveEvent_ignore)
{
	QDragMoveEvent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDragMoveEvent *) RING_API_GETCPOINTER(1,"QDragMoveEvent");
	pObject->ignore(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QDragMoveEvent_ignore_2)
{
	QDragMoveEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDragMoveEvent *) RING_API_GETCPOINTER(1,"QDragMoveEvent");
	pObject->ignore();
}


RING_FUNC(ring_QClipboard_clear)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->clear( (QClipboard::Mode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QClipboard_image)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->image( (QClipboard::Mode )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QClipboard_mimeData)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->mimeData( (QClipboard::Mode )  (int) RING_API_GETNUMBER(2)),"QMimeData");
}


RING_FUNC(ring_QClipboard_ownsClipboard)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	RING_API_RETNUMBER(pObject->ownsClipboard());
}


RING_FUNC(ring_QClipboard_ownsFindBuffer)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	RING_API_RETNUMBER(pObject->ownsFindBuffer());
}


RING_FUNC(ring_QClipboard_ownsSelection)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	RING_API_RETNUMBER(pObject->ownsSelection());
}


RING_FUNC(ring_QClipboard_pixmap)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->pixmap( (QClipboard::Mode )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QClipboard_setImage)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setImage(* (QImage  *) RING_API_GETCPOINTER(2,"QImage"), (QClipboard::Mode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QImage"));
}


RING_FUNC(ring_QClipboard_setMimeData)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMimeData((QMimeData *) RING_API_GETCPOINTER(2,"QMimeData"), (QClipboard::Mode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QClipboard_setPixmap)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPixmap(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap"), (QClipboard::Mode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QClipboard_setText)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2), (QClipboard::Mode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QClipboard_supportsFindBuffer)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	RING_API_RETNUMBER(pObject->supportsFindBuffer());
}


RING_FUNC(ring_QClipboard_supportsSelection)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	RING_API_RETNUMBER(pObject->supportsSelection());
}


RING_FUNC(ring_QClipboard_text)
{
	QClipboard *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QClipboard *) RING_API_GETCPOINTER(1,"QClipboard");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->text( (QClipboard::Mode )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QMovie_backgroundColor)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->backgroundColor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QMovie_cacheMode)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->cacheMode());
}


RING_FUNC(ring_QMovie_currentFrameNumber)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->currentFrameNumber());
}


RING_FUNC(ring_QMovie_currentImage)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->currentImage();
		RING_API_RETMANAGEDCPOINTER(pValue,"QImage",ring_QImage_freefunc);
	}
}


RING_FUNC(ring_QMovie_currentPixmap)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->currentPixmap();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QMovie_device)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETCPOINTER(pObject->device(),"QIODevice");
}


RING_FUNC(ring_QMovie_fileName)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->fileName().toStdString().c_str());
}


RING_FUNC(ring_QMovie_format)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->format();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QMovie_frameCount)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->frameCount());
}


RING_FUNC(ring_QMovie_frameRect)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->frameRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QMovie_isValid)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QMovie_jumpToFrame)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->jumpToFrame( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMovie_loopCount)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->loopCount());
}


RING_FUNC(ring_QMovie_nextFrameDelay)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->nextFrameDelay());
}


RING_FUNC(ring_QMovie_scaledSize)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->scaledSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QMovie_setBackgroundColor)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	pObject->setBackgroundColor(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QMovie_setCacheMode)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCacheMode( (QMovie::CacheMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMovie_setDevice)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevice((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"));
}


RING_FUNC(ring_QMovie_setFileName)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFileName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_setFormat)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	pObject->setFormat(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QMovie_setScaledSize)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	pObject->setScaledSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QMovie_speed)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->speed());
}


RING_FUNC(ring_QMovie_state)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->state());
}


RING_FUNC(ring_QMovie_jumpToNextFrame)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETNUMBER(pObject->jumpToNextFrame());
}


RING_FUNC(ring_QMovie_setPaused)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPaused( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMovie_setSpeed)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpeed( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMovie_start)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	pObject->start();
}


RING_FUNC(ring_QMovie_stop)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	pObject->stop();
}


RING_FUNC(ring_QMovie_seterrorEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seterrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_setfinishedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_setframeChangedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setframeChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_setresizedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setresizedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_setstartedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setstartedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_setstateChangedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setstateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_setupdatedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setupdatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMovie_geterrorEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->geterrorEvent());
}


RING_FUNC(ring_QMovie_getfinishedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->getfinishedEvent());
}


RING_FUNC(ring_QMovie_getframeChangedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->getframeChangedEvent());
}


RING_FUNC(ring_QMovie_getresizedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->getresizedEvent());
}


RING_FUNC(ring_QMovie_getstartedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->getstartedEvent());
}


RING_FUNC(ring_QMovie_getstateChangedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->getstateChangedEvent());
}


RING_FUNC(ring_QMovie_getupdatedEvent)
{
	GMovie *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GMovie *) RING_API_GETCPOINTER(1,"QMovie");
	RING_API_RETSTRING(pObject->getupdatedEvent());
}


RING_FUNC(ring_QApp_quit)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->quit();
	exit(0);
}

RING_FUNC(ring_QApp_exec)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->exec();
}

RING_FUNC(ring_QApp_styleWindows)
{
	qApp->setStyle(QStyleFactory::create("windows"));
	qApp->setPalette(qApp->style()->standardPalette());
}

RING_FUNC(ring_QApp_styleWindowsVista)
{
	qApp->setStyle(QStyleFactory::create("windowsvista"));
	qApp->setPalette(qApp->style()->standardPalette());
}

RING_FUNC(ring_QApp_styleFusion)
{
	qApp->setStyle(QStyleFactory::create("fusion"));
	qApp->setPalette(qApp->style()->standardPalette());
}

RING_FUNC(ring_QApp_styleFusionBlack)
{
	qApp->setStyle(QStyleFactory::create("fusion"));
	QPalette palette;
	palette.setColor(QPalette::Window, QColor(53,53,53));
	palette.setColor(QPalette::WindowText, Qt::white);
	palette.setColor(QPalette::Base, QColor(15,15,15));
	palette.setColor(QPalette::AlternateBase, QColor(53,53,53));
	palette.setColor(QPalette::ToolTipBase, Qt::white);
	palette.setColor(QPalette::ToolTipText, Qt::white);
	palette.setColor(QPalette::Text, Qt::white);
	palette.setColor(QPalette::Button, QColor(53,53,53));
	palette.setColor(QPalette::ButtonText, Qt::white);
	palette.setColor(QPalette::BrightText, Qt::red);

	palette.setColor(QPalette::Highlight, QColor(142,45,197).lighter());
	palette.setColor(QPalette::HighlightedText, Qt::black);

	palette.setColor(QPalette::Disabled, QPalette::Text, Qt::darkGray);
	palette.setColor(QPalette::Disabled, QPalette::ButtonText, Qt::darkGray);

	qApp->setPalette(palette);
}

RING_FUNC(ring_QApp_styleFusionCustom)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 12 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	if ( (! RING_API_ISPOINTER(1)) || (! RING_API_ISPOINTER(2)) ||
		(! RING_API_ISPOINTER(3)) || (! RING_API_ISPOINTER(4)) ||
		(! RING_API_ISPOINTER(5)) || (! RING_API_ISPOINTER(6)) ||
		(! RING_API_ISPOINTER(7)) || (! RING_API_ISPOINTER(8)) ||
		(! RING_API_ISPOINTER(9)) || (! RING_API_ISPOINTER(10)) ||
		(! RING_API_ISPOINTER(11)) || (! RING_API_ISPOINTER(12)) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	qApp->setStyle(QStyleFactory::create("fusion"));
	QPalette palette;
	palette.setColor(QPalette::Window, 		* (QColor *) RING_API_GETCPOINTER(1,"QColor") );
	palette.setColor(QPalette::WindowText, 		* (QColor *) RING_API_GETCPOINTER(2,"QColor") );
	palette.setColor(QPalette::Base, 		* (QColor *) RING_API_GETCPOINTER(3,"QColor") );
	palette.setColor(QPalette::AlternateBase, 	* (QColor *) RING_API_GETCPOINTER(4,"QColor") );
	palette.setColor(QPalette::ToolTipBase, 	* (QColor *) RING_API_GETCPOINTER(5,"QColor") );
	palette.setColor(QPalette::ToolTipText, 	* (QColor *) RING_API_GETCPOINTER(6,"QColor") );
	palette.setColor(QPalette::Text,		* (QColor *) RING_API_GETCPOINTER(7,"QColor") );
	palette.setColor(QPalette::Button, 		* (QColor *) RING_API_GETCPOINTER(8,"QColor") );
	palette.setColor(QPalette::ButtonText, 		* (QColor *) RING_API_GETCPOINTER(9,"QColor") );
	palette.setColor(QPalette::BrightText, 		* (QColor *) RING_API_GETCPOINTER(10,"QColor") );
	palette.setColor(QPalette::Highlight, 		* (QColor *) RING_API_GETCPOINTER(11,"QColor") );
	palette.setColor(QPalette::HighlightedText, 	* (QColor *) RING_API_GETCPOINTER(12,"QColor") );
	qApp->setPalette(palette);
}


RING_FUNC(ring_QApp_processEvents)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->processEvents();
}

RING_FUNC(ring_QApp_closeAllWindows)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->closeAllWindows();
}

RING_FUNC(ring_QApp_keyboardModifiers)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETNUMBER( (double) qApp->keyboardModifiers() );
}

RING_FUNC(ring_QApp_clipboard)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETCPOINTER(qApp->clipboard(),"QClipboard");
}

RING_FUNC(ring_QApp_style)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETCPOINTER(qApp->style(),"QStyle");
}

RING_FUNC(ring_QApp_aboutQt)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->aboutQt();
}

RING_FUNC(ring_QApp_activeModalWidget)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETCPOINTER(qApp->activeModalWidget(),"QWidget");
}

RING_FUNC(ring_QApp_activePopupWidget)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETCPOINTER(qApp->activePopupWidget(),"QWidget");
}

RING_FUNC(ring_QApp_activeWindow)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETCPOINTER(qApp->activeWindow(),"QWidget");
}

RING_FUNC(ring_QApp_focusWidget)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETCPOINTER(qApp->focusWidget(),"QWidget");
}

RING_FUNC(ring_QApp_titlebarHeight)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETNUMBER(qApp->style()->pixelMetric(QStyle::PM_TitleBarHeight));
}


RING_FUNC(ring_QWidget_getContentsMargins)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getContentsMargins(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QWidget_acceptDrops)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->acceptDrops());
}


RING_FUNC(ring_QWidget_accessibleDescription)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->accessibleDescription().toStdString().c_str());
}


RING_FUNC(ring_QWidget_accessibleName)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->accessibleName().toStdString().c_str());
}


RING_FUNC(ring_QWidget_activateWindow)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->activateWindow();
}


RING_FUNC(ring_QWidget_addAction)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QWidget_adjustSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->adjustSize();
}


RING_FUNC(ring_QWidget_autoFillBackground)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->autoFillBackground());
}


RING_FUNC(ring_QWidget_backgroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->backgroundRole());
}


RING_FUNC(ring_QWidget_baseSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->baseSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWidget_childAt)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->childAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QWidget");
}


RING_FUNC(ring_QWidget_childrenRect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->childrenRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWidget_childrenRegion)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->childrenRegion();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QWidget_clearFocus)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->clearFocus();
}


RING_FUNC(ring_QWidget_clearMask)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->clearMask();
}


RING_FUNC(ring_QWidget_contentsMargins)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) RING_API_MALLOC(sizeof(QMargins)) ;
		*pValue = pObject->contentsMargins();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMargins",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWidget_contentsRect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->contentsRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWidget_contextMenuPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->contextMenuPolicy());
}


RING_FUNC(ring_QWidget_cursor)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QCursor *pValue ; 
		pValue = new QCursor() ;
		*pValue = pObject->cursor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QCursor",ring_QCursor_freefunc);
	}
}


RING_FUNC(ring_QWidget_effectiveWinId)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->effectiveWinId());
}


RING_FUNC(ring_QWidget_ensurePolished)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->ensurePolished();
}


RING_FUNC(ring_QWidget_focusPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->focusPolicy());
}


RING_FUNC(ring_QWidget_focusProxy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->focusProxy(),"QWidget");
}


RING_FUNC(ring_QWidget_focusWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->focusWidget(),"QWidget");
}


RING_FUNC(ring_QWidget_font)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QWidget_fontInfo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QFontInfo *pValue ; 
		pValue = (QFontInfo *) RING_API_MALLOC(sizeof(QFontInfo)) ;
		*pValue = pObject->fontInfo();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFontInfo",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWidget_foregroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->foregroundRole());
}


RING_FUNC(ring_QWidget_frameGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->frameGeometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWidget_frameSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->frameSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWidget_geometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWidget_grab)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->grab(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QWidget_grabGesture)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->grabGesture( (Qt::GestureType )  (int) RING_API_GETNUMBER(2), (Qt::GestureFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_grabKeyboard)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->grabKeyboard();
}


RING_FUNC(ring_QWidget_grabMouse)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->grabMouse();
}


RING_FUNC(ring_QWidget_grabShortcut)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->grabShortcut(* (QKeySequence *) RING_API_GETCPOINTER(2,"QKeySequence"), (Qt::ShortcutContext )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QKeySequence"));
}


RING_FUNC(ring_QWidget_graphicsEffect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->graphicsEffect(),"QGraphicsEffect");
}


RING_FUNC(ring_QWidget_graphicsProxyWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->graphicsProxyWidget(),"QGraphicsProxyWidget");
}


RING_FUNC(ring_QWidget_hasFocus)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->hasFocus());
}


RING_FUNC(ring_QWidget_hasMouseTracking)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->hasMouseTracking());
}


RING_FUNC(ring_QWidget_height)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QWidget_heightForWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->heightForWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWidget_inputMethodHints)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->inputMethodHints());
}


RING_FUNC(ring_QWidget_inputMethodQuery)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->inputMethodQuery( (Qt::InputMethodQuery )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QWidget_insertAction)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertAction((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QAction *) RING_API_GETCPOINTER(3,"QAction"));
}


RING_FUNC(ring_QWidget_isActiveWindow)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isActiveWindow());
}


RING_FUNC(ring_QWidget_isAncestorOf)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAncestorOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QWidget_isEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isEnabled());
}


RING_FUNC(ring_QWidget_isEnabledTo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isEnabledTo((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QWidget_isFullScreen)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isFullScreen());
}


RING_FUNC(ring_QWidget_isHidden)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QWidget_isMaximized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isMaximized());
}


RING_FUNC(ring_QWidget_isMinimized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isMinimized());
}


RING_FUNC(ring_QWidget_isModal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isModal());
}


RING_FUNC(ring_QWidget_isVisible)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QWidget_isVisibleTo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isVisibleTo((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QWidget_isWindow)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isWindow());
}


RING_FUNC(ring_QWidget_isWindowModified)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isWindowModified());
}


RING_FUNC(ring_QWidget_layout)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->layout(),"QLayout");
}


RING_FUNC(ring_QWidget_layoutDirection)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->layoutDirection());
}


RING_FUNC(ring_QWidget_locale)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QLocale *pValue ; 
		pValue = new QLocale() ;
		*pValue = pObject->locale();
		RING_API_RETMANAGEDCPOINTER(pValue,"QLocale",ring_QLocale_freefunc);
	}
}


RING_FUNC(ring_QWidget_mapFrom)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFrom((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWidget_mapFromGlobal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromGlobal(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWidget_mapFromParent)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromParent(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWidget_mapTo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapTo((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWidget_mapToGlobal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapToGlobal(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWidget_mapToParent)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapToParent(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWidget_mask)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->mask();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QWidget_maximumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->maximumHeight());
}


RING_FUNC(ring_QWidget_maximumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->maximumSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWidget_maximumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->maximumWidth());
}


RING_FUNC(ring_QWidget_minimumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->minimumHeight());
}


RING_FUNC(ring_QWidget_minimumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWidget_minimumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->minimumWidth());
}


RING_FUNC(ring_QWidget_move)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->move( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_nativeParentWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->nativeParentWidget(),"QWidget");
}


RING_FUNC(ring_QWidget_nextInFocusChain)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->nextInFocusChain(),"QWidget");
}


RING_FUNC(ring_QWidget_normalGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->normalGeometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWidget_overrideWindowFlags)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->overrideWindowFlags( (Qt::WindowType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_palette)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPalette *pValue ; 
		pValue = (QPalette *) RING_API_MALLOC(sizeof(QPalette)) ;
		*pValue = pObject->palette();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPalette",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWidget_parentWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->parentWidget(),"QWidget");
}


RING_FUNC(ring_QWidget_pos)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->pos();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QWidget_previousInFocusChain)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->previousInFocusChain(),"QWidget");
}


RING_FUNC(ring_QWidget_rect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->rect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QWidget_releaseKeyboard)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->releaseKeyboard();
}


RING_FUNC(ring_QWidget_releaseMouse)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->releaseMouse();
}


RING_FUNC(ring_QWidget_releaseShortcut)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->releaseShortcut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_removeAction)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QWidget_render)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->render((QPaintDevice *) RING_API_GETCPOINTER(2,"QPaintDevice"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"),* (QRegion *) RING_API_GETCPOINTER(4,"QRegion"), (QWidget::RenderFlag)  (int) RING_API_GETNUMBER(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRegion"));
}


RING_FUNC(ring_QWidget_repaint)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->repaint();
}


RING_FUNC(ring_QWidget_resize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_restoreGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->restoreGeometry(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QWidget_saveGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveGeometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QWidget_scroll)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scroll( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setAcceptDrops)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAcceptDrops( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setAccessibleDescription)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccessibleDescription(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setAccessibleName)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccessibleName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setAttribute)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAttribute( (Qt::WidgetAttribute )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setAutoFillBackground)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoFillBackground( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setBackgroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackgroundRole( (QPalette::ColorRole )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setBaseSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBaseSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setContentsMargins)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContentsMargins( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWidget_setContextMenuPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenuPolicy( (Qt::ContextMenuPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setCursor)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setCursor(* (QCursor *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QCursor"));
}


RING_FUNC(ring_QWidget_setFixedHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFixedSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setFixedWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFocus)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocus( (Qt::FocusReason )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFocusPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusPolicy( (Qt::FocusPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFocusProxy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusProxy((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QWidget_setFont)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QWidget_setForegroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setForegroundRole( (QPalette::ColorRole )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGeometry( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWidget_setGraphicsEffect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGraphicsEffect((QGraphicsEffect *) RING_API_GETCPOINTER(2,"QGraphicsEffect"));
}


RING_FUNC(ring_QWidget_setInputMethodHints)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputMethodHints( (Qt::InputMethodHint )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setLayout)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"));
}


RING_FUNC(ring_QWidget_setLayoutDirection)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutDirection( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setLocale)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setLocale(* (QLocale *) RING_API_GETCPOINTER(2,"QLocale"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLocale"));
}


RING_FUNC(ring_QWidget_setMask)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setMask(* (QBitmap *) RING_API_GETCPOINTER(2,"QBitmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBitmap"));
}


RING_FUNC(ring_QWidget_setMaximumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMaximumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setMaximumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMinimumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMinimumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setMinimumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMouseTracking)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseTracking( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setPalette)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setPalette(* (QPalette *) RING_API_GETCPOINTER(2,"QPalette"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPalette"));
}


RING_FUNC(ring_QWidget_setParent)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setParent((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QWidget_setShortcutAutoRepeat)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcutAutoRepeat( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setShortcutEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcutEnabled( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setSizeIncrement)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeIncrement( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setSizePolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizePolicy( (QSizePolicy::Policy )  (int) RING_API_GETNUMBER(2), (QSizePolicy::Policy )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setStatusTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setStyle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle((QStyle *) RING_API_GETCPOINTER(2,"QStyle"));
}


RING_FUNC(ring_QWidget_setToolTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setUpdatesEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUpdatesEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWhatsThis)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowFilePath)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowFilePath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowFlags)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowFlags( (Qt::WindowType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowIcon)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setWindowIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QWidget_setWindowIconText)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowIconText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowModality)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowModality( (Qt::WindowModality )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowOpacity)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowOpacity( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowRole(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowState)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowState( (Qt::WindowState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_size)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWidget_sizeIncrement)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeIncrement();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QWidget_sizePolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSizePolicy *pValue ; 
		pValue = (QSizePolicy *) RING_API_MALLOC(sizeof(QSizePolicy)) ;
		*pValue = pObject->sizePolicy();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSizePolicy",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QWidget_stackUnder)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->stackUnder((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QWidget_statusTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QWidget_style)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->style(),"QStyle");
}


RING_FUNC(ring_QWidget_styleSheet)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->styleSheet().toStdString().c_str());
}


RING_FUNC(ring_QWidget_testAttribute)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testAttribute( (Qt::WidgetAttribute )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWidget_toolTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QWidget_underMouse)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->underMouse());
}


RING_FUNC(ring_QWidget_ungrabGesture)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ungrabGesture( (Qt::GestureType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_unsetCursor)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->unsetCursor();
}


RING_FUNC(ring_QWidget_unsetLayoutDirection)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->unsetLayoutDirection();
}


RING_FUNC(ring_QWidget_unsetLocale)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->unsetLocale();
}


RING_FUNC(ring_QWidget_update)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->update( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWidget_updateGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->updateGeometry();
}


RING_FUNC(ring_QWidget_updatesEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->updatesEnabled());
}


RING_FUNC(ring_QWidget_visibleRegion)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->visibleRegion();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRegion",ring_QRegion_freefunc);
	}
}


RING_FUNC(ring_QWidget_whatsThis)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QWidget_width)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QWidget_winId)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->winId());
}


RING_FUNC(ring_QWidget_window)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->window(),"QWidget");
}


RING_FUNC(ring_QWidget_windowFilePath)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowFilePath().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowFlags)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowFlags());
}


RING_FUNC(ring_QWidget_windowHandle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->windowHandle(),"QWindow");
}


RING_FUNC(ring_QWidget_windowIcon)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->windowIcon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QWidget_windowIconText)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowIconText().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowModality)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowModality());
}


RING_FUNC(ring_QWidget_windowOpacity)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowOpacity());
}


RING_FUNC(ring_QWidget_windowRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowRole().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowState)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowState());
}


RING_FUNC(ring_QWidget_windowTitle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowTitle().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowType)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowType());
}


RING_FUNC(ring_QWidget_x)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QWidget_y)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QWidget_close)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->close());
}


RING_FUNC(ring_QWidget_hide)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->hide();
}


RING_FUNC(ring_QWidget_lower)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->lower();
}


RING_FUNC(ring_QWidget_raise)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->raise();
}


RING_FUNC(ring_QWidget_setDisabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setHidden)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setStyleSheet)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleSheet(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowModified)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowModified( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowTitle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_show)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->show();
}


RING_FUNC(ring_QWidget_showFullScreen)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showFullScreen();
}


RING_FUNC(ring_QWidget_showMaximized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showMaximized();
}


RING_FUNC(ring_QWidget_showMinimized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showMinimized();
}


RING_FUNC(ring_QWidget_showNormal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showNormal();
}


RING_FUNC(ring_QWidget_find)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->find( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QWidget_keyboardGrabber)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->keyboardGrabber(),"QWidget");
}


RING_FUNC(ring_QWidget_mouseGrabber)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->mouseGrabber(),"QWidget");
}


RING_FUNC(ring_QWidget_setTabOrder)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabOrder((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
}


RING_FUNC(ring_QWidget_createWindowContainer)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->createWindowContainer((QWindow *) RING_API_GETCPOINTER(2,"QWindow"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"), (Qt::WindowFlags )  (int) RING_API_GETNUMBER(4)),"QWidget");
}


RING_FUNC(ring_QLabel_picture)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->picture(),"QPicture");
}


RING_FUNC(ring_QLabel_pixmap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->pixmap(),"QPixmap");
}


RING_FUNC(ring_QLabel_alignment)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QLabel_buddy)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->buddy(),"QWidget");
}


RING_FUNC(ring_QLabel_hasScaledContents)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->hasScaledContents());
}


RING_FUNC(ring_QLabel_hasSelectedText)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->hasSelectedText());
}


RING_FUNC(ring_QLabel_indent)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->indent());
}


RING_FUNC(ring_QLabel_margin)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->margin());
}


RING_FUNC(ring_QLabel_movie)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->movie(),"QMovie");
}


RING_FUNC(ring_QLabel_openExternalLinks)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->openExternalLinks());
}


RING_FUNC(ring_QLabel_selectedText)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETSTRING(pObject->selectedText().toStdString().c_str());
}


RING_FUNC(ring_QLabel_selectionStart)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->selectionStart());
}


RING_FUNC(ring_QLabel_setAlignment)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setBuddy)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBuddy((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLabel_setIndent)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndent( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setMargin)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMargin( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setOpenExternalLinks)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpenExternalLinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setScaledContents)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScaledContents( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setSelection)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLabel_setTextFormat)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextFormat( (Qt::TextFormat)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setTextInteractionFlags)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextInteractionFlags( (Qt::TextInteractionFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setWordWrap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_text)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QLabel_textFormat)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->textFormat());
}


RING_FUNC(ring_QLabel_textInteractionFlags)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->textInteractionFlags());
}


RING_FUNC(ring_QLabel_wordWrap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QLabel_clear)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	pObject->clear();
}


RING_FUNC(ring_QLabel_setMovie)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovie((QMovie *) RING_API_GETCPOINTER(2,"QMovie"));
}


RING_FUNC(ring_QLabel_setNum)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNum( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setPicture)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	pObject->setPicture(* (QPicture *) RING_API_GETCPOINTER(2,"QPicture"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPicture"));
}


RING_FUNC(ring_QLabel_setPixmap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	pObject->setPixmap(* (QPixmap *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QLabel_setText)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPushButton_setText)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPushButton_setClickEvent)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPushButton_setIcon)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QPushButton_setIconSize)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QPushButton_getClickEvent)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	RING_API_RETSTRING(pObject->getClickEvent());
}


RING_FUNC(ring_QLineEdit_getTextMargins)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getTextMargins(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QLineEdit_alignment)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QLineEdit_backspace)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->backspace();
}


RING_FUNC(ring_QLineEdit_completer)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETCPOINTER(pObject->completer(),"QCompleter");
}


RING_FUNC(ring_QLineEdit_createStandardContextMenu)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETCPOINTER(pObject->createStandardContextMenu(),"QMenu");
}


RING_FUNC(ring_QLineEdit_cursorBackward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorBackward( (bool ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLineEdit_cursorForward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorForward( (bool ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLineEdit_cursorMoveStyle)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->cursorMoveStyle());
}


RING_FUNC(ring_QLineEdit_cursorPosition)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->cursorPosition());
}


RING_FUNC(ring_QLineEdit_cursorPositionAt)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->cursorPositionAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QLineEdit_cursorWordBackward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorWordBackward( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_cursorWordForward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorWordForward( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_del)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->del();
}


RING_FUNC(ring_QLineEdit_deselect)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->deselect();
}


RING_FUNC(ring_QLineEdit_displayText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->displayText().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_dragEnabled)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->dragEnabled());
}


RING_FUNC(ring_QLineEdit_echoMode)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->echoMode());
}


RING_FUNC(ring_QLineEdit_end)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->end( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_hasAcceptableInput)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->hasAcceptableInput());
}


RING_FUNC(ring_QLineEdit_hasFrame)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->hasFrame());
}


RING_FUNC(ring_QLineEdit_hasSelectedText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->hasSelectedText());
}


RING_FUNC(ring_QLineEdit_home)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->home( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_inputMask)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->inputMask().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_insert)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insert(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_isModified)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isModified());
}


RING_FUNC(ring_QLineEdit_isReadOnly)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QLineEdit_isRedoAvailable)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isRedoAvailable());
}


RING_FUNC(ring_QLineEdit_isUndoAvailable)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isUndoAvailable());
}


RING_FUNC(ring_QLineEdit_maxLength)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->maxLength());
}


RING_FUNC(ring_QLineEdit_placeholderText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->placeholderText().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_selectedText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->selectedText().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_selectionStart)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->selectionStart());
}


RING_FUNC(ring_QLineEdit_setAlignment)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setCompleter)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompleter((QCompleter *) RING_API_GETCPOINTER(2,"QCompleter"));
}


RING_FUNC(ring_QLineEdit_setCursorMoveStyle)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorMoveStyle( (Qt::CursorMoveStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setCursorPosition)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorPosition( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setDragEnabled)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setEchoMode)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEchoMode( (QLineEdit::EchoMode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setFrame)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrame( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setInputMask)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputMask(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setMaxLength)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxLength( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setModified)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModified( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setPlaceholderText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlaceholderText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setReadOnly)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setSelection)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLineEdit_setTextMargins)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextMargins( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QLineEdit_setValidator)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValidator((QValidator *) RING_API_GETCPOINTER(2,"QValidator"));
}


RING_FUNC(ring_QLineEdit_text)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_textMargins)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) RING_API_MALLOC(sizeof(QMargins)) ;
		*pValue = pObject->textMargins();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMargins",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLineEdit_validator)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETCPOINTER(pObject->validator(),"QValidator");
}


RING_FUNC(ring_QLineEdit_clear)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->clear();
}


RING_FUNC(ring_QLineEdit_copy)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->copy();
}


RING_FUNC(ring_QLineEdit_cut)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->cut();
}


RING_FUNC(ring_QLineEdit_paste)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->paste();
}


RING_FUNC(ring_QLineEdit_redo)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->redo();
}


RING_FUNC(ring_QLineEdit_selectAll)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->selectAll();
}


RING_FUNC(ring_QLineEdit_setText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_undo)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->undo();
}


RING_FUNC(ring_QLineEdit_setTextChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setcursorPositionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcursorPositionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_seteditingFinishedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seteditingFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setreturnPressedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreturnPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setselectionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_settextEditedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settextEditedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_getTextChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getTextChangedEvent());
}


RING_FUNC(ring_QLineEdit_getcursorPositionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getcursorPositionChangedEvent());
}


RING_FUNC(ring_QLineEdit_geteditingFinishedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->geteditingFinishedEvent());
}


RING_FUNC(ring_QLineEdit_getreturnPressedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getreturnPressedEvent());
}


RING_FUNC(ring_QLineEdit_getselectionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QLineEdit_gettextEditedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->gettextEditedEvent());
}


RING_FUNC(ring_QVBoxLayout_addWidget)
{
	QVBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVBoxLayout *) RING_API_GETCPOINTER(1,"QVBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QVBoxLayout_addLayout)
{
	QVBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVBoxLayout *) RING_API_GETCPOINTER(1,"QVBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"));
}


RING_FUNC(ring_QHBoxLayout_addWidget)
{
	QHBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHBoxLayout *) RING_API_GETCPOINTER(1,"QHBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QHBoxLayout_addLayout)
{
	QHBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHBoxLayout *) RING_API_GETCPOINTER(1,"QHBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"));
}


RING_FUNC(ring_QTextEdit_setTabStopWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabStopWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_tabStopWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->tabStopWidth());
}


RING_FUNC(ring_QTextEdit_setTabStopDistance)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabStopDistance( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_tabStopDistance)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->tabStopDistance());
}


RING_FUNC(ring_QTextEdit_acceptRichText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->acceptRichText());
}


RING_FUNC(ring_QTextEdit_alignment)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QTextEdit_anchorAt)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->anchorAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QTextEdit_canPaste)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->canPaste());
}


RING_FUNC(ring_QTextEdit_currentCharFormat)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->currentCharFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_currentFont)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->currentFont();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_cursorForPosition)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->cursorForPosition(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCursor",ring_QTextCursor_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_cursorRect)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cursorRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_cursorWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->cursorWidth());
}


RING_FUNC(ring_QTextEdit_document)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QTextEdit_documentTitle)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->documentTitle().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_ensureCursorVisible)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->ensureCursorVisible();
}


RING_FUNC(ring_QTextEdit_find)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->find(RING_API_GETSTRING(2), (QTextDocument::FindFlag)  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QTextEdit_fontFamily)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->fontFamily().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_fontItalic)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontItalic());
}


RING_FUNC(ring_QTextEdit_fontPointSize)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontPointSize());
}


RING_FUNC(ring_QTextEdit_fontUnderline)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontUnderline());
}


RING_FUNC(ring_QTextEdit_fontWeight)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontWeight());
}


RING_FUNC(ring_QTextEdit_isReadOnly)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QTextEdit_isUndoRedoEnabled)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->isUndoRedoEnabled());
}


RING_FUNC(ring_QTextEdit_lineWrapColumnOrWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->lineWrapColumnOrWidth());
}


RING_FUNC(ring_QTextEdit_loadResource)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->loadResource( (int) RING_API_GETNUMBER(2),* (QUrl *) RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QUrl"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_mergeCurrentCharFormat)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->mergeCurrentCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QTextEdit_moveCursor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveCursor( (QTextCursor::MoveOperation )  (int) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextEdit_overwriteMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->overwriteMode());
}


RING_FUNC(ring_QTextEdit_setAcceptRichText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAcceptRichText( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setCurrentCharFormat)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setCurrentCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QTextEdit_setCursorWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setDocument)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocument((QTextDocument *) RING_API_GETCPOINTER(2,"QTextDocument"));
}


RING_FUNC(ring_QTextEdit_setDocumentTitle)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setLineWrapColumnOrWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWrapColumnOrWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setLineWrapMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWrapMode( (QTextEdit::LineWrapMode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setOverwriteMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOverwriteMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setReadOnly)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setTabChangesFocus)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabChangesFocus( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setTextCursor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setTextCursor(* (QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCursor"));
}


RING_FUNC(ring_QTextEdit_setTextInteractionFlags)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextInteractionFlags( (Qt::TextInteractionFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setUndoRedoEnabled)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUndoRedoEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setWordWrapMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrapMode( (QTextOption::WrapMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_tabChangesFocus)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->tabChangesFocus());
}


RING_FUNC(ring_QTextEdit_textBackgroundColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->textBackgroundColor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_textColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->textColor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_textCursor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->textCursor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCursor",ring_QTextCursor_freefunc);
	}
}


RING_FUNC(ring_QTextEdit_textInteractionFlags)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->textInteractionFlags());
}


RING_FUNC(ring_QTextEdit_toHtml)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->toHtml().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_toPlainText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->toPlainText().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_wordWrapMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->wordWrapMode());
}


RING_FUNC(ring_QTextEdit_append)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_clear)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->clear();
}


RING_FUNC(ring_QTextEdit_copy)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->copy();
}


RING_FUNC(ring_QTextEdit_cut)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->cut();
}


RING_FUNC(ring_QTextEdit_insertHtml)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_insertPlainText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_paste)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->paste();
}


RING_FUNC(ring_QTextEdit_redo)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->redo();
}


RING_FUNC(ring_QTextEdit_scrollToAnchor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToAnchor(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_selectAll)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->selectAll();
}


RING_FUNC(ring_QTextEdit_setAlignment)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setCurrentFont)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setCurrentFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QTextEdit_setFontFamily)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontFamily(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setFontItalic)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontItalic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setFontPointSize)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontPointSize( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setFontUnderline)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontUnderline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setFontWeight)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontWeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setHtml)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setPlainText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setTextBackgroundColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setTextBackgroundColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QTextEdit_setTextColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setTextColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QTextEdit_undo)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->undo();
}


RING_FUNC(ring_QTextEdit_zoomIn)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomIn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_zoomOut)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomOut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setcopyAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcopyAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setcurrentCharFormatChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentCharFormatChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setcursorPositionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcursorPositionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setredoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setredoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setselectionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_settextChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setundoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setundoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_getcopyAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getcopyAvailableEvent());
}


RING_FUNC(ring_QTextEdit_getcurrentCharFormatChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getcurrentCharFormatChangedEvent());
}


RING_FUNC(ring_QTextEdit_getcursorPositionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getcursorPositionChangedEvent());
}


RING_FUNC(ring_QTextEdit_getredoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getredoAvailableEvent());
}


RING_FUNC(ring_QTextEdit_getselectionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QTextEdit_gettextChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->gettextChangedEvent());
}


RING_FUNC(ring_QTextEdit_getundoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getundoAvailableEvent());
}

RING_FUNC(ring_QTextEdit_cyanline)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QTextEdit *editor;
	editor = (QTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( Qt::cyan );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}
RING_FUNC(ring_QTextEdit_setactivelinecolor)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QTextEdit *editor;
	editor = (QTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( * (QColor *) RING_API_GETCPOINTER(2,"QColor") );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}
RING_FUNC(ring_QListWidget_addItem)
{
	GListWidget *pObject ;
	char cStr[100]  ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ( ! RING_API_ISSTRING(2) ) && ( ! RING_API_ISNUMBER(2) ) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( RING_API_ISSTRING(2) )
		pObject->addItem(RING_API_GETSTRING(2));
	else {
		ring_vm_numtostring((VM *) pPointer, RING_API_GETNUMBER(2),cStr);
		pObject->addItem(cStr);
	}
		
}

RING_FUNC(ring_QListWidget_count)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QListWidget_currentRow)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETNUMBER(pObject->currentRow());
}


RING_FUNC(ring_QListWidget_editItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->editItem((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
}


RING_FUNC(ring_QListWidget_insertItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertItem( (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QListWidget_isSortingEnabled)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETNUMBER(pObject->isSortingEnabled());
}


RING_FUNC(ring_QListWidget_item)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->item( (int ) RING_API_GETNUMBER(2)),"QListWidgetItem");
}


RING_FUNC(ring_QListWidget_itemAt)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QListWidgetItem");
}


RING_FUNC(ring_QListWidget_itemWidget)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemWidget((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem")),"QWidget");
}


RING_FUNC(ring_QListWidget_openPersistentEditor)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->openPersistentEditor((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
}


RING_FUNC(ring_QListWidget_removeItemWidget)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItemWidget((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
}


RING_FUNC(ring_QListWidget_row)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->row((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem")));
}


RING_FUNC(ring_QListWidget_setCurrentItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentItem((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"), (QItemSelectionModel::SelectionFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListWidget_setCurrentRow)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentRow( (int ) RING_API_GETNUMBER(2), (QItemSelectionModel::SelectionFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListWidget_setItemWidget)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemWidget((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
}


RING_FUNC(ring_QListWidget_setSortingEnabled)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortingEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidget_sortItems)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortItems( (Qt::SortOrder )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidget_takeItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeItem( (int ) RING_API_GETNUMBER(2)),"QListWidgetItem");
}


RING_FUNC(ring_QListWidget_visualItemRect)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualItemRect((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QListWidget_clear)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	pObject->clear();
}


RING_FUNC(ring_QListWidget_scrollToItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToItem((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"), (QAbstractItemView::ScrollHint )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListWidget_setcurrentItemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentItemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setcurrentRowChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentRowChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setcurrentTextChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentTextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemActivatedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemDoubleClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemEnteredEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemPressedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemSelectionChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemSelectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_getcurrentItemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getcurrentItemChangedEvent());
}


RING_FUNC(ring_QListWidget_getcurrentRowChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getcurrentRowChangedEvent());
}


RING_FUNC(ring_QListWidget_getcurrentTextChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getcurrentTextChangedEvent());
}


RING_FUNC(ring_QListWidget_getitemActivatedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemActivatedEvent());
}


RING_FUNC(ring_QListWidget_getitemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemChangedEvent());
}


RING_FUNC(ring_QListWidget_getitemClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemClickedEvent());
}


RING_FUNC(ring_QListWidget_getitemDoubleClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemDoubleClickedEvent());
}


RING_FUNC(ring_QListWidget_getitemEnteredEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemEnteredEvent());
}


RING_FUNC(ring_QListWidget_getitemPressedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemPressedEvent());
}


RING_FUNC(ring_QListWidget_getitemSelectionChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemSelectionChangedEvent());
}


RING_FUNC(ring_QTreeView_allColumnsShowFocus)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->allColumnsShowFocus());
}


RING_FUNC(ring_QTreeView_autoExpandDelay)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->autoExpandDelay());
}


RING_FUNC(ring_QTreeView_columnAt)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_columnViewportPosition)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_columnWidth)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_expandsOnDoubleClick)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->expandsOnDoubleClick());
}


RING_FUNC(ring_QTreeView_header)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETCPOINTER(pObject->header(),"QHeaderView");
}


RING_FUNC(ring_QTreeView_indentation)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->indentation());
}


RING_FUNC(ring_QTreeView_indexAbove)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->indexAbove(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTreeView_indexBelow)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->indexBelow(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTreeView_isAnimated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isAnimated());
}


RING_FUNC(ring_QTreeView_isColumnHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isColumnHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_isExpanded)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isExpanded(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_isFirstColumnSpanned)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isFirstColumnSpanned( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_isHeaderHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isHeaderHidden());
}


RING_FUNC(ring_QTreeView_isRowHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isRowHidden( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_isSortingEnabled)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isSortingEnabled());
}


RING_FUNC(ring_QTreeView_itemsExpandable)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->itemsExpandable());
}


RING_FUNC(ring_QTreeView_rootIsDecorated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->rootIsDecorated());
}


RING_FUNC(ring_QTreeView_setAllColumnsShowFocus)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAllColumnsShowFocus( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setAnimated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAnimated( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setAutoExpandDelay)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoExpandDelay( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setColumnHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeView_setColumnWidth)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnWidth( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeView_setExpanded)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpanded(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setExpandsOnDoubleClick)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpandsOnDoubleClick( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setFirstColumnSpanned)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFirstColumnSpanned( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex"), (bool ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setHeader)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeader((QHeaderView *) RING_API_GETCPOINTER(2,"QHeaderView"));
}


RING_FUNC(ring_QTreeView_setHeaderHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeaderHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setIndentation)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndentation( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setItemsExpandable)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemsExpandable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setRootIsDecorated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRootIsDecorated( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setRowHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHidden( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex"), (bool ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setSortingEnabled)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortingEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setUniformRowHeights)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUniformRowHeights( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setWordWrap)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_sortByColumn)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortByColumn( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeView_uniformRowHeights)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->uniformRowHeights());
}


RING_FUNC(ring_QTreeView_wordWrap)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QTreeView_dataChanged)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->dataChanged(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_indexAt)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->indexAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTreeView_keyboardSearch)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->keyboardSearch(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_reset)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->reset();
}


RING_FUNC(ring_QTreeView_scrollTo)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollTo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"), (QAbstractItemView::ScrollHint)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_selectAll)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->selectAll();
}


RING_FUNC(ring_QTreeView_setModel)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QTreeView_setRootIndex)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->setRootIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setSelectionModel)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionModel((QItemSelectionModel *) RING_API_GETCPOINTER(2,"QItemSelectionModel"));
}


RING_FUNC(ring_QTreeView_visualRect)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualRect(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QTreeView_collapse)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->collapse(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_collapseAll)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->collapseAll();
}


RING_FUNC(ring_QTreeView_expand)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->expand(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_expandAll)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->expandAll();
}


RING_FUNC(ring_QTreeView_expandToDepth)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->expandToDepth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_hideColumn)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_resizeColumnToContents)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeColumnToContents( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_showColumn)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setcollapsedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcollapsedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setexpandedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setexpandedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setactivatedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setclickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setdoubleClickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setenteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setenteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setpressedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setviewportEnteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setviewportEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_getcollapsedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getcollapsedEvent());
}


RING_FUNC(ring_QTreeView_getexpandedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getexpandedEvent());
}


RING_FUNC(ring_QTreeView_getactivatedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QTreeView_getclickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QTreeView_getdoubleClickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getdoubleClickedEvent());
}


RING_FUNC(ring_QTreeView_getenteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getenteredEvent());
}


RING_FUNC(ring_QTreeView_getpressedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QTreeView_getviewportEnteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getviewportEnteredEvent());
}


RING_FUNC(ring_QFileSystemModel_fileIcon)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->fileIcon(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_fileInfo)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QFileInfo *pValue ; 
		pValue = new QFileInfo() ;
		*pValue = pObject->fileInfo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFileInfo",ring_QFileInfo_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_fileName)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->fileName(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_filePath)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->filePath(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_filter)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->filter());
}


RING_FUNC(ring_QFileSystemModel_iconProvider)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETCPOINTER(pObject->iconProvider(),"QFileIconProvider");
}


RING_FUNC(ring_QFileSystemModel_index)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->index(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QFileSystemModel_isDir)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->isDir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_isReadOnly)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QFileSystemModel_lastModified)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->lastModified(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_mkdir)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->mkdir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QFileSystemModel_myComputer)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->myComputer( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_nameFilterDisables)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->nameFilterDisables());
}


RING_FUNC(ring_QFileSystemModel_nameFilters)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->nameFilters();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_permissions)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->permissions(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_remove)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->remove(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_resolveSymlinks)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->resolveSymlinks());
}


RING_FUNC(ring_QFileSystemModel_rmdir)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->rmdir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_rootDirectory)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->rootDirectory();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_rootPath)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->rootPath().toStdString().c_str());
}


RING_FUNC(ring_QFileSystemModel_setFilter)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilter( (QDir::Filter )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setIconProvider)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconProvider((QFileIconProvider *) RING_API_GETCPOINTER(2,"QFileIconProvider"));
}


RING_FUNC(ring_QFileSystemModel_setNameFilterDisables)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNameFilterDisables( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setNameFilters)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	pObject->setNameFilters(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QFileSystemModel_setReadOnly)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setResolveSymlinks)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResolveSymlinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setRootPath)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->setRootPath(RING_API_GETSTRING(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QFileSystemModel_size)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->size(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_type)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->type(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_canFetchMore)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->canFetchMore(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_columnCount)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QFileSystemModel_data)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"), (int ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_dropMimeData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->dropMimeData((QMimeData *) RING_API_GETCPOINTER(2,"QMimeData"), (Qt::DropAction )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5),* (QModelIndex  *) RING_API_GETCPOINTER(6,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_fetchMore)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	pObject->fetchMore(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_flags)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->flags(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_hasChildren)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->hasChildren(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_headerData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->headerData( (int ) RING_API_GETNUMBER(2), (Qt::Orientation )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_mimeData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETCPOINTER(pObject->mimeData(* (QModelIndexList  *) RING_API_GETCPOINTER(2,"QModelIndexList")),"QMimeData");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndexList"));
}


RING_FUNC(ring_QFileSystemModel_mimeTypes)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->mimeTypes();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFileSystemModel_parent)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->parent(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QFileSystemModel_rowCount)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->rowCount(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_setData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setData(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"),* (QVariant  *) RING_API_GETCPOINTER(3,"QVariant"), (int ) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QFileSystemModel_sort)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sort( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFileSystemModel_supportedDropActions)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->supportedDropActions());
}


RING_FUNC(ring_QTreeWidget_isFirstItemColumnSpanned)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isFirstItemColumnSpanned((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")));
}


RING_FUNC(ring_QTreeWidget_setFirstItemColumnSpanned)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFirstItemColumnSpanned((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_addTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addTopLevelItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_closePersistentEditor)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->closePersistentEditor((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_columnCount)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QTreeWidget_currentColumn)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->currentColumn());
}


RING_FUNC(ring_QTreeWidget_currentItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETCPOINTER(pObject->currentItem(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_editItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->editItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_headerItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETCPOINTER(pObject->headerItem(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_indexOfTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOfTopLevelItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")));
}


RING_FUNC(ring_QTreeWidget_insertTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertTopLevelItem( (int ) RING_API_GETNUMBER(2),(QTreeWidgetItem *) RING_API_GETCPOINTER(3,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_invisibleRootItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETCPOINTER(pObject->invisibleRootItem(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_itemAbove)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAbove((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_itemAt)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_itemBelow)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemBelow((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_itemWidget)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemWidget((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3)),"QWidget");
}


RING_FUNC(ring_QTreeWidget_openPersistentEditor)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->openPersistentEditor((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_removeItemWidget)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItemWidget((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_setColumnCount)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidget_setCurrentItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (QItemSelectionModel::SelectionFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_setHeaderItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeaderItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_setHeaderLabel)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeaderLabel(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setHeaderLabels)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	pObject->setHeaderLabels(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QTreeWidget_setItemWidget)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemWidget((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"));
}


RING_FUNC(ring_QTreeWidget_sortColumn)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->sortColumn());
}


RING_FUNC(ring_QTreeWidget_sortItems)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortItems( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_takeTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeTopLevelItem( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_topLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->topLevelItem( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_topLevelItemCount)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->topLevelItemCount());
}


RING_FUNC(ring_QTreeWidget_visualItemRect)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualItemRect((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QTreeWidget_setSelectionModel)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionModel((QItemSelectionModel *) RING_API_GETCPOINTER(2,"QItemSelectionModel"));
}


RING_FUNC(ring_QTreeWidget_clear)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	pObject->clear();
}


RING_FUNC(ring_QTreeWidget_collapseItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->collapseItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_expandItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->expandItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_scrollToItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (QAbstractItemView::ScrollHint )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_setcollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcollapsedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setexpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setexpandedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setactivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setclickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setdoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setenteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setenteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setpressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setviewportEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setviewportEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setcurrentItemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentItemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemActivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemCollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemCollapsedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemDoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemExpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemExpandedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemPressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemSelectionChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemSelectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_getcollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getcollapsedEvent());
}


RING_FUNC(ring_QTreeWidget_getexpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getexpandedEvent());
}


RING_FUNC(ring_QTreeWidget_getactivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QTreeWidget_getclickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QTreeWidget_getdoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getdoubleClickedEvent());
}


RING_FUNC(ring_QTreeWidget_getenteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getenteredEvent());
}


RING_FUNC(ring_QTreeWidget_getpressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QTreeWidget_getviewportEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getviewportEnteredEvent());
}


RING_FUNC(ring_QTreeWidget_getcurrentItemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getcurrentItemChangedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemActivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemActivatedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemChangedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemClickedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemCollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemCollapsedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemDoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemDoubleClickedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemEnteredEvent());
}


RING_FUNC(ring_QTreeWidget_getitemExpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemExpandedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemPressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemPressedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemSelectionChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemSelectionChangedEvent());
}


RING_FUNC(ring_QTreeWidgetItem_addChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addChild((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidgetItem_background)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QTreeWidgetItem_checkState)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->checkState( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeWidgetItem_child)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->child( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_childCount)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->childCount());
}


RING_FUNC(ring_QTreeWidgetItem_childIndicatorPolicy)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->childIndicatorPolicy());
}


RING_FUNC(ring_QTreeWidgetItem_clone)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETCPOINTER(pObject->clone(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_columnCount)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QTreeWidgetItem_data)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QTreeWidgetItem_flags)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QTreeWidgetItem_font)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QTreeWidgetItem_foreground)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foreground( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QTreeWidgetItem_icon)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QTreeWidgetItem_indexOfChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOfChild((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")));
}


RING_FUNC(ring_QTreeWidgetItem_insertChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertChild( (int ) RING_API_GETNUMBER(2),(QTreeWidgetItem *) RING_API_GETCPOINTER(3,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidgetItem_isDisabled)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isDisabled());
}


RING_FUNC(ring_QTreeWidgetItem_isExpanded)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isExpanded());
}


RING_FUNC(ring_QTreeWidgetItem_isFirstColumnSpanned)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isFirstColumnSpanned());
}


RING_FUNC(ring_QTreeWidgetItem_isHidden)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QTreeWidgetItem_isSelected)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isSelected());
}


RING_FUNC(ring_QTreeWidgetItem_parent)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETCPOINTER(pObject->parent(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_read)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	pObject->read(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDataStream"));
}


RING_FUNC(ring_QTreeWidgetItem_removeChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeChild((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidgetItem_setBackground)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackground( (int ) RING_API_GETNUMBER(2),* (QBrush *) RING_API_GETCPOINTER(3,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QBrush"));
}


RING_FUNC(ring_QTreeWidgetItem_setCheckState)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (int ) RING_API_GETNUMBER(2), (Qt::CheckState )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidgetItem_setChildIndicatorPolicy)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildIndicatorPolicy( (QTreeWidgetItem::ChildIndicatorPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setData)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setData( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QVariant *) RING_API_GETCPOINTER(4,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QVariant"));
}


RING_FUNC(ring_QTreeWidgetItem_setDisabled)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setExpanded)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpanded( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setFirstColumnSpanned)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFirstColumnSpanned( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setFlags)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::ItemFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setFont)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFont( (int ) RING_API_GETNUMBER(2),* (QFont *) RING_API_GETCPOINTER(3,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QFont"));
}


RING_FUNC(ring_QTreeWidgetItem_setForeground)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setForeground( (int ) RING_API_GETNUMBER(2),* (QBrush *) RING_API_GETCPOINTER(3,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QBrush"));
}


RING_FUNC(ring_QTreeWidgetItem_setHidden)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setIcon)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIcon( (int ) RING_API_GETNUMBER(2),* (QIcon *) RING_API_GETCPOINTER(3,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QIcon"));
}


RING_FUNC(ring_QTreeWidgetItem_setSelected)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelected( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setSizeHint)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeHint( (int ) RING_API_GETNUMBER(2),* (QSize *) RING_API_GETCPOINTER(3,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QSize"));
}


RING_FUNC(ring_QTreeWidgetItem_setStatusTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_setText)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_setTextAlignment)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextAlignment( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidgetItem_setToolTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_setWhatsThis)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_sizeHint)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QTreeWidgetItem_sortChildren)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortChildren( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidgetItem_statusTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->statusTip( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_takeChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeChild( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_text)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->text( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_textAlignment)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->textAlignment( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeWidgetItem_toolTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toolTip( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_treeWidget)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETCPOINTER(pObject->treeWidget(),"QTreeWidget");
}


RING_FUNC(ring_QTreeWidgetItem_type)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QTreeWidgetItem_whatsThis)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->whatsThis( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_write)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	pObject->write(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDataStream"));
}


RING_FUNC(ring_QComboBox_addItem)
{
	QComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addItem(RING_API_GETSTRING(2),QVariant(RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QComboBox_addItems)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->addItems(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QComboBox_completer)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->completer(),"QCompleter");
}


RING_FUNC(ring_QComboBox_count)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QComboBox_currentIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QComboBox_currentText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->currentText().toStdString().c_str());
}


RING_FUNC(ring_QComboBox_duplicatesEnabled)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->duplicatesEnabled());
}


RING_FUNC(ring_QComboBox_findData)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->findData(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"), (int ) RING_API_GETNUMBER(3), (Qt::MatchFlag )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QComboBox_findText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->findText(RING_API_GETSTRING(2), (Qt::MatchFlag )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QComboBox_hasFrame)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->hasFrame());
}


RING_FUNC(ring_QComboBox_hidePopup)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->hidePopup();
}


RING_FUNC(ring_QComboBox_iconSize)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QComboBox_insertItem)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertItem( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3),* (QVariant *) RING_API_GETCPOINTER(4,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QVariant"));
}


RING_FUNC(ring_QComboBox_insertSeparator)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSeparator( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_isEditable)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->isEditable());
}


RING_FUNC(ring_QComboBox_itemData)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->itemData( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QComboBox_itemDelegate)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->itemDelegate(),"QAbstractItemDelegate");
}


RING_FUNC(ring_QComboBox_itemIcon)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->itemIcon( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QComboBox_itemText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->itemText( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QComboBox_lineEdit)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->lineEdit(),"QLineEdit");
}


RING_FUNC(ring_QComboBox_maxCount)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->maxCount());
}


RING_FUNC(ring_QComboBox_maxVisibleItems)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->maxVisibleItems());
}


RING_FUNC(ring_QComboBox_minimumContentsLength)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->minimumContentsLength());
}


RING_FUNC(ring_QComboBox_model)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->model(),"QAbstractItemModel");
}


RING_FUNC(ring_QComboBox_modelColumn)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->modelColumn());
}


RING_FUNC(ring_QComboBox_removeItem)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItem( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_rootModelIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->rootModelIndex();
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QComboBox_setCompleter)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompleter((QCompleter *) RING_API_GETCPOINTER(2,"QCompleter"));
}


RING_FUNC(ring_QComboBox_setDuplicatesEnabled)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDuplicatesEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setEditable)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEditable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setFrame)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrame( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setIconSize)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QComboBox_setItemData)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemData( (int ) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"), (int ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QComboBox_setItemDelegate)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegate((QAbstractItemDelegate *) RING_API_GETCPOINTER(2,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QComboBox_setItemIcon)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemIcon( (int ) RING_API_GETNUMBER(2),* (QIcon *) RING_API_GETCPOINTER(3,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QIcon"));
}


RING_FUNC(ring_QComboBox_setItemText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemText( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QComboBox_setLineEdit)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineEdit((QLineEdit *) RING_API_GETCPOINTER(2,"QLineEdit"));
}


RING_FUNC(ring_QComboBox_setMaxCount)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setMaxVisibleItems)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxVisibleItems( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setMinimumContentsLength)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumContentsLength( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setModel)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QComboBox_setModelColumn)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModelColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setRootModelIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->setRootModelIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QComboBox_setValidator)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValidator((QValidator *) RING_API_GETCPOINTER(2,"QValidator"));
}


RING_FUNC(ring_QComboBox_setView)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setView((QAbstractItemView *) RING_API_GETCPOINTER(2,"QAbstractItemView"));
}


RING_FUNC(ring_QComboBox_showPopup)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->showPopup();
}


RING_FUNC(ring_QComboBox_validator)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->validator(),"QValidator");
}


RING_FUNC(ring_QComboBox_view)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->view(),"QAbstractItemView");
}


RING_FUNC(ring_QComboBox_clear)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->clear();
}


RING_FUNC(ring_QComboBox_clearEditText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->clearEditText();
}


RING_FUNC(ring_QComboBox_setCurrentIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setCurrentText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_setEditText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEditText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_setactivatedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_setcurrentIndexChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentIndexChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_seteditTextChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seteditTextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_sethighlightedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethighlightedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_getactivatedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QComboBox_getcurrentIndexChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->getcurrentIndexChangedEvent());
}


RING_FUNC(ring_QComboBox_geteditTextChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->geteditTextChangedEvent());
}


RING_FUNC(ring_QComboBox_gethighlightedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->gethighlightedEvent());
}


RING_FUNC(ring_QMenuBar_actionAt)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETCPOINTER(pObject->actionAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QMenuBar_actionGeometry)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->actionGeometry((QAction *) RING_API_GETCPOINTER(2,"QAction"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QMenuBar_activeAction)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETCPOINTER(pObject->activeAction(),"QAction");
}


RING_FUNC(ring_QMenuBar_addAction)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addAction(RING_API_GETSTRING(2)),"QAction");
}


RING_FUNC(ring_QMenuBar_addMenu)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addMenu(RING_API_GETSTRING(2)),"QMenu");
}


RING_FUNC(ring_QMenuBar_addSeparator)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETCPOINTER(pObject->addSeparator(),"QAction");
}


RING_FUNC(ring_QMenuBar_clear)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	pObject->clear();
}


RING_FUNC(ring_QMenuBar_cornerWidget)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->cornerWidget( (Qt::Corner)  (int) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QMenuBar_insertMenu)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertMenu((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QMenu *) RING_API_GETCPOINTER(3,"QMenu")),"QAction");
}


RING_FUNC(ring_QMenuBar_insertSeparator)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertSeparator((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QAction");
}


RING_FUNC(ring_QMenuBar_isDefaultUp)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETNUMBER(pObject->isDefaultUp());
}


RING_FUNC(ring_QMenuBar_isNativeMenuBar)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETNUMBER(pObject->isNativeMenuBar());
}


RING_FUNC(ring_QMenuBar_setActiveAction)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActiveAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenuBar_setCornerWidget)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::Corner)  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMenuBar_setDefaultUp)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultUp( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenuBar_setNativeMenuBar)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNativeMenuBar( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenu_actionAt)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->actionAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QMenu_actionGeometry)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->actionGeometry((QAction *) RING_API_GETCPOINTER(2,"QAction"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QMenu_activeAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->activeAction(),"QAction");
}


RING_FUNC(ring_QMenu_addAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenu_addMenu)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addMenu(RING_API_GETSTRING(2)),"QMenu");
}


RING_FUNC(ring_QMenu_addSeparator)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->addSeparator(),"QAction");
}


RING_FUNC(ring_QMenu_clear)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	pObject->clear();
}


RING_FUNC(ring_QMenu_defaultAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->defaultAction(),"QAction");
}


RING_FUNC(ring_QMenu_exec)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->exec(* (const QPoint  *) RING_API_GETCPOINTER(2,"const QPoint")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QMenu_exec_2)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->exec(),"QAction");
}


RING_FUNC(ring_QMenu_exec_3)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->exec(* (const QPoint  *) RING_API_GETCPOINTER(2,"const QPoint"),(QAction *) RING_API_GETCPOINTER(3,"QAction")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QMenu_hideTearOffMenu)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	pObject->hideTearOffMenu();
}


RING_FUNC(ring_QMenu_icon)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QMenu_insertMenu)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertMenu((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QMenu *) RING_API_GETCPOINTER(3,"QMenu")),"QAction");
}


RING_FUNC(ring_QMenu_insertSeparator)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertSeparator((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QAction");
}


RING_FUNC(ring_QMenu_isEmpty)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QMenu_isTearOffEnabled)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->isTearOffEnabled());
}


RING_FUNC(ring_QMenu_isTearOffMenuVisible)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->isTearOffMenuVisible());
}


RING_FUNC(ring_QMenu_menuAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->menuAction(),"QAction");
}


RING_FUNC(ring_QMenu_popup)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->popup(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"),(QAction *) RING_API_GETCPOINTER(3,"QAction"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QMenu_separatorsCollapsible)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->separatorsCollapsible());
}


RING_FUNC(ring_QMenu_setActiveAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActiveAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenu_setDefaultAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenu_setIcon)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QMenu_setSeparatorsCollapsible)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSeparatorsCollapsible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenu_setTearOffEnabled)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTearOffEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenu_setTitle)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMenu_title)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETSTRING(pObject->title().toStdString().c_str());
}


RING_FUNC(ring_QToolBar_actionAt)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->actionAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QAction");
}


RING_FUNC(ring_QToolBar_addAction)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addAction(RING_API_GETSTRING(2)),"QAction");
}


RING_FUNC(ring_QToolBar_addSeparator)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETCPOINTER(pObject->addSeparator(),"QAction");
}


RING_FUNC(ring_QToolBar_addWidget)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget")),"QAction");
}


RING_FUNC(ring_QToolBar_allowedAreas)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->allowedAreas());
}


RING_FUNC(ring_QToolBar_clear)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	pObject->clear();
}


RING_FUNC(ring_QToolBar_iconSize)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QToolBar_insertSeparator)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertSeparator((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QAction");
}


RING_FUNC(ring_QToolBar_insertWidget)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertWidget((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget")),"QAction");
}


RING_FUNC(ring_QToolBar_isAreaAllowed)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAreaAllowed( (Qt::ToolBarArea )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QToolBar_isFloatable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->isFloatable());
}


RING_FUNC(ring_QToolBar_isFloating)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->isFloating());
}


RING_FUNC(ring_QToolBar_isMovable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->isMovable());
}


RING_FUNC(ring_QToolBar_orientation)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QToolBar_setAllowedAreas)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAllowedAreas( (Qt::ToolBarArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_setFloatable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFloatable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_setMovable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_setOrientation)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_toggleViewAction)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETCPOINTER(pObject->toggleViewAction(),"QAction");
}


RING_FUNC(ring_QToolBar_toolButtonStyle)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->toolButtonStyle());
}


RING_FUNC(ring_QToolBar_widgetForAction)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widgetForAction((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QWidget");
}


RING_FUNC(ring_QToolBar_setIconSize)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QToolBar_setToolButtonStyle)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolButtonStyle( (Qt::ToolButtonStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_addDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addDockWidget( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2),(QDockWidget *) RING_API_GETCPOINTER(3,"QDockWidget"), (Qt::Orientation )  (int) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QMainWindow_addToolBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addToolBar(RING_API_GETSTRING(2)),"QToolBar");
}


RING_FUNC(ring_QMainWindow_addToolBar_2)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addToolBar( (Qt::ToolBarArea )  (int) RING_API_GETNUMBER(2),(QToolBar *) RING_API_GETCPOINTER(3,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_addToolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addToolBarBreak( (Qt::ToolBarArea)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_centralWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->centralWidget(),"QWidget");
}


RING_FUNC(ring_QMainWindow_corner)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->corner( (Qt::Corner )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMainWindow_createPopupMenu)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->createPopupMenu(),"QMenu");
}


RING_FUNC(ring_QMainWindow_dockOptions)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->dockOptions());
}


RING_FUNC(ring_QMainWindow_dockWidgetArea)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->dockWidgetArea((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget")));
}


RING_FUNC(ring_QMainWindow_documentMode)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->documentMode());
}


RING_FUNC(ring_QMainWindow_iconSize)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QMainWindow_insertToolBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertToolBar((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"),(QToolBar *) RING_API_GETCPOINTER(3,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_insertToolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertToolBarBreak((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_isAnimated)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->isAnimated());
}


RING_FUNC(ring_QMainWindow_isDockNestingEnabled)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->isDockNestingEnabled());
}


RING_FUNC(ring_QMainWindow_menuBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->menuBar(),"QMenuBar");
}


RING_FUNC(ring_QMainWindow_menuWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->menuWidget(),"QWidget");
}


RING_FUNC(ring_QMainWindow_removeDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget"));
}


RING_FUNC(ring_QMainWindow_removeToolBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeToolBar((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_removeToolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeToolBarBreak((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_restoreDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->restoreDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget")));
}


RING_FUNC(ring_QMainWindow_restoreState)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"), (int ) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QMainWindow_saveState)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QMainWindow_setCentralWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCentralWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMainWindow_setCorner)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCorner( (Qt::Corner )  (int) RING_API_GETNUMBER(2), (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMainWindow_setDockOptions)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDockOptions( (QMainWindow::DockOption )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setDocumentMode)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setIconSize)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QMainWindow_setMenuBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuBar((QMenuBar *) RING_API_GETCPOINTER(2,"QMenuBar"));
}


RING_FUNC(ring_QMainWindow_setMenuWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMainWindow_setStatusBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusBar((QStatusBar *) RING_API_GETCPOINTER(2,"QStatusBar"));
}


RING_FUNC(ring_QMainWindow_setTabPosition)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabPosition( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2), (QTabWidget::TabPosition )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMainWindow_setTabShape)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabShape( (QTabWidget::TabShape )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setToolButtonStyle)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolButtonStyle( (Qt::ToolButtonStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setUnifiedTitleAndToolBarOnMac)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUnifiedTitleAndToolBarOnMac( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_splitDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->splitDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget"),(QDockWidget *) RING_API_GETCPOINTER(3,"QDockWidget"), (Qt::Orientation )  (int) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QMainWindow_statusBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->statusBar(),"QStatusBar");
}


RING_FUNC(ring_QMainWindow_tabPosition)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->tabPosition( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMainWindow_tabShape)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->tabShape());
}


RING_FUNC(ring_QMainWindow_tabifyDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->tabifyDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget"),(QDockWidget *) RING_API_GETCPOINTER(3,"QDockWidget"));
}


RING_FUNC(ring_QMainWindow_toolBarArea)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toolBarArea((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar")));
}


RING_FUNC(ring_QMainWindow_toolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toolBarBreak((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar")));
}


RING_FUNC(ring_QMainWindow_toolButtonStyle)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->toolButtonStyle());
}


RING_FUNC(ring_QMainWindow_unifiedTitleAndToolBarOnMac)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->unifiedTitleAndToolBarOnMac());
}


RING_FUNC(ring_QStatusBar_addPermanentWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addPermanentWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStatusBar_addWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStatusBar_currentMessage)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	RING_API_RETSTRING(pObject->currentMessage().toStdString().c_str());
}


RING_FUNC(ring_QStatusBar_insertPermanentWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertPermanentWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStatusBar_insertWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStatusBar_isSizeGripEnabled)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	RING_API_RETNUMBER(pObject->isSizeGripEnabled());
}


RING_FUNC(ring_QStatusBar_removeWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStatusBar_setSizeGripEnabled)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeGripEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStatusBar_clearMessage)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	pObject->clearMessage();
}


RING_FUNC(ring_QStatusBar_showMessage)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showMessage(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QDockWidget_allowedAreas)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETNUMBER(pObject->allowedAreas());
}


RING_FUNC(ring_QDockWidget_features)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETNUMBER(pObject->features());
}


RING_FUNC(ring_QDockWidget_isAreaAllowed)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAreaAllowed( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QDockWidget_isFloating)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETNUMBER(pObject->isFloating());
}


RING_FUNC(ring_QDockWidget_setAllowedAreas)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAllowedAreas( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setFeatures)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFeatures( (QDockWidget::DockWidgetFeature )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setFloating)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFloating( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setTitleBarWidget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTitleBarWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QDockWidget_setWidget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QDockWidget_titleBarWidget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETCPOINTER(pObject->titleBarWidget(),"QWidget");
}


RING_FUNC(ring_QDockWidget_toggleViewAction)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETCPOINTER(pObject->toggleViewAction(),"QAction");
}


RING_FUNC(ring_QDockWidget_widget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QDockWidget_allowedAreasChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->allowedAreasChanged( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_dockLocationChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->dockLocationChanged( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_featuresChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->featuresChanged( (QDockWidget::DockWidgetFeature )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_topLevelChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->topLevelChanged( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_visibilityChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->visibilityChanged( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setallowedAreasChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setallowedAreasChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_setdockLocationChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdockLocationChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_setfeaturesChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfeaturesChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_settopLevelChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settopLevelChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_setvisibilityChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvisibilityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_getallowedAreasChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getallowedAreasChangedEvent());
}


RING_FUNC(ring_QDockWidget_getdockLocationChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getdockLocationChangedEvent());
}


RING_FUNC(ring_QDockWidget_getfeaturesChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getfeaturesChangedEvent());
}


RING_FUNC(ring_QDockWidget_gettopLevelChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->gettopLevelChangedEvent());
}


RING_FUNC(ring_QDockWidget_getvisibilityChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getvisibilityChangedEvent());
}


RING_FUNC(ring_QTabWidget_tabBar)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETCPOINTER(pObject->tabBar(),"QTabBar");
}


RING_FUNC(ring_QTabWidget_addTab)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->addTab((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QTabWidget_clear)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	pObject->clear();
}


RING_FUNC(ring_QTabWidget_cornerWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->cornerWidget( (Qt::Corner )  (int) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QTabWidget_count)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QTabWidget_currentIndex)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QTabWidget_currentWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETCPOINTER(pObject->currentWidget(),"QWidget");
}


RING_FUNC(ring_QTabWidget_documentMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->documentMode());
}


RING_FUNC(ring_QTabWidget_elideMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->elideMode());
}


RING_FUNC(ring_QTabWidget_iconSize)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QTabWidget_indexOf)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QTabWidget_insertTab)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertTab( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"),RING_API_GETSTRING(4)));
}


RING_FUNC(ring_QTabWidget_isMovable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->isMovable());
}


RING_FUNC(ring_QTabWidget_isTabEnabled)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isTabEnabled( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTabWidget_removeTab)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeTab( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setCornerWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::Corner )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTabWidget_setDocumentMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setElideMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setElideMode( (Qt::TextElideMode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setIconSize)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QTabWidget_setMovable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setTabEnabled)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabEnabled( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTabWidget_setTabIcon)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabIcon( (int ) RING_API_GETNUMBER(2),* (QIcon *) RING_API_GETCPOINTER(3,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QIcon"));
}


RING_FUNC(ring_QTabWidget_setTabText)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabText( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabWidget_setTabToolTip)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabToolTip( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabWidget_setTabWhatsThis)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabWhatsThis( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabWidget_setTabsClosable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabsClosable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setUsesScrollButtons)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUsesScrollButtons( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_tabIcon)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->tabIcon( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QTabWidget_tabText)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabText( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabWidget_tabToolTip)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabToolTip( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabWidget_tabWhatsThis)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabWhatsThis( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabWidget_tabsClosable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->tabsClosable());
}


RING_FUNC(ring_QTabWidget_usesScrollButtons)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->usesScrollButtons());
}


RING_FUNC(ring_QTabWidget_widget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widget( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QTabWidget_heightForWidth)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->heightForWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTabWidget_minimumSizeHint)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QTabWidget_sizeHint)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QTabWidget_setCurrentIndex)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setCurrentWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QTabWidget_setcurrentChangedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTabWidget_settabCloseRequestedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settabCloseRequestedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTabWidget_getcurrentChangedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETSTRING(pObject->getcurrentChangedEvent());
}


RING_FUNC(ring_QTabWidget_gettabCloseRequestedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETSTRING(pObject->gettabCloseRequestedEvent());
}


RING_FUNC(ring_QTabWidget_geteventparameters)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	pObject->geteventparameters();
}


RING_FUNC(ring_QTableWidgetItem_background)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QTableWidgetItem_checkState)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->checkState());
}


RING_FUNC(ring_QTableWidgetItem_clone)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETCPOINTER(pObject->clone(),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidgetItem_column)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->column());
}


RING_FUNC(ring_QTableWidgetItem_data)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QTableWidgetItem_flags)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QTableWidgetItem_font)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QTableWidgetItem_foreground)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foreground();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QTableWidgetItem_icon)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QTableWidgetItem_isSelected)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->isSelected());
}


RING_FUNC(ring_QTableWidgetItem_read)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->read(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDataStream"));
}


RING_FUNC(ring_QTableWidgetItem_row)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->row());
}


RING_FUNC(ring_QTableWidgetItem_setBackground)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setBackground(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QTableWidgetItem_setCheckState)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (Qt::CheckState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setData)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setData( (int ) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QTableWidgetItem_setFlags)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::ItemFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setFont)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QTableWidgetItem_setForeground)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setForeground(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QTableWidgetItem_setIcon)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QTableWidgetItem_setSelected)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelected( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setSizeHint)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setSizeHint(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QTableWidgetItem_setStatusTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_setText)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_setTextAlignment)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextAlignment( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setToolTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_setWhatsThis)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_sizeHint)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QTableWidgetItem_statusTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_tableWidget)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETCPOINTER(pObject->tableWidget(),"QTableWidget");
}


RING_FUNC(ring_QTableWidgetItem_text)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_textAlignment)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->textAlignment());
}


RING_FUNC(ring_QTableWidgetItem_toolTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_type)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QTableWidgetItem_whatsThis)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_write)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->write(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDataStream"));
}


RING_FUNC(ring_QFrame_frameRect)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->frameRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QFrame_frameShadow)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameShadow());
}


RING_FUNC(ring_QFrame_frameShape)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameShape());
}


RING_FUNC(ring_QFrame_frameStyle)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameStyle());
}


RING_FUNC(ring_QFrame_frameWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameWidth());
}


RING_FUNC(ring_QFrame_lineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->lineWidth());
}


RING_FUNC(ring_QFrame_midLineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->midLineWidth());
}


RING_FUNC(ring_QFrame_setFrameRect)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	pObject->setFrameRect(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QFrame_setFrameShadow)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrameShadow( (QFrame::Shadow)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setFrameShape)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrameShape( (QFrame::Shape)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setFrameStyle)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrameStyle( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setLineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWidth( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setMidLineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMidLineWidth( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_sizeHint)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QAbstractScrollArea_addScrollBarWidget)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addScrollBarWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QAbstractScrollArea_cornerWidget)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->cornerWidget(),"QWidget");
}


RING_FUNC(ring_QAbstractScrollArea_horizontalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->horizontalScrollBar(),"QScrollBar");
}


RING_FUNC(ring_QAbstractScrollArea_horizontalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETNUMBER(pObject->horizontalScrollBarPolicy());
}


RING_FUNC(ring_QAbstractScrollArea_maximumViewportSize)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->maximumViewportSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QAbstractScrollArea_scrollBarWidgets)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QWidgetList *pValue ; 
		pValue = (QWidgetList *) RING_API_MALLOC(sizeof(QWidgetList)) ;
		*pValue = pObject->scrollBarWidgets( (Qt::AlignmentFlag)  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QWidgetList",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QAbstractScrollArea_setCornerWidget)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QAbstractScrollArea_setHorizontalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalScrollBar((QScrollBar *) RING_API_GETCPOINTER(2,"QScrollBar"));
}


RING_FUNC(ring_QAbstractScrollArea_setHorizontalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalScrollBarPolicy( (Qt::ScrollBarPolicy)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractScrollArea_setVerticalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalScrollBar((QScrollBar *) RING_API_GETCPOINTER(2,"QScrollBar"));
}


RING_FUNC(ring_QAbstractScrollArea_setVerticalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalScrollBarPolicy( (Qt::ScrollBarPolicy)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractScrollArea_setViewport)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewport((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QAbstractScrollArea_verticalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->verticalScrollBar(),"QScrollBar");
}


RING_FUNC(ring_QAbstractScrollArea_verticalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETNUMBER(pObject->verticalScrollBarPolicy());
}


RING_FUNC(ring_QAbstractScrollArea_viewport)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->viewport(),"QWidget");
}


RING_FUNC(ring_QAbstractItemView_alternatingRowColors)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->alternatingRowColors());
}


RING_FUNC(ring_QAbstractItemView_autoScrollMargin)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->autoScrollMargin());
}


RING_FUNC(ring_QAbstractItemView_closePersistentEditor)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->closePersistentEditor(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_currentIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->currentIndex();
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QAbstractItemView_defaultDropAction)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->defaultDropAction());
}


RING_FUNC(ring_QAbstractItemView_dragDropMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->dragDropMode());
}


RING_FUNC(ring_QAbstractItemView_dragDropOverwriteMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->dragDropOverwriteMode());
}


RING_FUNC(ring_QAbstractItemView_dragEnabled)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->dragEnabled());
}


RING_FUNC(ring_QAbstractItemView_editTriggers)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->editTriggers());
}


RING_FUNC(ring_QAbstractItemView_hasAutoScroll)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->hasAutoScroll());
}


RING_FUNC(ring_QAbstractItemView_horizontalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->horizontalScrollMode());
}


RING_FUNC(ring_QAbstractItemView_iconSize)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QAbstractItemView_indexAt)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->indexAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QAbstractItemView_indexWidget)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->indexWidget(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")),"QWidget");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_itemDelegate)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->itemDelegate(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")),"QAbstractItemDelegate");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_itemDelegateForColumn)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemDelegateForColumn( (int ) RING_API_GETNUMBER(2)),"QAbstractItemDelegate");
}


RING_FUNC(ring_QAbstractItemView_itemDelegateForRow)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemDelegateForRow( (int ) RING_API_GETNUMBER(2)),"QAbstractItemDelegate");
}


RING_FUNC(ring_QAbstractItemView_keyboardSearch)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->keyboardSearch(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractItemView_model)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->model(),"QAbstractItemModel");
}


RING_FUNC(ring_QAbstractItemView_openPersistentEditor)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->openPersistentEditor(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_rootIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->rootIndex();
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QAbstractItemView_scrollTo)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollTo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"), (QAbstractItemView::ScrollHint)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_selectionBehavior)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->selectionBehavior());
}


RING_FUNC(ring_QAbstractItemView_selectionMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->selectionMode());
}


RING_FUNC(ring_QAbstractItemView_selectionModel)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->selectionModel(),"QItemSelectionModel");
}


RING_FUNC(ring_QAbstractItemView_setAlternatingRowColors)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlternatingRowColors( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setAutoScroll)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoScroll( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setAutoScrollMargin)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoScrollMargin( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDefaultDropAction)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultDropAction( (Qt::DropAction )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDragDropMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragDropMode( (QAbstractItemView::DragDropMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDragDropOverwriteMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragDropOverwriteMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDragEnabled)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDropIndicatorShown)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDropIndicatorShown( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setEditTriggers)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEditTriggers( (QAbstractItemView::EditTrigger )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setHorizontalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalScrollMode( (QAbstractItemView::ScrollMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setIconSize)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QAbstractItemView_setIndexWidget)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndexWidget(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_setItemDelegate)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegate((QAbstractItemDelegate *) RING_API_GETCPOINTER(2,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QAbstractItemView_setItemDelegateForColumn)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegateForColumn( (int ) RING_API_GETNUMBER(2),(QAbstractItemDelegate *) RING_API_GETCPOINTER(3,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QAbstractItemView_setItemDelegateForRow)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegateForRow( (int ) RING_API_GETNUMBER(2),(QAbstractItemDelegate *) RING_API_GETCPOINTER(3,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QAbstractItemView_setModel)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QAbstractItemView_setSelectionBehavior)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionBehavior( (QAbstractItemView::SelectionBehavior )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setSelectionMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionMode( (QAbstractItemView::SelectionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setSelectionModel)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionModel((QItemSelectionModel *) RING_API_GETCPOINTER(2,"QItemSelectionModel"));
}


RING_FUNC(ring_QAbstractItemView_setTabKeyNavigation)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabKeyNavigation( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setTextElideMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextElideMode( (Qt::TextElideMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setVerticalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalScrollMode( (QAbstractItemView::ScrollMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_showDropIndicator)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->showDropIndicator());
}


RING_FUNC(ring_QAbstractItemView_sizeHintForColumn)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sizeHintForColumn( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractItemView_sizeHintForIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHintForIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QAbstractItemView_sizeHintForRow)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sizeHintForRow( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractItemView_tabKeyNavigation)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->tabKeyNavigation());
}


RING_FUNC(ring_QAbstractItemView_textElideMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->textElideMode());
}


RING_FUNC(ring_QAbstractItemView_verticalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->verticalScrollMode());
}


RING_FUNC(ring_QAbstractItemView_visualRect)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualRect(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QAbstractItemView_clearSelection)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->clearSelection();
}


RING_FUNC(ring_QAbstractItemView_edit)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->edit(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_scrollToBottom)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->scrollToBottom();
}


RING_FUNC(ring_QAbstractItemView_scrollToTop)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->scrollToTop();
}


RING_FUNC(ring_QAbstractItemView_setCurrentIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->setCurrentIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_update)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->update(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTableView_clearSpans)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	pObject->clearSpans();
}


RING_FUNC(ring_QTableView_columnAt)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_columnSpan)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnSpan( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QTableView_columnViewportPosition)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_columnWidth)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_gridStyle)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->gridStyle());
}


RING_FUNC(ring_QTableView_horizontalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETCPOINTER(pObject->horizontalHeader(),"QHeaderView");
}


RING_FUNC(ring_QTableView_isColumnHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isColumnHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_isCornerButtonEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->isCornerButtonEnabled());
}


RING_FUNC(ring_QTableView_isRowHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isRowHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_isSortingEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->isSortingEnabled());
}


RING_FUNC(ring_QTableView_rowAt)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_rowHeight)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowHeight( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_rowSpan)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowSpan( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QTableView_rowViewportPosition)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_setColumnHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setColumnWidth)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnWidth( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setCornerButtonEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerButtonEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setGridStyle)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGridStyle( (Qt::PenStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setHorizontalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalHeader((QHeaderView *) RING_API_GETCPOINTER(2,"QHeaderView"));
}


RING_FUNC(ring_QTableView_setRowHeight)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHeight( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setRowHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setSortingEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortingEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setSpan)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpan( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QTableView_setVerticalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalHeader((QHeaderView *) RING_API_GETCPOINTER(2,"QHeaderView"));
}


RING_FUNC(ring_QTableView_setWordWrap)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_showGrid)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->showGrid());
}


RING_FUNC(ring_QTableView_sortByColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortByColumn( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_verticalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETCPOINTER(pObject->verticalHeader(),"QHeaderView");
}


RING_FUNC(ring_QTableView_wordWrap)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QTableView_hideColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_hideRow)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_resizeColumnToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeColumnToContents( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_resizeColumnsToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	pObject->resizeColumnsToContents();
}


RING_FUNC(ring_QTableView_resizeRowToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeRowToContents( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_resizeRowsToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	pObject->resizeRowsToContents();
}


RING_FUNC(ring_QTableView_selectColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_selectRow)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setShowGrid)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShowGrid( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_showColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_showRow)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_cellWidget)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->cellWidget( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QWidget");
}


RING_FUNC(ring_QTableWidget_closePersistentEditor)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->closePersistentEditor((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_column)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->column((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem")));
}


RING_FUNC(ring_QTableWidget_columnCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QTableWidget_currentColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->currentColumn());
}


RING_FUNC(ring_QTableWidget_currentItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETCPOINTER(pObject->currentItem(),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_currentRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->currentRow());
}


RING_FUNC(ring_QTableWidget_editItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->editItem((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_horizontalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->horizontalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_item)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->item( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_itemAt)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_itemPrototype)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETCPOINTER(pObject->itemPrototype(),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_openPersistentEditor)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->openPersistentEditor((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_removeCellWidget)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeCellWidget( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_row)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->row((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem")));
}


RING_FUNC(ring_QTableWidget_rowCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->rowCount());
}


RING_FUNC(ring_QTableWidget_selectedItems)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	{
		QList<QTableWidgetItem *> *pValue ; 
		pValue = (QList<QTableWidgetItem *> *) RING_API_MALLOC(sizeof(QList<QTableWidgetItem *>)) ;
		*pValue = pObject->selectedItems();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QTableWidgetItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTableWidget_selectedRanges)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	{
		QList<QTableWidgetSelectionRange> *pValue ; 
		pValue = (QList<QTableWidgetSelectionRange> *) RING_API_MALLOC(sizeof(QList<QTableWidgetSelectionRange>)) ;
		*pValue = pObject->selectedRanges();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QTableWidgetSelectionRange>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QTableWidget_setCellWidget)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCellWidget( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"));
}


RING_FUNC(ring_QTableWidget_setColumnCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_setCurrentCell)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentCell( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_setCurrentItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentItem((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setHorizontalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalHeaderItem( (int ) RING_API_GETNUMBER(2),(QTableWidgetItem *) RING_API_GETCPOINTER(3,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setHorizontalHeaderLabels)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	pObject->setHorizontalHeaderLabels(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QTableWidget_setItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItem( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),(QTableWidgetItem *) RING_API_GETCPOINTER(4,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setItemPrototype)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemPrototype((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setRowCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_setVerticalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalHeaderItem( (int ) RING_API_GETNUMBER(2),(QTableWidgetItem *) RING_API_GETCPOINTER(3,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_sortItems)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortItems( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_takeHorizontalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeHorizontalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_takeItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeItem( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_takeVerticalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeVerticalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_verticalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->verticalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_visualColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualColumn( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableWidget_visualItemRect)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualItemRect((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QTableWidget_visualRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualRow( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableWidget_clear)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	pObject->clear();
}


RING_FUNC(ring_QTableWidget_clearContents)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	pObject->clearContents();
}


RING_FUNC(ring_QTableWidget_insertColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_insertRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_removeColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_removeRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_scrollToItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToItem((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"), (QAbstractItemView::ScrollHint )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_setcellActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcurrentCellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentCellChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcurrentItemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentItemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemSelectionChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemSelectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_getcellActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellActivatedEvent());
}


RING_FUNC(ring_QTableWidget_getcellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellChangedEvent());
}


RING_FUNC(ring_QTableWidget_getcellClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellClickedEvent());
}


RING_FUNC(ring_QTableWidget_getcellDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellDoubleClickedEvent());
}


RING_FUNC(ring_QTableWidget_getcellEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellEnteredEvent());
}


RING_FUNC(ring_QTableWidget_getcellPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellPressedEvent());
}


RING_FUNC(ring_QTableWidget_getcurrentCellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcurrentCellChangedEvent());
}


RING_FUNC(ring_QTableWidget_getcurrentItemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcurrentItemChangedEvent());
}


RING_FUNC(ring_QTableWidget_getitemActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemActivatedEvent());
}


RING_FUNC(ring_QTableWidget_getitemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemChangedEvent());
}


RING_FUNC(ring_QTableWidget_getitemClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemClickedEvent());
}


RING_FUNC(ring_QTableWidget_getitemDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemDoubleClickedEvent());
}


RING_FUNC(ring_QTableWidget_getitemEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemEnteredEvent());
}


RING_FUNC(ring_QTableWidget_getitemPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemPressedEvent());
}


RING_FUNC(ring_QTableWidget_getitemSelectionChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemSelectionChangedEvent());
}


RING_FUNC(ring_QProgressBar_alignment)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QProgressBar_format)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETSTRING(pObject->format().toStdString().c_str());
}


RING_FUNC(ring_QProgressBar_invertedAppearance)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->invertedAppearance());
}


RING_FUNC(ring_QProgressBar_isTextVisible)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->isTextVisible());
}


RING_FUNC(ring_QProgressBar_maximum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->maximum());
}


RING_FUNC(ring_QProgressBar_minimum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->minimum());
}


RING_FUNC(ring_QProgressBar_orientation)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QProgressBar_resetFormat)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	pObject->resetFormat();
}


RING_FUNC(ring_QProgressBar_setAlignment)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setFormat)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFormat(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProgressBar_setInvertedAppearance)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInvertedAppearance( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setTextDirection)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextDirection( (QProgressBar::Direction )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setTextVisible)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_text)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QProgressBar_textDirection)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->textDirection());
}


RING_FUNC(ring_QProgressBar_value)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QProgressBar_reset)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	pObject->reset();
}


RING_FUNC(ring_QProgressBar_setMaximum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setMinimum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setOrientation)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setRange)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProgressBar_setValue)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setvalueChangedEvent)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProgressBar_getvalueChangedEvent)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QSpinBox_cleanText)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->cleanText().toStdString().c_str());
}


RING_FUNC(ring_QSpinBox_displayIntegerBase)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->displayIntegerBase());
}


RING_FUNC(ring_QSpinBox_maximum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->maximum());
}


RING_FUNC(ring_QSpinBox_minimum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->minimum());
}


RING_FUNC(ring_QSpinBox_prefix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->prefix().toStdString().c_str());
}


RING_FUNC(ring_QSpinBox_setDisplayIntegerBase)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisplayIntegerBase( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setMaximum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setMinimum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setPrefix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPrefix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSpinBox_setRange)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSpinBox_setSingleStep)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSingleStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setSuffix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSuffix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSpinBox_singleStep)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->singleStep());
}


RING_FUNC(ring_QSpinBox_suffix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->suffix().toStdString().c_str());
}


RING_FUNC(ring_QSpinBox_value)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QSpinBox_setValue)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setvalueChangedEvent)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSpinBox_getvalueChangedEvent)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QAbstractSlider_hasTracking)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->hasTracking());
}


RING_FUNC(ring_QAbstractSlider_invertedAppearance)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->invertedAppearance());
}


RING_FUNC(ring_QAbstractSlider_invertedControls)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->invertedControls());
}


RING_FUNC(ring_QAbstractSlider_isSliderDown)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->isSliderDown());
}


RING_FUNC(ring_QAbstractSlider_maximum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->maximum());
}


RING_FUNC(ring_QAbstractSlider_minimum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->minimum());
}


RING_FUNC(ring_QAbstractSlider_orientation)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QAbstractSlider_pageStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->pageStep());
}


RING_FUNC(ring_QAbstractSlider_setInvertedAppearance)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInvertedAppearance( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setInvertedControls)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInvertedControls( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setMaximum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximum( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setMinimum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimum( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setPageStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPageStep( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setSingleStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSingleStep( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setSliderDown)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSliderDown( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setSliderPosition)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSliderPosition( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setTracking)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTracking( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_singleStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->singleStep());
}


RING_FUNC(ring_QAbstractSlider_sliderPosition)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->sliderPosition());
}


RING_FUNC(ring_QAbstractSlider_triggerAction)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->triggerAction( (QAbstractSlider::SliderAction )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_value)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QAbstractSlider_setOrientation)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setRange)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QAbstractSlider_setValue)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValue( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSlider_setTickInterval)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTickInterval( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSlider_setTickPosition)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTickPosition( (QSlider::TickPosition )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSlider_tickInterval)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETNUMBER(pObject->tickInterval());
}


RING_FUNC(ring_QSlider_tickPosition)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETNUMBER(pObject->tickPosition());
}


RING_FUNC(ring_QSlider_minimumSizeHint)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QSlider_sizeHint)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QSlider_setactionTriggeredEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactionTriggeredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setrangeChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setrangeChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setsliderMovedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderMovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setsliderPressedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setsliderReleasedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderReleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setvalueChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_getactionTriggeredEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getactionTriggeredEvent());
}


RING_FUNC(ring_QSlider_getrangeChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getrangeChangedEvent());
}


RING_FUNC(ring_QSlider_getsliderMovedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getsliderMovedEvent());
}


RING_FUNC(ring_QSlider_getsliderPressedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getsliderPressedEvent());
}


RING_FUNC(ring_QSlider_getsliderReleasedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getsliderReleasedEvent());
}


RING_FUNC(ring_QSlider_getvalueChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QDateTimeEdit_calendarPopup)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->calendarPopup());
}


RING_FUNC(ring_QDateTimeEdit_calendarWidget)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETCPOINTER(pObject->calendarWidget(),"QCalendarWidget");
}


RING_FUNC(ring_QDateTimeEdit_clearMaximumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMaximumDate();
}


RING_FUNC(ring_QDateTimeEdit_clearMaximumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMaximumDateTime();
}


RING_FUNC(ring_QDateTimeEdit_clearMaximumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMaximumTime();
}


RING_FUNC(ring_QDateTimeEdit_clearMinimumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMinimumDate();
}


RING_FUNC(ring_QDateTimeEdit_clearMinimumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMinimumDateTime();
}


RING_FUNC(ring_QDateTimeEdit_clearMinimumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMinimumTime();
}


RING_FUNC(ring_QDateTimeEdit_currentSection)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->currentSection());
}


RING_FUNC(ring_QDateTimeEdit_currentSectionIndex)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->currentSectionIndex());
}


RING_FUNC(ring_QDateTimeEdit_date)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->date();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_dateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->dateTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_displayFormat)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETSTRING(pObject->displayFormat().toStdString().c_str());
}


RING_FUNC(ring_QDateTimeEdit_displayedSections)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->displayedSections());
}


RING_FUNC(ring_QDateTimeEdit_maximumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->maximumDate();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_maximumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->maximumDateTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_maximumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->maximumTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_minimumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->minimumDate();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_minimumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->minimumDateTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDateTime",ring_QDateTime_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_minimumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->minimumTime();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_sectionAt)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QDateTimeEdit_sectionCount)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->sectionCount());
}


RING_FUNC(ring_QDateTimeEdit_sectionText)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->sectionText( (QDateTimeEdit::Section )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDateTimeEdit_setCalendarPopup)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCalendarPopup( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setCalendarWidget)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCalendarWidget((QCalendarWidget *) RING_API_GETCPOINTER(2,"QCalendarWidget"));
}


RING_FUNC(ring_QDateTimeEdit_setCurrentSection)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentSection( (QDateTimeEdit::Section )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setCurrentSectionIndex)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentSectionIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setDateRange)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDateRange(* (QDate *) RING_API_GETCPOINTER(2,"QDate"),* (QDate *) RING_API_GETCPOINTER(3,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setDateTimeRange)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDateTimeRange(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"),* (QDateTime *) RING_API_GETCPOINTER(3,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setDisplayFormat)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisplayFormat(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDateTimeEdit_setMaximumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMaximumDate(* (QDate *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setMaximumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMaximumDateTime(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setMaximumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMaximumTime(* (QTime *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QDateTimeEdit_setMinimumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMinimumDate(* (QDate *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setMinimumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMinimumDateTime(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setMinimumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMinimumTime(* (QTime *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QDateTimeEdit_setSelectedSection)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectedSection( (QDateTimeEdit::Section )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setTimeRange)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setTimeRange(* (QTime *) RING_API_GETCPOINTER(2,"QTime"),* (QTime *) RING_API_GETCPOINTER(3,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTime"));
}


RING_FUNC(ring_QDateTimeEdit_setTimeSpec)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTimeSpec( (Qt::TimeSpec )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_time)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->time();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTime",ring_QTime_freefunc);
	}
}


RING_FUNC(ring_QDateTimeEdit_timeSpec)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->timeSpec());
}


RING_FUNC(ring_QDateTimeEdit_setDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDate(* (QDate *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDateTime(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setTime(* (QTime *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QAbstractSpinBox_alignment)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QAbstractSpinBox_buttonSymbols)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->buttonSymbols());
}


RING_FUNC(ring_QAbstractSpinBox_correctionMode)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->correctionMode());
}


RING_FUNC(ring_QAbstractSpinBox_hasAcceptableInput)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->hasAcceptableInput());
}


RING_FUNC(ring_QAbstractSpinBox_hasFrame)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->hasFrame());
}


RING_FUNC(ring_QAbstractSpinBox_interpretText)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->interpretText();
}


RING_FUNC(ring_QAbstractSpinBox_isAccelerated)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->isAccelerated());
}


RING_FUNC(ring_QAbstractSpinBox_isReadOnly)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QAbstractSpinBox_keyboardTracking)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->keyboardTracking());
}


RING_FUNC(ring_QAbstractSpinBox_setAccelerated)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccelerated( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setAlignment)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setButtonSymbols)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setButtonSymbols( (QAbstractSpinBox::ButtonSymbols )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setCorrectionMode)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCorrectionMode( (QAbstractSpinBox::CorrectionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setFrame)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrame( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setKeyboardTracking)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyboardTracking( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setReadOnly)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setSpecialValueText)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpecialValueText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSpinBox_setWrapping)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_specialValueText)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETSTRING(pObject->specialValueText().toStdString().c_str());
}


RING_FUNC(ring_QAbstractSpinBox_stepBy)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->stepBy( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_text)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QAbstractSpinBox_wrapping)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->wrapping());
}


RING_FUNC(ring_QAbstractSpinBox_clear)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->clear();
}


RING_FUNC(ring_QAbstractSpinBox_selectAll)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->selectAll();
}


RING_FUNC(ring_QAbstractSpinBox_stepDown)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->stepDown();
}


RING_FUNC(ring_QAbstractSpinBox_stepUp)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->stepUp();
}


RING_FUNC(ring_QDial_notchSize)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->notchSize());
}


RING_FUNC(ring_QDial_notchTarget)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->notchTarget());
}


RING_FUNC(ring_QDial_notchesVisible)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->notchesVisible());
}


RING_FUNC(ring_QDial_setNotchTarget)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNotchTarget( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDial_wrapping)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->wrapping());
}


RING_FUNC(ring_QDial_minimumSizeHint)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QDial_sizeHint)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QDial_setNotchesVisible)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNotchesVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDial_setWrapping)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDial_setactionTriggeredEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactionTriggeredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setrangeChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setrangeChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setsliderMovedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderMovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setsliderPressedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setsliderReleasedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderReleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setvalueChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_getactionTriggeredEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getactionTriggeredEvent());
}


RING_FUNC(ring_QDial_getrangeChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getrangeChangedEvent());
}


RING_FUNC(ring_QDial_getsliderMovedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getsliderMovedEvent());
}


RING_FUNC(ring_QDial_getsliderPressedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getsliderPressedEvent());
}


RING_FUNC(ring_QDial_getsliderReleasedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getsliderReleasedEvent());
}


RING_FUNC(ring_QDial_getvalueChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QCheckBox_checkState)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETNUMBER(pObject->checkState());
}


RING_FUNC(ring_QCheckBox_isTristate)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETNUMBER(pObject->isTristate());
}


RING_FUNC(ring_QCheckBox_setCheckState)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (Qt::CheckState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCheckBox_setTristate)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTristate( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCheckBox_minimumSizeHint)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QCheckBox_sizeHint)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QCheckBox_setstateChangedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setstateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_setclickedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_setpressedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_setreleasedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_settoggledEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settoggledEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_getstateChangedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getstateChangedEvent());
}


RING_FUNC(ring_QCheckBox_getclickedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QCheckBox_getpressedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QCheckBox_getreleasedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getreleasedEvent());
}


RING_FUNC(ring_QCheckBox_gettoggledEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->gettoggledEvent());
}


RING_FUNC(ring_QAbstractButton_autoExclusive)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoExclusive());
}


RING_FUNC(ring_QAbstractButton_autoRepeat)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoRepeat());
}


RING_FUNC(ring_QAbstractButton_autoRepeatDelay)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoRepeatDelay());
}


RING_FUNC(ring_QAbstractButton_autoRepeatInterval)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoRepeatInterval());
}


RING_FUNC(ring_QAbstractButton_group)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETCPOINTER(pObject->group(),"QButtonGroup");
}


RING_FUNC(ring_QAbstractButton_icon)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QAbstractButton_iconSize)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QAbstractButton_isCheckable)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->isCheckable());
}


RING_FUNC(ring_QAbstractButton_isChecked)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->isChecked());
}


RING_FUNC(ring_QAbstractButton_isDown)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->isDown());
}


RING_FUNC(ring_QAbstractButton_setAutoExclusive)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoExclusive( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setAutoRepeat)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeat( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setAutoRepeatDelay)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeatDelay( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setAutoRepeatInterval)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeatInterval( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setCheckable)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckable( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setDown)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDown( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setIcon)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QAbstractButton_setShortcut)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->setShortcut(* (QKeySequence *) RING_API_GETCPOINTER(2,"QKeySequence"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QKeySequence"));
}


RING_FUNC(ring_QAbstractButton_setText)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractButton_shortcut)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	{
		QKeySequence *pValue ; 
		pValue = new QKeySequence() ;
		*pValue = pObject->shortcut();
		RING_API_RETMANAGEDCPOINTER(pValue,"QKeySequence",ring_QKeySequence_freefunc);
	}
}


RING_FUNC(ring_QAbstractButton_text)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QAbstractButton_animateClick)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->animateClick( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_click)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->click();
}


RING_FUNC(ring_QAbstractButton_setChecked)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChecked( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setIconSize)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QAbstractButton_toggle)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->toggle();
}


RING_FUNC(ring_QRadioButton_minimumSizeHint)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QRadioButton_sizeHint)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QRadioButton_setclickedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_setpressedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_setreleasedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_settoggledEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settoggledEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_getclickedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QRadioButton_getpressedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QRadioButton_getreleasedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->getreleasedEvent());
}


RING_FUNC(ring_QRadioButton_gettoggledEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->gettoggledEvent());
}


RING_FUNC(ring_QButtonGroup_addButton)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QButtonGroup_button)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->button( (int ) RING_API_GETNUMBER(2)),"QAbstractButton");
}


RING_FUNC(ring_QButtonGroup_checkedButton)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETCPOINTER(pObject->checkedButton(),"QAbstractButton");
}


RING_FUNC(ring_QButtonGroup_checkedId)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETNUMBER(pObject->checkedId());
}


RING_FUNC(ring_QButtonGroup_exclusive)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETNUMBER(pObject->exclusive());
}


RING_FUNC(ring_QButtonGroup_id)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->id((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton")));
}


RING_FUNC(ring_QButtonGroup_removeButton)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"));
}


RING_FUNC(ring_QButtonGroup_setExclusive)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExclusive( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QButtonGroup_setId)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setId((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QButtonGroup_setbuttonClickedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbuttonClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QButtonGroup_setbuttonPressedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbuttonPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QButtonGroup_setbuttonReleasedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbuttonReleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QButtonGroup_getbuttonClickedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETSTRING(pObject->getbuttonClickedEvent());
}


RING_FUNC(ring_QButtonGroup_getbuttonPressedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETSTRING(pObject->getbuttonPressedEvent());
}


RING_FUNC(ring_QButtonGroup_getbuttonReleasedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETSTRING(pObject->getbuttonReleasedEvent());
}


RING_FUNC(ring_QAction_actionGroup)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETCPOINTER(pObject->actionGroup(),"QActionGroup");
}


RING_FUNC(ring_QAction_activate)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->activate( (QAction::ActionEvent )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_autoRepeat)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->autoRepeat());
}


RING_FUNC(ring_QAction_data)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data();
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QAction_font)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QAction_icon)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QAction_iconText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->iconText().toStdString().c_str());
}


RING_FUNC(ring_QAction_isCheckable)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isCheckable());
}


RING_FUNC(ring_QAction_isChecked)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isChecked());
}


RING_FUNC(ring_QAction_isEnabled)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isEnabled());
}


RING_FUNC(ring_QAction_isIconVisibleInMenu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isIconVisibleInMenu());
}


RING_FUNC(ring_QAction_isSeparator)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isSeparator());
}


RING_FUNC(ring_QAction_isVisible)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QAction_menu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETCPOINTER(pObject->menu(),"QMenu");
}


RING_FUNC(ring_QAction_menuRole)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->menuRole());
}


RING_FUNC(ring_QAction_parentWidget)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETCPOINTER(pObject->parentWidget(),"QWidget");
}


RING_FUNC(ring_QAction_priority)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->priority());
}


RING_FUNC(ring_QAction_setActionGroup)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActionGroup((QActionGroup *) RING_API_GETCPOINTER(2,"QActionGroup"));
}


RING_FUNC(ring_QAction_setAutoRepeat)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeat( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setCheckable)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckable( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setData)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setData(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QAction_setFont)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QAction_setIcon)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QAction_setIconText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setIconVisibleInMenu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconVisibleInMenu( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setMenu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QAction_setMenuRole)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuRole( (QAction::MenuRole )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setPriority)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPriority( (QAction::Priority )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setSeparator)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSeparator( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setShortcut)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setShortcut(* (QKeySequence *) RING_API_GETCPOINTER(2,"QKeySequence"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QKeySequence"));
}


RING_FUNC(ring_QAction_setShortcutContext)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcutContext( (Qt::ShortcutContext )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setShortcuts)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcuts( (QKeySequence::StandardKey )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setStatusTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setToolTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setWhatsThis)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_shortcut)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QKeySequence *pValue ; 
		pValue = new QKeySequence() ;
		*pValue = pObject->shortcut();
		RING_API_RETMANAGEDCPOINTER(pValue,"QKeySequence",ring_QKeySequence_freefunc);
	}
}


RING_FUNC(ring_QAction_shortcutContext)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->shortcutContext());
}


RING_FUNC(ring_QAction_showStatusText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->showStatusText((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QAction_statusTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QAction_text)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QAction_toolTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QAction_whatsThis)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QAction_hover)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->hover();
}


RING_FUNC(ring_QAction_setChecked)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChecked( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setDisabled)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setEnabled)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setVisible)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_toggle)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->toggle();
}


RING_FUNC(ring_QAction_trigger)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->trigger();
}


RING_FUNC(ring_QAction_setClickEvent)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_getClickEvent)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->getClickEvent());
}


RING_FUNC(ring_QMessageBox_addButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"), (QMessageBox::ButtonRole )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMessageBox_button)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->button( (QMessageBox::StandardButton )  (int) RING_API_GETNUMBER(2)),"QAbstractButton");
}


RING_FUNC(ring_QMessageBox_buttonRole)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->buttonRole((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton")));
}


RING_FUNC(ring_QMessageBox_clickedButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETCPOINTER(pObject->clickedButton(),"QAbstractButton");
}


RING_FUNC(ring_QMessageBox_defaultButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETCPOINTER(pObject->defaultButton(),"QPushButton");
}


RING_FUNC(ring_QMessageBox_detailedText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETSTRING(pObject->detailedText().toStdString().c_str());
}


RING_FUNC(ring_QMessageBox_escapeButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETCPOINTER(pObject->escapeButton(),"QAbstractButton");
}


RING_FUNC(ring_QMessageBox_iconPixmap)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->iconPixmap();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QMessageBox_informativeText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETSTRING(pObject->informativeText().toStdString().c_str());
}


RING_FUNC(ring_QMessageBox_open)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QMessageBox_removeButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"));
}


RING_FUNC(ring_QMessageBox_setDefaultButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultButton((QPushButton *) RING_API_GETCPOINTER(2,"QPushButton"));
}


RING_FUNC(ring_QMessageBox_setDetailedText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDetailedText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_setEscapeButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEscapeButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"));
}


RING_FUNC(ring_QMessageBox_setIcon)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIcon( (QMessageBox::Icon)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMessageBox_setIconPixmap)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	pObject->setIconPixmap(* (QPixmap *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QMessageBox_setInformativeText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInformativeText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_setStandardButtons)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardButtons( (QMessageBox::StandardButton )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMessageBox_setText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_setTextFormat)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextFormat( (Qt::TextFormat )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMessageBox_setWindowModality)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowModality( (Qt::WindowModality )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMessageBox_setWindowTitle)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_standardButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->standardButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton")));
}


RING_FUNC(ring_QMessageBox_standardButtons)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETNUMBER(pObject->standardButtons());
}


RING_FUNC(ring_QMessageBox_text)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QMessageBox_textFormat)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETNUMBER(pObject->textFormat());
}


RING_FUNC(ring_QMessageBox_exec)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QMessageBox_about)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->about((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QMessageBox_aboutQt)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->aboutQt((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QMessageBox_critical)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->critical((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QMessageBox_information)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->information((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QMessageBox_question)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->question((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int  ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QMessageBox_warning)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->warning((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QFileDialog_acceptMode)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->acceptMode());
}


RING_FUNC(ring_QFileDialog_defaultSuffix)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->defaultSuffix().toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_directory)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->directory();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDir",ring_QDir_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_directoryUrl)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->directoryUrl();
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_fileMode)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->fileMode());
}


RING_FUNC(ring_QFileDialog_filter)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->filter());
}


RING_FUNC(ring_QFileDialog_history)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->history();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_iconProvider)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETCPOINTER(pObject->iconProvider(),"QFileIconProvider");
}


RING_FUNC(ring_QFileDialog_itemDelegate)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETCPOINTER(pObject->itemDelegate(),"QAbstractItemDelegate");
}


RING_FUNC(ring_QFileDialog_labelText)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->labelText( (QFileDialog::DialogLabel )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_mimeTypeFilters)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->mimeTypeFilters();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_nameFilters)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->nameFilters();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_open)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFileDialog_options)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QFileDialog_proxyModel)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETCPOINTER(pObject->proxyModel(),"QAbstractProxyModel");
}


RING_FUNC(ring_QFileDialog_restoreState)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QFileDialog_saveState)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_selectFile)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectFile(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_selectMimeTypeFilter)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectMimeTypeFilter(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_selectNameFilter)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectNameFilter(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_selectUrl)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->selectUrl(* (QUrl  *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QUrl"));
}


RING_FUNC(ring_QFileDialog_selectedFiles)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->selectedFiles();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_selectedNameFilter)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->selectedNameFilter().toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_selectedUrls)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QList<QUrl> *pValue ; 
		pValue = (QList<QUrl> *) RING_API_MALLOC(sizeof(QList<QUrl>)) ;
		*pValue = pObject->selectedUrls();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QUrl>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QFileDialog_setAcceptMode)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAcceptMode( (QFileDialog::AcceptMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setDefaultSuffix)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultSuffix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setDirectory)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDirectory(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setDirectory_2)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setDirectory(* (QDir  *) RING_API_GETCPOINTER(2,"QDir"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDir"));
}


RING_FUNC(ring_QFileDialog_setDirectoryUrl)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setDirectoryUrl(* (QUrl  *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QUrl"));
}


RING_FUNC(ring_QFileDialog_setFileMode)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFileMode( (QFileDialog::FileMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setFilter)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilter( (QDir::Filters )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setHistory)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setHistory(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QFileDialog_setIconProvider)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconProvider((QFileIconProvider *) RING_API_GETCPOINTER(2,"QFileIconProvider"));
}


RING_FUNC(ring_QFileDialog_setItemDelegate)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegate((QAbstractItemDelegate *) RING_API_GETCPOINTER(2,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QFileDialog_setLabelText)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLabelText( (QFileDialog::DialogLabel )  (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFileDialog_setMimeTypeFilters)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setMimeTypeFilters(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QFileDialog_setNameFilter)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNameFilter(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setNameFilters)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setNameFilters(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QFileDialog_setOption)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QFileDialog::Option )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFileDialog_setOptions)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QFileDialog::Options )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setProxyModel)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setProxyModel((QAbstractProxyModel *) RING_API_GETCPOINTER(2,"QAbstractProxyModel"));
}


RING_FUNC(ring_QFileDialog_setSidebarUrls)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setSidebarUrls(* (QList<QUrl>  *) RING_API_GETCPOINTER(2,"QList<QUrl>"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QList<QUrl>"));
}


RING_FUNC(ring_QFileDialog_setViewMode)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewMode( (QFileDialog::ViewMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_sidebarUrls)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QList<QUrl> *pValue ; 
		pValue = (QList<QUrl> *) RING_API_MALLOC(sizeof(QList<QUrl>)) ;
		*pValue = pObject->sidebarUrls();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QUrl>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QFileDialog_testOption)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QFileDialog::Option )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFileDialog_viewMode)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->viewMode());
}


RING_FUNC(ring_QFileDialog_getExistingDirectory)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getExistingDirectory((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (QFileDialog::Options )  (int) RING_API_GETNUMBER(5)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getExistingDirectoryUrl)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->getExistingDirectoryUrl((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),* (QUrl  *) RING_API_GETCPOINTER(4,"QUrl"), (QFileDialog::Options )  (int) RING_API_GETNUMBER(5),* (QStringList  *) RING_API_GETCPOINTER(6,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QStringList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_getOpenFileName)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getOpenFileName((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4),RING_API_GETSTRING(5)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getOpenFileName_2)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getOpenFileName((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Options )  (int) RING_API_GETNUMBER(7)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getOpenFileNames)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->getOpenFileNames((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Options )  (int) RING_API_GETNUMBER(7));
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_getOpenFileUrl)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->getOpenFileUrl((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),* (QUrl  *) RING_API_GETCPOINTER(4,"QUrl"),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Options )  (int) RING_API_GETNUMBER(7),* (QStringList  *) RING_API_GETCPOINTER(8,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		RING_API_FREE(RING_API_GETCPOINTER(8,"QStringList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_getOpenFileUrls)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QUrl> *pValue ; 
		pValue = (QList<QUrl> *) RING_API_MALLOC(sizeof(QList<QUrl>)) ;
		*pValue = pObject->getOpenFileUrls((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),* (QUrl  *) RING_API_GETCPOINTER(4,"QUrl"),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Options )  (int) RING_API_GETNUMBER(7),* (QStringList  *) RING_API_GETCPOINTER(8,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		RING_API_FREE(RING_API_GETCPOINTER(8,"QStringList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QUrl>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QFileDialog_getSaveFileName)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getSaveFileName((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4),RING_API_GETSTRING(5)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getSaveFileName_2)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getSaveFileName((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Options )  (int) RING_API_GETNUMBER(7)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getSaveFileUrl)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->getSaveFileUrl((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),* (QUrl  *) RING_API_GETCPOINTER(4,"QUrl"),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Options )  (int) RING_API_GETNUMBER(7),* (QStringList  *) RING_API_GETCPOINTER(8,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		RING_API_FREE(RING_API_GETCPOINTER(8,"QStringList"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QFileDialog_setcurrentChangedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setcurrentUrlChangedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentUrlChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setdirectoryEnteredEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdirectoryEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setdirectoryUrlEnteredEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdirectoryUrlEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setfileSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfileSelectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setfilesSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfilesSelectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setfilterSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfilterSelectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_seturlSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seturlSelectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_seturlsSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seturlsSelectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_getcurrentChangedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->getcurrentChangedEvent());
}


RING_FUNC(ring_QFileDialog_getcurrentUrlChangedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->getcurrentUrlChangedEvent());
}


RING_FUNC(ring_QFileDialog_getdirectoryEnteredEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->getdirectoryEnteredEvent());
}


RING_FUNC(ring_QFileDialog_getdirectoryUrlEnteredEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->getdirectoryUrlEnteredEvent());
}


RING_FUNC(ring_QFileDialog_getfileSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->getfileSelectedEvent());
}


RING_FUNC(ring_QFileDialog_getfilesSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->getfilesSelectedEvent());
}


RING_FUNC(ring_QFileDialog_getfilterSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->getfilterSelectedEvent());
}


RING_FUNC(ring_QFileDialog_geturlSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->geturlSelectedEvent());
}


RING_FUNC(ring_QFileDialog_geturlsSelectedEvent)
{
	GFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->geturlsSelectedEvent());
}


RING_FUNC(ring_QDirModel_fileIcon)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->fileIcon(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QDirModel_fileInfo)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	{
		QFileInfo *pValue ; 
		pValue = new QFileInfo() ;
		*pValue = pObject->fileInfo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFileInfo",ring_QFileInfo_freefunc);
	}
}


RING_FUNC(ring_QDirModel_fileName)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETSTRING(pObject->fileName(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_filePath)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETSTRING(pObject->filePath(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_filter)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->filter());
}


RING_FUNC(ring_QDirModel_iconProvider)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETCPOINTER(pObject->iconProvider(),"QFileIconProvider");
}


RING_FUNC(ring_QDirModel_index)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->index(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QDirModel_isDir)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->isDir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_isReadOnly)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QDirModel_lazyChildCount)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->lazyChildCount());
}


RING_FUNC(ring_QDirModel_mkdir)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->mkdir(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QDirModel_nameFilters)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->nameFilters();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QDirModel_remove)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->remove(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_resolveSymlinks)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->resolveSymlinks());
}


RING_FUNC(ring_QDirModel_rmdir)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->rmdir(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_setFilter)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilter( (QDir::Filter )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setIconProvider)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconProvider((QFileIconProvider *) RING_API_GETCPOINTER(2,"QFileIconProvider"));
}


RING_FUNC(ring_QDirModel_setLazyChildCount)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLazyChildCount( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setNameFilters)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	pObject->setNameFilters(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QDirModel_setReadOnly)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setResolveSymlinks)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResolveSymlinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setSorting)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSorting( (QDir::SortFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_sorting)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->sorting());
}


RING_FUNC(ring_QDirModel_refresh)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	pObject->refresh(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QFontDialog_currentFont)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->currentFont();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QFontDialog_open)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFontDialog_options)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QFontDialog_selectedFont)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->selectedFont();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QFontDialog_setCurrentFont)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	pObject->setCurrentFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QFontDialog_setOption)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QFontDialog::FontDialogOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFontDialog_setOptions)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QFontDialog::FontDialogOptions )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFontDialog_testOption)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QFontDialog::FontDialogOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFontDialog_getFont_2)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->getFont((bool *) RING_API_GETCPOINTER(2,"bool"),* (QFont  *) RING_API_GETCPOINTER(3,"QFont"),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"),RING_API_GETSTRING(5), (QFontDialog::FontDialogOptions )  (int) RING_API_GETNUMBER(6));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QFont"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QFontDialog_getFont_3)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->getFont((bool *) RING_API_GETCPOINTER(2,"bool"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QFontDialog_setcurrentFontChangedEvent)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentFontChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFontDialog_setfontSelectedEvent)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfontSelectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFontDialog_getcurrentFontChangedEvent)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	RING_API_RETSTRING(pObject->getcurrentFontChangedEvent());
}


RING_FUNC(ring_QFontDialog_getfontSelectedEvent)
{
	GFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	RING_API_RETSTRING(pObject->getfontSelectedEvent());
}


RING_FUNC(ring_QFontDialog_getfont)
{
	List *pList;
	pList = RING_API_NEWLIST ;
	bool lok ;
	QFont pFont ;
	QFont pValue = QFontDialog::getFont(&lok,pFont,NULL);		
	if (lok) {
		ring_list_addstring(pList,pValue.toString().toStdString().c_str());
		ring_list_adddouble(pList,pValue.pointSize());
	}
	else {
		ring_list_addstring(pList,"");
		ring_list_adddouble(pList,10);
	}
	RING_API_RETLIST(pList);
}


RING_FUNC(ring_QDialog_isSizeGripEnabled)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	RING_API_RETNUMBER(pObject->isSizeGripEnabled());
}


RING_FUNC(ring_QDialog_result)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	RING_API_RETNUMBER(pObject->result());
}


RING_FUNC(ring_QDialog_setModal)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModal( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_setResult)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResult( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_setSizeGripEnabled)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeGripEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_accept)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	pObject->accept();
}


RING_FUNC(ring_QDialog_done)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->done( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_exec)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QDialog_open)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	pObject->open();
}


RING_FUNC(ring_QDialog_reject)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	pObject->reject();
}


RING_FUNC(ring_QColorDialog_currentColor)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->currentColor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColorDialog_open)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QColorDialog_options)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QColorDialog_selectedColor)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->selectedColor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColorDialog_setCurrentColor)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	pObject->setCurrentColor(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QColorDialog_setOption)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QColorDialog::ColorDialogOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QColorDialog_setOptions)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QColorDialog::ColorDialogOptions )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColorDialog_testOption)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QColorDialog::ColorDialogOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QColorDialog_customColor)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->customColor( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColorDialog_customCount)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	RING_API_RETNUMBER(pObject->customCount());
}


RING_FUNC(ring_QColorDialog_getColor_2)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->getColor(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"),RING_API_GETSTRING(4), (QColorDialog::ColorDialogOptions )  (int) RING_API_GETNUMBER(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColorDialog_setCustomColor)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCustomColor( (int ) RING_API_GETNUMBER(2),* (QColor  *) RING_API_GETCPOINTER(3,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QColor"));
}


RING_FUNC(ring_QColorDialog_setStandardColor)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardColor( (int ) RING_API_GETNUMBER(2),* (QColor  *) RING_API_GETCPOINTER(3,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QColor"));
}


RING_FUNC(ring_QColorDialog_standardColor)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->standardColor( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QColorDialog_setcolorSelectedEvent)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcolorSelectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QColorDialog_setcurrentColorChangedEvent)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentColorChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QColorDialog_getcolorSelectedEvent)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	RING_API_RETSTRING(pObject->getcolorSelectedEvent());
}


RING_FUNC(ring_QColorDialog_getcurrentColorChangedEvent)
{
	GColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	RING_API_RETSTRING(pObject->getcurrentColorChangedEvent());
}


RING_FUNC(ring_QColorDialog_getcolor)
{
	List *pList;
	pList = RING_API_NEWLIST ;
	QColor pValue = QColorDialog::getColor();		
	ring_list_adddouble(pList,pValue.red());
	ring_list_adddouble(pList,pValue.green());
	ring_list_adddouble(pList,pValue.blue());
	RING_API_RETLIST(pList);
}


RING_FUNC(ring_QLCDNumber_checkOverflow)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->checkOverflow( (double ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QLCDNumber_digitCount)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->digitCount());
}


RING_FUNC(ring_QLCDNumber_intValue)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->intValue());
}


RING_FUNC(ring_QLCDNumber_mode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->mode());
}


RING_FUNC(ring_QLCDNumber_segmentStyle)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->segmentStyle());
}


RING_FUNC(ring_QLCDNumber_setDigitCount)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDigitCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_setMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMode( (QLCDNumber::Mode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_setSegmentStyle)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSegmentStyle( (QLCDNumber::SegmentStyle)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_smallDecimalPoint)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->smallDecimalPoint());
}


RING_FUNC(ring_QLCDNumber_value)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QLCDNumber_display)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->display( (double) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_setBinMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setBinMode();
}


RING_FUNC(ring_QLCDNumber_setDecMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setDecMode();
}


RING_FUNC(ring_QLCDNumber_setHexMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setHexMode();
}


RING_FUNC(ring_QLCDNumber_setOctMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setOctMode();
}


RING_FUNC(ring_QLCDNumber_setSmallDecimalPoint)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSmallDecimalPoint( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_cancelButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->cancelButtonText().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_comboBoxItems)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->comboBoxItems();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QInputDialog_doubleDecimals)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleDecimals());
}


RING_FUNC(ring_QInputDialog_doubleMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleMaximum());
}


RING_FUNC(ring_QInputDialog_doubleMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleMinimum());
}


RING_FUNC(ring_QInputDialog_doubleValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleValue());
}


RING_FUNC(ring_QInputDialog_inputMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->inputMode());
}


RING_FUNC(ring_QInputDialog_intMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intMaximum());
}


RING_FUNC(ring_QInputDialog_intMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intMinimum());
}


RING_FUNC(ring_QInputDialog_intStep)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intStep());
}


RING_FUNC(ring_QInputDialog_intValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intValue());
}


RING_FUNC(ring_QInputDialog_isComboBoxEditable)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->isComboBoxEditable());
}


RING_FUNC(ring_QInputDialog_labelText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->labelText().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_okButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->okButtonText().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_open)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QInputDialog_options)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QInputDialog_setCancelButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCancelButtonText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_setComboBoxEditable)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setComboBoxEditable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setComboBoxItems)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	pObject->setComboBoxItems(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QInputDialog_setDoubleDecimals)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleDecimals( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setDoubleMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleMaximum( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setDoubleMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleMinimum( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setDoubleRange)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleRange( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QInputDialog_setDoubleValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleValue( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setInputMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputMode( (QInputDialog::InputMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntMaximum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntMinimum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntRange)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QInputDialog_setIntStep)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntValue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setLabelText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLabelText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_setOkButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOkButtonText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_setOption)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QInputDialog::InputDialogOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QInputDialog_setOptions)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QInputDialog::InputDialogOption )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setTextEchoMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextEchoMode( (QLineEdit::EchoMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setTextValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextValue(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_testOption)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QInputDialog::InputDialogOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QInputDialog_textEchoMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->textEchoMode());
}


RING_FUNC(ring_QInputDialog_textValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->textValue().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_getDouble)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 10 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->getDouble((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (double ) RING_API_GETNUMBER(5), (double ) RING_API_GETNUMBER(6), (double ) RING_API_GETNUMBER(7), (int ) RING_API_GETNUMBER(8),(bool *) RING_API_GETCPOINTER(9,"bool"), (Qt::WindowType )  (int) RING_API_GETNUMBER(10)));
}


RING_FUNC(ring_QInputDialog_getInt)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 10 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->getInt((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7), (int ) RING_API_GETNUMBER(8),(bool *) RING_API_GETCPOINTER(9,"bool"), (Qt::WindowType )  (int) RING_API_GETNUMBER(10)));
}


RING_FUNC(ring_QAllEvents_accept)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	pObject->accept();
}


RING_FUNC(ring_QAllEvents_ignore)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	pObject->ignore();
}


RING_FUNC(ring_QAllEvents_getKeyCode)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getKeyCode());
}


RING_FUNC(ring_QAllEvents_getKeyText)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyText().toStdString().c_str());
}


RING_FUNC(ring_QAllEvents_getModifiers)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getModifiers());
}


RING_FUNC(ring_QAllEvents_getx)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getx());
}


RING_FUNC(ring_QAllEvents_gety)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->gety());
}


RING_FUNC(ring_QAllEvents_getglobalx)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getglobalx());
}


RING_FUNC(ring_QAllEvents_getglobaly)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getglobaly());
}


RING_FUNC(ring_QAllEvents_getbutton)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getbutton());
}


RING_FUNC(ring_QAllEvents_getbuttons)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getbuttons());
}


RING_FUNC(ring_QAllEvents_setKeyPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyPressEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonPressEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonReleaseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonDblClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setCloseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCloseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setContextMenuEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenuEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnterEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragLeaveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDropEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDropEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnterEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusInEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusInEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusOutEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusOutEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setKeyReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyReleaseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLeaveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonDblClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonPressEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonReleaseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setResizeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowActivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowActivateEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowBlockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowBlockedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowDeactivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowDeactivateEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowStateChangeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowStateChangeEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowUnblockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowUnblockedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setPaintEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPaintEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setChildAddedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildAddedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setChildPolishedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildPolishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setChildRemovedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildRemovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_getKeyPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyPressEvent());
}


RING_FUNC(ring_QAllEvents_getMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonPressEvent());
}


RING_FUNC(ring_QAllEvents_getMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonReleaseEvent());
}


RING_FUNC(ring_QAllEvents_getMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonDblClickEvent());
}


RING_FUNC(ring_QAllEvents_getMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseMoveEvent());
}


RING_FUNC(ring_QAllEvents_getCloseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getCloseEvent());
}


RING_FUNC(ring_QAllEvents_getContextMenuEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getContextMenuEvent());
}


RING_FUNC(ring_QAllEvents_getDragEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragEnterEvent());
}


RING_FUNC(ring_QAllEvents_getDragLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragLeaveEvent());
}


RING_FUNC(ring_QAllEvents_getDragMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragMoveEvent());
}


RING_FUNC(ring_QAllEvents_getDropEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDropEvent());
}


RING_FUNC(ring_QAllEvents_getEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getEnterEvent());
}


RING_FUNC(ring_QAllEvents_getFocusInEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusInEvent());
}


RING_FUNC(ring_QAllEvents_getFocusOutEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusOutEvent());
}


RING_FUNC(ring_QAllEvents_getKeyReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyReleaseEvent());
}


RING_FUNC(ring_QAllEvents_getLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getLeaveEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonDblClickEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonPressEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonReleaseEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseMoveEvent());
}


RING_FUNC(ring_QAllEvents_getMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMoveEvent());
}


RING_FUNC(ring_QAllEvents_getResizeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getResizeEvent());
}


RING_FUNC(ring_QAllEvents_getWindowActivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowActivateEvent());
}


RING_FUNC(ring_QAllEvents_getWindowBlockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowBlockedEvent());
}


RING_FUNC(ring_QAllEvents_getWindowDeactivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowDeactivateEvent());
}


RING_FUNC(ring_QAllEvents_getWindowStateChangeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowStateChangeEvent());
}


RING_FUNC(ring_QAllEvents_getWindowUnblockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowUnblockedEvent());
}


RING_FUNC(ring_QAllEvents_getPaintEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getPaintEvent());
}


RING_FUNC(ring_QAllEvents_getChildAddedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getChildAddedEvent());
}


RING_FUNC(ring_QAllEvents_getChildPolishedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getChildPolishedEvent());
}


RING_FUNC(ring_QAllEvents_getChildRemovedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getChildRemovedEvent());
}


RING_FUNC(ring_QAllEvents_setEventOutput)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEventOutput( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAllEvents_getParentObject)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getParentObject(),"QObject");
}


RING_FUNC(ring_QAllEvents_getParentWidget)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getParentWidget(),"QWidget");
}


RING_FUNC(ring_QAllEvents_setKeyPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyPressFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonPressFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonReleaseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonDblClickFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setCloseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCloseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setContextMenuFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenuFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnterFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragLeaveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDropFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDropFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnterFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusInFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusInFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusOutFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusOutFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setKeyReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyReleaseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLeaveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonDblClickFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonPressFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonReleaseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setResizeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowActivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowActivateFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowBlockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowBlockedFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowDeactivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowDeactivateFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowStateChangeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowStateChangeFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowUnblockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowUnblockedFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setPaintFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPaintFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setChildAddedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildAddedFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setChildPolishedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildPolishedFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setChildRemovedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildRemovedFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_getKeyPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyPressFunc());
}


RING_FUNC(ring_QAllEvents_getMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonPressFunc());
}


RING_FUNC(ring_QAllEvents_getMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonReleaseFunc());
}


RING_FUNC(ring_QAllEvents_getMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonDblClickFunc());
}


RING_FUNC(ring_QAllEvents_getMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseMoveFunc());
}


RING_FUNC(ring_QAllEvents_getCloseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getCloseFunc());
}


RING_FUNC(ring_QAllEvents_getContextMenuFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getContextMenuFunc());
}


RING_FUNC(ring_QAllEvents_getDragEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragEnterFunc());
}


RING_FUNC(ring_QAllEvents_getDragLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragLeaveFunc());
}


RING_FUNC(ring_QAllEvents_getDragMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragMoveFunc());
}


RING_FUNC(ring_QAllEvents_getDropFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDropFunc());
}


RING_FUNC(ring_QAllEvents_getEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getEnterFunc());
}


RING_FUNC(ring_QAllEvents_getFocusInFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusInFunc());
}


RING_FUNC(ring_QAllEvents_getFocusOutFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusOutFunc());
}


RING_FUNC(ring_QAllEvents_getKeyReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyReleaseFunc());
}


RING_FUNC(ring_QAllEvents_getLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getLeaveFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonDblClickFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonPressFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonReleaseFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseMoveFunc());
}


RING_FUNC(ring_QAllEvents_getMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMoveFunc());
}


RING_FUNC(ring_QAllEvents_getResizeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getResizeFunc());
}


RING_FUNC(ring_QAllEvents_getWindowActivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowActivateFunc());
}


RING_FUNC(ring_QAllEvents_getWindowBlockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowBlockedFunc());
}


RING_FUNC(ring_QAllEvents_getWindowDeactivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowDeactivateFunc());
}


RING_FUNC(ring_QAllEvents_getWindowStateChangeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowStateChangeFunc());
}


RING_FUNC(ring_QAllEvents_getWindowUnblockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowUnblockedFunc());
}


RING_FUNC(ring_QAllEvents_getPaintFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getPaintFunc());
}


RING_FUNC(ring_QAllEvents_getChildAddedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getChildAddedFunc());
}


RING_FUNC(ring_QAllEvents_getChildPolishedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getChildPolishedFunc());
}


RING_FUNC(ring_QAllEvents_getChildRemovedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getChildRemovedFunc());
}


RING_FUNC(ring_QAllEvents_getDropEventObject)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getDropEventObject(),"QDropEvent");
}


RING_FUNC(ring_QAllEvents_getDragMoveEventObject)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getDragMoveEventObject(),"QDragMoveEvent");
}


RING_FUNC(ring_QAllEvents_getDragEnterEventObject)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getDragEnterEventObject(),"QDragEnterEvent");
}


RING_FUNC(ring_QAllEvents_getDragLeaveEventObject)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getDragLeaveEventObject(),"QDragLeaveEvent");
}


RING_FUNC(ring_QAllEvents_getChildEventObject)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getChildEventObject(),"QChildEvent");
}


RING_FUNC(ring_QDesktopWidget_isVirtualDesktop)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	RING_API_RETNUMBER(pObject->isVirtualDesktop());
}


RING_FUNC(ring_QDesktopWidget_primaryScreen)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	RING_API_RETNUMBER(pObject->primaryScreen());
}


RING_FUNC(ring_QDesktopWidget_screenCount)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	RING_API_RETNUMBER(pObject->screenCount());
}


RING_FUNC(ring_QDesktopWidget_availableGeometry)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->availableGeometry((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QDesktopWidget_screen)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	RING_API_RETCPOINTER(pObject->screen(),"QScreen");
}


RING_FUNC(ring_QDesktopWidget_screenGeometry)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->screenGeometry((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QDesktopWidget_screenNumber)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->screenNumber((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QListWidgetItem_background)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QListWidgetItem_checkState)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->checkState());
}


RING_FUNC(ring_QListWidgetItem_flags)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QListWidgetItem_font)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QListWidgetItem_foreground)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foreground();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QListWidgetItem_icon)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QListWidgetItem_isHidden)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QListWidgetItem_isSelected)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->isSelected());
}


RING_FUNC(ring_QListWidgetItem_listWidget)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETCPOINTER(pObject->listWidget(),"QListWidget");
}


RING_FUNC(ring_QListWidgetItem_setBackground)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setBackground(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QListWidgetItem_setCheckState)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (Qt::CheckState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setFlags)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::ItemFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setFont)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QListWidgetItem_setForeground)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setForeground(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QListWidgetItem_setHidden)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setIcon)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setIcon(* (QIcon  *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QListWidgetItem_setSelected)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelected( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setSizeHint)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setSizeHint(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QListWidgetItem_setStatusTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_setText)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_setTextAlignment)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextAlignment( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setToolTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_setWhatsThis)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_sizeHint)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QListWidgetItem_statusTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QListWidgetItem_text)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QListWidgetItem_textAlignment)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->textAlignment());
}


RING_FUNC(ring_QListWidgetItem_toolTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QListWidgetItem_type)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QListWidgetItem_whatsThis)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QSystemTrayIcon_contextMenu)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETCPOINTER(pObject->contextMenu(),"QMenu");
}


RING_FUNC(ring_QSystemTrayIcon_geometry)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QSystemTrayIcon_icon)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QSystemTrayIcon_isVisible)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QSystemTrayIcon_setContextMenu)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QSystemTrayIcon_setIcon)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QSystemTrayIcon_setToolTip)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSystemTrayIcon_toolTip)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QSystemTrayIcon_hide)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	pObject->hide();
}


RING_FUNC(ring_QSystemTrayIcon_setVisible)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSystemTrayIcon_show)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	pObject->show();
}


RING_FUNC(ring_QSystemTrayIcon_showMessage)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showMessage(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (QSystemTrayIcon::MessageIcon)  (int) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QSystemTrayIcon_isSystemTrayAvailable)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETNUMBER(pObject->isSystemTrayAvailable());
}


RING_FUNC(ring_QSystemTrayIcon_supportsMessages)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETNUMBER(pObject->supportsMessages());
}


RING_FUNC(ring_RingCodeHighlighter_setColors)
{
	Highlighter *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (Highlighter *) RING_API_GETCPOINTER(1,"RingCodeHighlighter");
	pObject->setColors(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"),* (QColor  *) RING_API_GETCPOINTER(3,"QColor"),* (QColor  *) RING_API_GETCPOINTER(4,"QColor"),* (QColor  *) RING_API_GETCPOINTER(5,"QColor"),* (QColor  *) RING_API_GETCPOINTER(6,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QColor"));
}


RING_FUNC(ring_RingCodeHighlighter_setKeywordsBold)
{
	Highlighter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (Highlighter *) RING_API_GETCPOINTER(1,"RingCodeHighlighter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeywordsBold( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setTabStopWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabStopWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_tabStopWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->tabStopWidth());
}


RING_FUNC(ring_QPlainTextEdit_setTabStopDistance)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabStopDistance( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_tabStopDistance)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->tabStopDistance());
}


RING_FUNC(ring_QPlainTextEdit_anchorAt)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->anchorAt(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QPlainTextEdit_backgroundVisible)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->backgroundVisible());
}


RING_FUNC(ring_QPlainTextEdit_blockCount)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->blockCount());
}


RING_FUNC(ring_QPlainTextEdit_canPaste)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->canPaste());
}


RING_FUNC(ring_QPlainTextEdit_centerOnScroll)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->centerOnScroll());
}


RING_FUNC(ring_QPlainTextEdit_createStandardContextMenu)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETCPOINTER(pObject->createStandardContextMenu(),"QMenu");
}


RING_FUNC(ring_QPlainTextEdit_currentCharFormat)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->currentCharFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorForPosition)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->cursorForPosition(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCursor",ring_QTextCursor_freefunc);
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorRect)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cursorRect(* (QTextCursor  *) RING_API_GETCPOINTER(2,"QTextCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCursor"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorRect_2)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cursorRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->cursorWidth());
}


RING_FUNC(ring_QPlainTextEdit_document)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QPlainTextEdit_documentTitle)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->documentTitle().toStdString().c_str());
}


RING_FUNC(ring_QPlainTextEdit_ensureCursorVisible)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->ensureCursorVisible();
}


RING_FUNC(ring_QPlainTextEdit_extraSelections)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QList<QTextEdit::ExtraSelection> *pValue ; 
		pValue = (QList<QTextEdit::ExtraSelection> *) RING_API_MALLOC(sizeof(QList<QTextEdit::ExtraSelection>)) ;
		*pValue = pObject->extraSelections();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QTextEdit::ExtraSelection>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPlainTextEdit_find)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->find(RING_API_GETSTRING(2),* (QTextDocument::FindFlags  *) RING_API_GETCPOINTER(3,"QTextDocument::FindFlags")));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTextDocument::FindFlags"));
}


RING_FUNC(ring_QPlainTextEdit_isReadOnly)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QPlainTextEdit_isUndoRedoEnabled)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->isUndoRedoEnabled());
}


RING_FUNC(ring_QPlainTextEdit_lineWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->lineWrapMode());
}


RING_FUNC(ring_QPlainTextEdit_maximumBlockCount)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->maximumBlockCount());
}


RING_FUNC(ring_QPlainTextEdit_mergeCurrentCharFormat)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->mergeCurrentCharFormat(* (QTextCharFormat  *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QPlainTextEdit_moveCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveCursor( (QTextCursor::MoveOperation )  (int) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPlainTextEdit_overwriteMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->overwriteMode());
}


RING_FUNC(ring_QPlainTextEdit_print)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->print((QPagedPaintDevice *) RING_API_GETCPOINTER(2,"QPagedPaintDevice"));
}


RING_FUNC(ring_QPlainTextEdit_setBackgroundVisible)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackgroundVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setCenterOnScroll)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCenterOnScroll( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setCurrentCharFormat)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setCurrentCharFormat(* (QTextCharFormat  *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QPlainTextEdit_setCursorWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setDocument)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocument((QTextDocument *) RING_API_GETCPOINTER(2,"QTextDocument"));
}


RING_FUNC(ring_QPlainTextEdit_setDocumentTitle)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setExtraSelections)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setExtraSelections(* (QList<QTextEdit::ExtraSelection>  *) RING_API_GETCPOINTER(2,"QList<QTextEdit::ExtraSelection>"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QList<QTextEdit::ExtraSelection>"));
}


RING_FUNC(ring_QPlainTextEdit_setLineWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWrapMode( (QPlainTextEdit::LineWrapMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setMaximumBlockCount)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumBlockCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setOverwriteMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOverwriteMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setReadOnly)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setTabChangesFocus)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabChangesFocus( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setTextCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setTextCursor(* (QTextCursor  *) RING_API_GETCPOINTER(2,"QTextCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCursor"));
}


RING_FUNC(ring_QPlainTextEdit_setTextInteractionFlags)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setTextInteractionFlags(* (Qt::TextInteractionFlags  *) RING_API_GETCPOINTER(2,"Qt::TextInteractionFlags"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::TextInteractionFlags"));
}


RING_FUNC(ring_QPlainTextEdit_setUndoRedoEnabled)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUndoRedoEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setWordWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrapMode( (QTextOption::WrapMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_tabChangesFocus)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->tabChangesFocus());
}


RING_FUNC(ring_QPlainTextEdit_textCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->textCursor();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCursor",ring_QTextCursor_freefunc);
	}
}


RING_FUNC(ring_QPlainTextEdit_textInteractionFlags)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		Qt::TextInteractionFlags *pValue ; 
		pValue = (Qt::TextInteractionFlags *) RING_API_MALLOC(sizeof(Qt::TextInteractionFlags)) ;
		*pValue = pObject->textInteractionFlags();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::TextInteractionFlags",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QPlainTextEdit_toPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->toPlainText().toStdString().c_str());
}


RING_FUNC(ring_QPlainTextEdit_wordWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->wordWrapMode());
}


RING_FUNC(ring_QPlainTextEdit_appendHtml)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->appendHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_appendPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->appendPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_centerCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->centerCursor();
}


RING_FUNC(ring_QPlainTextEdit_clear)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->clear();
}


RING_FUNC(ring_QPlainTextEdit_copy)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->copy();
}


RING_FUNC(ring_QPlainTextEdit_cut)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->cut();
}


RING_FUNC(ring_QPlainTextEdit_insertPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_paste)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->paste();
}


RING_FUNC(ring_QPlainTextEdit_redo)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->redo();
}


RING_FUNC(ring_QPlainTextEdit_selectAll)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->selectAll();
}


RING_FUNC(ring_QPlainTextEdit_setPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_undo)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->undo();
}


RING_FUNC(ring_QPlainTextEdit_zoomIn)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomIn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_zoomOut)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomOut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setblockCountChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setblockCountChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setcopyAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcopyAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setcursorPositionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcursorPositionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setmodificationChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmodificationChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setredoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setredoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setselectionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_settextChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setundoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setundoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setupdateRequestEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setupdateRequestEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_getblockCountChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getblockCountChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getcopyAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getcopyAvailableEvent());
}


RING_FUNC(ring_QPlainTextEdit_getcursorPositionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getcursorPositionChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getmodificationChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getmodificationChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getredoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getredoAvailableEvent());
}


RING_FUNC(ring_QPlainTextEdit_getselectionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_gettextChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->gettextChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getundoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getundoAvailableEvent());
}


RING_FUNC(ring_QPlainTextEdit_getupdateRequestEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getupdateRequestEvent());
}

RING_FUNC(ring_QPlainTextEdit_cyanline)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QPlainTextEdit *editor;
	editor = (QPlainTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( Qt::cyan );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}
RING_FUNC(ring_QPlainTextEdit_setactivelinecolor)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QPlainTextEdit *editor;
	editor = (QPlainTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( * (QColor *) RING_API_GETCPOINTER(2,"QColor") );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}

RING_FUNC(ring_CodeEditor_setCompleter)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompleter((QCompleter *) RING_API_GETCPOINTER(2,"QCompleter"));
}


RING_FUNC(ring_CodeEditor_completer)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	RING_API_RETCPOINTER(pObject->completer(),"QCompleter");
}


RING_FUNC(ring_CodeEditor_setLineNumbersAreaColor)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	pObject->setLineNumbersAreaColor(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_CodeEditor_setLineNumbersAreaBackColor)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	pObject->setLineNumbersAreaBackColor(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QGridLayout_addItem)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addItem((QLayoutItem *) RING_API_GETCPOINTER(2,"QLayoutItem"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (Qt::Alignment )  (int) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QGridLayout_addLayout)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (Qt::Alignment )  (int) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QGridLayout_addLayout_2)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (Qt::Alignment )  (int) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QGridLayout_addWidget)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (Qt::Alignment )  (int) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QGridLayout_addWidget_2)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (Qt::Alignment )  (int) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QGridLayout_cellRect)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cellRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QGridLayout_columnCount)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QGridLayout_columnMinimumWidth)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnMinimumWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_columnStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnStretch( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_getItemPosition)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getItemPosition( (int ) RING_API_GETNUMBER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5),RING_API_GETINTPOINTER(6));
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
	RING_API_ACCEPTINTVALUE(5) ;
}


RING_FUNC(ring_QGridLayout_horizontalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->horizontalSpacing());
}


RING_FUNC(ring_QGridLayout_itemAtPosition)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAtPosition( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QLayoutItem");
}


RING_FUNC(ring_QGridLayout_originCorner)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->originCorner());
}


RING_FUNC(ring_QGridLayout_rowCount)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->rowCount());
}


RING_FUNC(ring_QGridLayout_rowMinimumHeight)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowMinimumHeight( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_rowStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowStretch( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_setColumnMinimumWidth)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnMinimumWidth( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setColumnStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setHorizontalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_setOriginCorner)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOriginCorner( (Qt::Corner )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_setRowMinimumHeight)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowMinimumHeight( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setRowStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_setVerticalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_spacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QGridLayout_verticalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->verticalSpacing());
}


RING_FUNC(ring_QHeaderView_cascadingSectionResizes)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->cascadingSectionResizes());
}


RING_FUNC(ring_QHeaderView_count)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QHeaderView_defaultAlignment)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->defaultAlignment());
}


RING_FUNC(ring_QHeaderView_defaultSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->defaultSectionSize());
}


RING_FUNC(ring_QHeaderView_hiddenSectionCount)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->hiddenSectionCount());
}


RING_FUNC(ring_QHeaderView_hideSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideSection( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_highlightSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->highlightSections());
}


RING_FUNC(ring_QHeaderView_isSectionHidden)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isSectionHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_isSortIndicatorShown)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->isSortIndicatorShown());
}


RING_FUNC(ring_QHeaderView_length)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QHeaderView_logicalIndex)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->logicalIndex( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_logicalIndexAt)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->logicalIndexAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_logicalIndexAt_2)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->logicalIndexAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QHeaderView_logicalIndexAt_3)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->logicalIndexAt(* (QPoint    *) RING_API_GETCPOINTER(2,"QPoint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QHeaderView_maximumSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->maximumSectionSize());
}


RING_FUNC(ring_QHeaderView_minimumSectionSize_2)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->minimumSectionSize());
}


RING_FUNC(ring_QHeaderView_moveSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveSection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_offset)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->offset());
}


RING_FUNC(ring_QHeaderView_orientation)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QHeaderView_resizeContentsPrecision)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->resizeContentsPrecision());
}


RING_FUNC(ring_QHeaderView_resizeSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeSection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_resizeSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeSections( (QHeaderView::ResizeMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_restoreState)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray    *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QHeaderView_saveState)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QHeaderView_sectionPosition)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionResizeMode)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionResizeMode( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionSize( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionSizeHint)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionSizeHint( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionViewportPosition)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionsClickable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsClickable());
}


RING_FUNC(ring_QHeaderView_sectionsHidden)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsHidden());
}


RING_FUNC(ring_QHeaderView_sectionsMovable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsMovable());
}


RING_FUNC(ring_QHeaderView_sectionsMoved)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsMoved());
}


RING_FUNC(ring_QHeaderView_setCascadingSectionResizes)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCascadingSectionResizes( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setDefaultAlignment)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultAlignment( (Qt::Alignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setDefaultSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultSectionSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setHighlightSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHighlightSections( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setMaximumSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumSectionSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setMinimumSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumSectionSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setResizeContentsPrecision)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeContentsPrecision( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSectionHidden)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_setSectionResizeMode)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionResizeMode( (QHeaderView::ResizeMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSectionResizeMode_2)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionResizeMode( (int ) RING_API_GETNUMBER(2), (QHeaderView::ResizeMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_setSectionsClickable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionsClickable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSectionsMovable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionsMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSortIndicator)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortIndicator( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_setSortIndicatorShown)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortIndicatorShown( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setStretchLastSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretchLastSection( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_showSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showSection( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_sortIndicatorOrder)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sortIndicatorOrder());
}


RING_FUNC(ring_QHeaderView_sortIndicatorSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sortIndicatorSection());
}


RING_FUNC(ring_QHeaderView_stretchLastSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->stretchLastSection());
}


RING_FUNC(ring_QHeaderView_stretchSectionCount)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->stretchSectionCount());
}


RING_FUNC(ring_QHeaderView_swapSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->swapSections( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_visualIndex)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualIndex( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_visualIndexAt)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualIndexAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_headerDataChanged)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->headerDataChanged( (Qt::Orientation )  (int) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QHeaderView_setOffset)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOffset( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setOffsetToLastSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	pObject->setOffsetToLastSection();
}


RING_FUNC(ring_QHeaderView_setOffsetToSectionPosition)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOffsetToSectionPosition( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setgeometriesChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setgeometriesChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionCountChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionCountChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionEnteredEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionHandleDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionHandleDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionMovedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionMovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionPressedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionResizedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionResizedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsortIndicatorChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsortIndicatorChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_getgeometriesChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getgeometriesChangedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionClickedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionCountChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionCountChangedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionDoubleClickedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionEnteredEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionEnteredEvent());
}


RING_FUNC(ring_QHeaderView_getsectionHandleDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionHandleDoubleClickedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionMovedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionMovedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionPressedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionPressedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionResizedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionResizedEvent());
}


RING_FUNC(ring_QHeaderView_getsortIndicatorChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsortIndicatorChangedEvent());
}


RING_FUNC(ring_QHeaderView_geteventparameters)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	pObject->geteventparameters();
}


RING_FUNC(ring_QSplashScreen_finish)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->finish((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QSplashScreen_pixmap)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->pixmap();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QSplashScreen_repaint)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	pObject->repaint();
}


RING_FUNC(ring_QSplashScreen_setPixmap)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	pObject->setPixmap(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QSplashScreen_clearMessage)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	pObject->clearMessage();
}


RING_FUNC(ring_QSplashScreen_showMessage)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showMessage(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3),* (QColor  *) RING_API_GETCPOINTER(4,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QColor"));
}


RING_FUNC(ring_QBoxLayout_addLayout)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_addSpacerItem)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addSpacerItem((QSpacerItem *) RING_API_GETCPOINTER(2,"QSpacerItem"));
}


RING_FUNC(ring_QBoxLayout_addSpacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_addStretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addStretch( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_addStrut)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addStrut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_addWidget)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (Qt::Alignment )  (int) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QBoxLayout_direction)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	{
		QBoxLayout::Direction  *pValue ; 
		pValue = (QBoxLayout::Direction  *) RING_API_MALLOC(sizeof(QBoxLayout::Direction )) ;
		*pValue = pObject->direction();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBoxLayout::Direction",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QBoxLayout_insertLayout)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertLayout( (int ) RING_API_GETNUMBER(2),(QLayout *) RING_API_GETCPOINTER(3,"QLayout"), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QBoxLayout_insertSpacerItem)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSpacerItem( (int ) RING_API_GETNUMBER(2),(QSpacerItem *) RING_API_GETCPOINTER(3,"QSpacerItem"));
}


RING_FUNC(ring_QBoxLayout_insertSpacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSpacing( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_insertStretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_insertWidget)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"), (int ) RING_API_GETNUMBER(4), (Qt::Alignment )  (int) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QBoxLayout_setDirection)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	pObject->setDirection(* (QBoxLayout::Direction  *) RING_API_GETCPOINTER(2,"QBoxLayout::Direction"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBoxLayout::Direction"));
}


RING_FUNC(ring_QBoxLayout_setSpacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_setStretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_setStretchFactor)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setStretchFactor((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QBoxLayout_setStretchFactor_2)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setStretchFactor((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QBoxLayout_spacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QBoxLayout_stretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->stretch( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QLayout_activate)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->activate());
}


RING_FUNC(ring_QLayout_addWidget)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLayout_contentsMargins)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) RING_API_MALLOC(sizeof(QMargins)) ;
		*pValue = pObject->contentsMargins();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMargins",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QLayout_contentsRect)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->contentsRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QLayout_getContentsMargins)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getContentsMargins(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QLayout_isEnabled)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->isEnabled());
}


RING_FUNC(ring_QLayout_menuBar)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETCPOINTER(pObject->menuBar(),"QWidget");
}


RING_FUNC(ring_QLayout_parentWidget)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETCPOINTER(pObject->parentWidget(),"QWidget");
}


RING_FUNC(ring_QLayout_removeItem)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItem((QLayoutItem *) RING_API_GETCPOINTER(2,"QLayoutItem"));
}


RING_FUNC(ring_QLayout_removeWidget)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLayout_setAlignment)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setAlignment((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::Alignment )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QLayout_setAlignment_2)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::Alignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_setAlignment_3)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setAlignment((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (Qt::Alignment )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QLayout_setContentsMargins)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContentsMargins( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QLayout_setContentsMargins_2)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	pObject->setContentsMargins(* (QMargins  *) RING_API_GETCPOINTER(2,"QMargins"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QMargins"));
}


RING_FUNC(ring_QLayout_setEnabled)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_setMenuBar)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuBar((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLayout_setSizeConstraint)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeConstraint( (QLayout::SizeConstraint)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_setSpacing)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_sizeConstraint)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->sizeConstraint());
}


RING_FUNC(ring_QLayout_spacing)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QLayout_update)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	pObject->update();
}


RING_FUNC(ring_QLayout_closestAcceptableSize)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSize  *pValue ; 
		pValue = new QSize () ;
		*pValue = pObject->closestAcceptableSize((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),* (QSize    *) RING_API_GETCPOINTER(3,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QSize"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QScrollArea_alignment)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QScrollArea_ensureVisible)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ensureVisible( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QScrollArea_ensureWidgetVisible)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ensureWidgetVisible((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QScrollArea_setAlignment)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::Alignment)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QScrollArea_setWidget)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QScrollArea_setWidgetResizable)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidgetResizable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QScrollArea_takeWidget)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETCPOINTER(pObject->takeWidget(),"QWidget");
}


RING_FUNC(ring_QScrollArea_widget)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QScrollArea_widgetResizable)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETNUMBER(pObject->widgetResizable());
}


RING_FUNC(ring_QSplitter_addWidget)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QSplitter_childrenCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->childrenCollapsible());
}


RING_FUNC(ring_QSplitter_count)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QSplitter_getRange)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRange( (int ) RING_API_GETNUMBER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4));
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
}


RING_FUNC(ring_QSplitter_handle)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->handle( (int ) RING_API_GETNUMBER(2)),"QSplitterHandle");
}


RING_FUNC(ring_QSplitter_handleWidth)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->handleWidth());
}


RING_FUNC(ring_QSplitter_indexOf)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QSplitter_insertWidget)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
}


RING_FUNC(ring_QSplitter_isCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isCollapsible( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSplitter_opaqueResize)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->opaqueResize());
}


RING_FUNC(ring_QSplitter_orientation)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QSplitter_refresh)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	pObject->refresh();
}


RING_FUNC(ring_QSplitter_restoreState)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray   *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QSplitter_saveState)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState();
		RING_API_RETMANAGEDCPOINTER(pValue,"QByteArray",ring_QByteArray_freefunc);
	}
}


RING_FUNC(ring_QSplitter_setChildrenCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildrenCollapsible( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCollapsible( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSplitter_setHandleWidth)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHandleWidth( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setOpaqueResize)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpaqueResize( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setOrientation)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setSizes)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	pObject->setSizes(* (QList<int>   *) RING_API_GETCPOINTER(2,"QList<int>"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QList<int>"));
}


RING_FUNC(ring_QSplitter_setStretchFactor)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretchFactor( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSplitter_sizes)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	{
		QList<int> *pValue ; 
		pValue = (QList<int> *) RING_API_MALLOC(sizeof(QList<int>)) ;
		*pValue = pObject->sizes();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<int>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QSplitter_widget)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widget( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QCompleter_caseSensitivity)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->caseSensitivity());
}


RING_FUNC(ring_QCompleter_completionColumn)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionColumn());
}


RING_FUNC(ring_QCompleter_completionCount)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionCount());
}


RING_FUNC(ring_QCompleter_completionMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionMode());
}


RING_FUNC(ring_QCompleter_completionModel)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->completionModel(),"QAbstractItemModel");
}


RING_FUNC(ring_QCompleter_completionPrefix)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETSTRING(pObject->completionPrefix().toStdString().c_str());
}


RING_FUNC(ring_QCompleter_completionRole)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionRole());
}


RING_FUNC(ring_QCompleter_currentCompletion)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETSTRING(pObject->currentCompletion().toStdString().c_str());
}


RING_FUNC(ring_QCompleter_currentIndex)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) RING_API_MALLOC(sizeof(QModelIndex)) ;
		*pValue = pObject->currentIndex();
		RING_API_RETMANAGEDCPOINTER(pValue,"QModelIndex",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QCompleter_currentRow)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->currentRow());
}


RING_FUNC(ring_QCompleter_filterMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->filterMode());
}


RING_FUNC(ring_QCompleter_maxVisibleItems)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->maxVisibleItems());
}


RING_FUNC(ring_QCompleter_model)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->model(),"QAbstractItemModel");
}


RING_FUNC(ring_QCompleter_modelSorting)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->modelSorting());
}


RING_FUNC(ring_QCompleter_popup)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->popup(),"QAbstractItemView");
}


RING_FUNC(ring_QCompleter_setCaseSensitivity)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCaseSensitivity( (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCompletionColumn)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCompletionMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionMode( (QCompleter::CompletionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCompletionRole)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionRole( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCurrentRow)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setCurrentRow( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QCompleter_setFilterMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilterMode( (Qt::MatchFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setMaxVisibleItems)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxVisibleItems( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setModel)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QCompleter_setModelSorting)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModelSorting( (QCompleter::ModelSorting )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setPopup)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPopup((QAbstractItemView *) RING_API_GETCPOINTER(2,"QAbstractItemView"));
}


RING_FUNC(ring_QCompleter_setWidget)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QCompleter_widget)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QCompleter_wrapAround)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->wrapAround());
}


RING_FUNC(ring_QCompleter_complete)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	pObject->complete(* (QRect   *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
}


RING_FUNC(ring_QCompleter_setCompletionPrefix)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionPrefix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCompleter_setWrapAround)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapAround( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_activationOrder)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->activationOrder());
}


RING_FUNC(ring_QMdiArea_activeSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETCPOINTER(pObject->activeSubWindow(),"QMdiSubWindow");
}


RING_FUNC(ring_QMdiArea_addSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addSubWindow((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::WindowFlags )  (int) RING_API_GETNUMBER(3)),"QMdiSubWindow");
}


RING_FUNC(ring_QMdiArea_background)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QMdiArea_currentSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETCPOINTER(pObject->currentSubWindow(),"QMdiSubWindow");
}


RING_FUNC(ring_QMdiArea_documentMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->documentMode());
}


RING_FUNC(ring_QMdiArea_removeSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeSubWindow((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMdiArea_setActivationOrder)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActivationOrder( (QMdiArea::WindowOrder )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setBackground)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->setBackground(* (QBrush    *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QMdiArea_setDocumentMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setOption)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QMdiArea::AreaOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMdiArea_setTabPosition)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabPosition( (QTabWidget::TabPosition )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setTabShape)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabShape( (QTabWidget::TabShape )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setTabsClosable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabsClosable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setTabsMovable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabsMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setViewMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewMode( (QMdiArea::ViewMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_subWindowList)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QMdiSubWindow *> *pValue ; 
		pValue = (QList<QMdiSubWindow *> *) RING_API_MALLOC(sizeof(QList<QMdiSubWindow *>)) ;
		*pValue = pObject->subWindowList( (QMdiArea::WindowOrder )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QMdiSubWindow *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QMdiArea_tabPosition)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabPosition());
}


RING_FUNC(ring_QMdiArea_tabShape)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabShape());
}


RING_FUNC(ring_QMdiArea_tabsClosable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabsClosable());
}


RING_FUNC(ring_QMdiArea_tabsMovable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabsMovable());
}


RING_FUNC(ring_QMdiArea_testOption)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QMdiArea::AreaOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMdiArea_viewMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->viewMode());
}


RING_FUNC(ring_QMdiArea_activateNextSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->activateNextSubWindow();
}


RING_FUNC(ring_QMdiArea_activatePreviousSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->activatePreviousSubWindow();
}


RING_FUNC(ring_QMdiArea_cascadeSubWindows)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->cascadeSubWindows();
}


RING_FUNC(ring_QMdiArea_closeActiveSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->closeActiveSubWindow();
}


RING_FUNC(ring_QMdiArea_closeAllSubWindows)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->closeAllSubWindows();
}


RING_FUNC(ring_QMdiArea_setActiveSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActiveSubWindow((QMdiSubWindow *) RING_API_GETCPOINTER(2,"QMdiSubWindow"));
}


RING_FUNC(ring_QMdiArea_tileSubWindows)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->tileSubWindows();
}


RING_FUNC(ring_QMdiSubWindow_isShaded)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETNUMBER(pObject->isShaded());
}


RING_FUNC(ring_QMdiSubWindow_keyboardPageStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETNUMBER(pObject->keyboardPageStep());
}


RING_FUNC(ring_QMdiSubWindow_keyboardSingleStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETNUMBER(pObject->keyboardSingleStep());
}


RING_FUNC(ring_QMdiSubWindow_mdiArea)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETCPOINTER(pObject->mdiArea(),"QMdiArea");
}


RING_FUNC(ring_QMdiSubWindow_setKeyboardPageStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyboardPageStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiSubWindow_setKeyboardSingleStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyboardSingleStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiSubWindow_setOption)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QMdiSubWindow::SubWindowOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMdiSubWindow_setSystemMenu)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSystemMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QMdiSubWindow_setWidget)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMdiSubWindow_systemMenu)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETCPOINTER(pObject->systemMenu(),"QMenu");
}


RING_FUNC(ring_QMdiSubWindow_testOption)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QMdiSubWindow::SubWindowOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMdiSubWindow_widget)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QMdiSubWindow_showShaded)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	pObject->showShaded();
}


RING_FUNC(ring_QMdiSubWindow_showSystemMenu)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	pObject->showSystemMenu();
}


RING_FUNC(ring_QListView_batchSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->batchSize());
}


RING_FUNC(ring_QListView_clearPropertyFlags)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	pObject->clearPropertyFlags();
}


RING_FUNC(ring_QListView_flow)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->flow());
}


RING_FUNC(ring_QListView_gridSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	{
		QSize  *pValue ; 
		pValue = new QSize () ;
		*pValue = pObject->gridSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QListView_isRowHidden)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isRowHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QListView_isSelectionRectVisible)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->isSelectionRectVisible());
}


RING_FUNC(ring_QListView_isWrapping)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->isWrapping());
}


RING_FUNC(ring_QListView_layoutMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->layoutMode());
}


RING_FUNC(ring_QListView_modelColumn)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->modelColumn());
}


RING_FUNC(ring_QListView_movement)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->movement());
}


RING_FUNC(ring_QListView_resizeMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->resizeMode());
}


RING_FUNC(ring_QListView_setBatchSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBatchSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setFlow)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlow( (QListView::Flow )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setGridSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	pObject->setGridSize(* (QSize    *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QListView_setLayoutMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutMode( (QListView::LayoutMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setModelColumn)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModelColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setMovement)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovement( (QListView::Movement )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setResizeMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeMode( (QListView::ResizeMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setRowHidden)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListView_setSelectionRectVisible)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionRectVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setSpacing)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setUniformItemSizes)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUniformItemSizes( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setViewMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewMode( (QListView::ViewMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setWordWrap)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setWrapping)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_spacing)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QListView_uniformItemSizes)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->uniformItemSizes());
}


RING_FUNC(ring_QListView_viewMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->viewMode());
}


RING_FUNC(ring_QListView_wordWrap)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QToolButton_arrowType)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	{
		Qt::ArrowType *pValue ; 
		pValue = (Qt::ArrowType *) RING_API_MALLOC(sizeof(Qt::ArrowType)) ;
		*pValue = pObject->arrowType();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ArrowType",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QToolButton_autoRaise)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETNUMBER(pObject->autoRaise());
}


RING_FUNC(ring_QToolButton_defaultAction)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETCPOINTER(pObject->defaultAction(),"QAction");
}


RING_FUNC(ring_QToolButton_menu)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETCPOINTER(pObject->menu(),"QMenu");
}


RING_FUNC(ring_QToolButton_popupMode)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETNUMBER(pObject->popupMode());
}


RING_FUNC(ring_QToolButton_setArrowType)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	pObject->setArrowType(* (Qt::ArrowType  *) RING_API_GETCPOINTER(2,"Qt::ArrowType"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ArrowType"));
}


RING_FUNC(ring_QToolButton_setAutoRaise)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRaise( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolButton_setMenu)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QToolButton_setPopupMode)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPopupMode( (QToolButton::ToolButtonPopupMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolButton_toolButtonStyle)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETNUMBER(pObject->toolButtonStyle());
}


RING_FUNC(ring_QToolButton_setDefaultAction)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QToolButton_setToolButtonStyle)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolButtonStyle( (Qt::ToolButtonStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolButton_showMenu)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	pObject->showMenu();
}


RING_FUNC(ring_QToolButton_settriggeredEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settriggeredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QToolButton_gettriggeredEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETSTRING(pObject->gettriggeredEvent());
}


RING_FUNC(ring_QToolButton_setClickEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QToolButton_getClickEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETSTRING(pObject->getClickEvent());
}


RING_FUNC(ring_QTextBrowser_backwardHistoryCount)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->backwardHistoryCount());
}


RING_FUNC(ring_QTextBrowser_clearHistory)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	pObject->clearHistory();
}


RING_FUNC(ring_QTextBrowser_forwardHistoryCount)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->forwardHistoryCount());
}


RING_FUNC(ring_QTextBrowser_historyTitle)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->historyTitle( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTextBrowser_historyUrl)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->historyUrl( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QTextBrowser_isBackwardAvailable)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->isBackwardAvailable());
}


RING_FUNC(ring_QTextBrowser_isForwardAvailable)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->isForwardAvailable());
}


RING_FUNC(ring_QTextBrowser_openExternalLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->openExternalLinks());
}


RING_FUNC(ring_QTextBrowser_openLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->openLinks());
}


RING_FUNC(ring_QTextBrowser_searchPaths)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->searchPaths();
		RING_API_RETMANAGEDCPOINTER(pValue,"QStringList",ring_QStringList_freefunc);
	}
}


RING_FUNC(ring_QTextBrowser_setOpenExternalLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpenExternalLinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBrowser_setOpenLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpenLinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBrowser_setSearchPaths)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	pObject->setSearchPaths(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QTextBrowser_source)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->source();
		RING_API_RETMANAGEDCPOINTER(pValue,"QUrl",ring_QUrl_freefunc);
	}
}


RING_FUNC(ring_QTextBrowser_setanchorClickedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setanchorClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_setbackwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbackwardAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_setforwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setforwardAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_sethighlightedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethighlightedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_sethistoryChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethistoryChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_setsourceChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsourceChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_getanchorClickedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getanchorClickedEvent());
}


RING_FUNC(ring_QTextBrowser_getbackwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getbackwardAvailableEvent());
}


RING_FUNC(ring_QTextBrowser_getforwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getforwardAvailableEvent());
}


RING_FUNC(ring_QTextBrowser_gethighlightedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->gethighlightedEvent());
}


RING_FUNC(ring_QTextBrowser_gethistoryChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->gethistoryChangedEvent());
}


RING_FUNC(ring_QTextBrowser_getsourceChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getsourceChangedEvent());
}


RING_FUNC(ring_QStackedWidget_addWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QStackedWidget_count)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QStackedWidget_currentIndex)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QStackedWidget_currentWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETCPOINTER(pObject->currentWidget(),"QWidget");
}


RING_FUNC(ring_QStackedWidget_indexOf)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QStackedWidget_insertWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget")));
}


RING_FUNC(ring_QStackedWidget_removeWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStackedWidget_widget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widget( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QStackedWidget_setCurrentIndex)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStackedWidget_setCurrentWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStackedWidget_setcurrentChangedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStackedWidget_setwidgetRemovedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwidgetRemovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStackedWidget_getcurrentChangedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETSTRING(pObject->getcurrentChangedEvent());
}


RING_FUNC(ring_QStackedWidget_getwidgetRemovedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETSTRING(pObject->getwidgetRemovedEvent());
}


RING_FUNC(ring_QCalendarWidget_dateEditAcceptDelay)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->dateEditAcceptDelay());
}


RING_FUNC(ring_QCalendarWidget_dateTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QMap<QDate, QTextCharFormat> *pValue ; 
		pValue = (QMap<QDate, QTextCharFormat> *) RING_API_MALLOC(sizeof(QMap<QDate, QTextCharFormat>)) ;
		*pValue = pObject->dateTextFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMap<QDate, QTextCharFormat>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QCalendarWidget_dateTextFormat_2)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->dateTextFormat(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QCalendarWidget_firstDayOfWeek)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		Qt::DayOfWeek *pValue ; 
		pValue = (Qt::DayOfWeek *) RING_API_MALLOC(sizeof(Qt::DayOfWeek)) ;
		*pValue = pObject->firstDayOfWeek();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::DayOfWeek",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QCalendarWidget_headerTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->headerTextFormat();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QCalendarWidget_horizontalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->horizontalHeaderFormat());
}


RING_FUNC(ring_QCalendarWidget_isDateEditEnabled)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->isDateEditEnabled());
}


RING_FUNC(ring_QCalendarWidget_isGridVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->isGridVisible());
}


RING_FUNC(ring_QCalendarWidget_isNavigationBarVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->isNavigationBarVisible());
}


RING_FUNC(ring_QCalendarWidget_maximumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->maximumDate();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QCalendarWidget_minimumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->minimumDate();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QCalendarWidget_monthShown)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->monthShown());
}


RING_FUNC(ring_QCalendarWidget_selectedDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->selectedDate();
		RING_API_RETMANAGEDCPOINTER(pValue,"QDate",ring_QDate_freefunc);
	}
}


RING_FUNC(ring_QCalendarWidget_selectionMode)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->selectionMode());
}


RING_FUNC(ring_QCalendarWidget_setDateEditAcceptDelay)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDateEditAcceptDelay( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setDateEditEnabled)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDateEditEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setDateTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setDateTextFormat(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"),* (QTextCharFormat  *) RING_API_GETCPOINTER(3,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTextCharFormat"));
}


RING_FUNC(ring_QCalendarWidget_setFirstDayOfWeek)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setFirstDayOfWeek(* (Qt::DayOfWeek  *) RING_API_GETCPOINTER(2,"Qt::DayOfWeek"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::DayOfWeek"));
}


RING_FUNC(ring_QCalendarWidget_setHeaderTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setHeaderTextFormat(* (QTextCharFormat  *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QCalendarWidget_setHorizontalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalHeaderFormat( (QCalendarWidget::HorizontalHeaderFormat )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setMaximumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setMaximumDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_setMinimumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setMinimumDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_setSelectionMode)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionMode( (QCalendarWidget::SelectionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setVerticalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalHeaderFormat( (QCalendarWidget::VerticalHeaderFormat )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setWeekdayTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setWeekdayTextFormat(* (Qt::DayOfWeek  *) RING_API_GETCPOINTER(2,"Qt::DayOfWeek"),* (QTextCharFormat  *) RING_API_GETCPOINTER(3,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::DayOfWeek"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTextCharFormat"));
}


RING_FUNC(ring_QCalendarWidget_verticalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->verticalHeaderFormat());
}


RING_FUNC(ring_QCalendarWidget_weekdayTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->weekdayTextFormat(* (Qt::DayOfWeek  *) RING_API_GETCPOINTER(2,"Qt::DayOfWeek"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::DayOfWeek"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QTextCharFormat",ring_QTextCharFormat_freefunc);
	}
}


RING_FUNC(ring_QCalendarWidget_yearShown)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->yearShown());
}


RING_FUNC(ring_QCalendarWidget_setCurrentPage)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentPage( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCalendarWidget_setDateRange)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setDateRange(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"),* (QDate  *) RING_API_GETCPOINTER(3,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_setGridVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGridVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setNavigationBarVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNavigationBarVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setSelectedDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setSelectedDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_showNextMonth)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showNextMonth();
}


RING_FUNC(ring_QCalendarWidget_showNextYear)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showNextYear();
}


RING_FUNC(ring_QCalendarWidget_showPreviousMonth)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showPreviousMonth();
}


RING_FUNC(ring_QCalendarWidget_showPreviousYear)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showPreviousYear();
}


RING_FUNC(ring_QCalendarWidget_showSelectedDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showSelectedDate();
}


RING_FUNC(ring_QCalendarWidget_showToday)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showToday();
}


RING_FUNC(ring_QCalendarWidget_setactivatedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_setclickedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_setcurrentPageChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentPageChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_setselectionChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_getactivatedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QCalendarWidget_getclickedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QCalendarWidget_getcurrentPageChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getcurrentPageChangedEvent());
}


RING_FUNC(ring_QCalendarWidget_getselectionChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QTabBar_addTab)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->addTab(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QTabBar_addTab_2)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->addTab(* (QIcon  *) RING_API_GETCPOINTER(2,"QIcon"),RING_API_GETSTRING(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QTabBar_count)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QTabBar_currentIndex)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QTabBar_documentMode)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->documentMode());
}


RING_FUNC(ring_QTabBar_drawBase)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->drawBase());
}


RING_FUNC(ring_QTabBar_elideMode)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->elideMode());
}


RING_FUNC(ring_QTabBar_expanding)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->expanding());
}


RING_FUNC(ring_QTabBar_iconSize)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QTabBar_insertTab)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertTab( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QTabBar_insertTab_2)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertTab( (int ) RING_API_GETNUMBER(2),* (QIcon  *) RING_API_GETCPOINTER(3,"QIcon"),RING_API_GETSTRING(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QIcon"));
}


RING_FUNC(ring_QTabBar_isMovable)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->isMovable());
}


RING_FUNC(ring_QTabBar_isTabEnabled)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isTabEnabled( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTabBar_moveTab)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveTab( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTabBar_removeTab)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeTab( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_selectionBehaviorOnRemove)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->selectionBehaviorOnRemove());
}


RING_FUNC(ring_QTabBar_setDocumentMode)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setDrawBase)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDrawBase( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setElideMode)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setElideMode( (Qt::TextElideMode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setExpanding)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpanding( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setIconSize)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	pObject->setIconSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QTabBar_setMovable)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setSelectionBehaviorOnRemove)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionBehaviorOnRemove( (QTabBar::SelectionBehavior )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setShape)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShape( (QTabBar::Shape )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setTabButton)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabButton( (int ) RING_API_GETNUMBER(2), (QTabBar::ButtonPosition )  (int) RING_API_GETNUMBER(3),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"));
}


RING_FUNC(ring_QTabBar_setTabData)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabData( (int ) RING_API_GETNUMBER(2),* (QVariant  *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QTabBar_setTabEnabled)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabEnabled( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTabBar_setTabIcon)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabIcon( (int ) RING_API_GETNUMBER(2),* (QIcon  *) RING_API_GETCPOINTER(3,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QIcon"));
}


RING_FUNC(ring_QTabBar_setTabText)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabText( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabBar_setTabTextColor)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabTextColor( (int ) RING_API_GETNUMBER(2),* (QColor  *) RING_API_GETCPOINTER(3,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QColor"));
}


RING_FUNC(ring_QTabBar_setTabToolTip)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabToolTip( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabBar_setTabWhatsThis)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabWhatsThis( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabBar_setTabsClosable)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabsClosable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setUsesScrollButtons)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUsesScrollButtons( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_shape)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->shape());
}


RING_FUNC(ring_QTabBar_tabAt)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->tabAt(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QTabBar_tabButton)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->tabButton( (int ) RING_API_GETNUMBER(2), (QTabBar::ButtonPosition )  (int) RING_API_GETNUMBER(3)),"QWidget");
}


RING_FUNC(ring_QTabBar_tabData)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->tabData( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QTabBar_tabIcon)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->tabIcon( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QTabBar_tabRect)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->tabRect( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QTabBar_tabText)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabText( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabBar_tabTextColor)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->tabTextColor( (int ) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QColor",ring_QColor_freefunc);
	}
}


RING_FUNC(ring_QTabBar_tabToolTip)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabToolTip( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabBar_tabWhatsThis)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabWhatsThis( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabBar_tabsClosable)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->tabsClosable());
}


RING_FUNC(ring_QTabBar_usesScrollButtons)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETNUMBER(pObject->usesScrollButtons());
}


RING_FUNC(ring_QTabBar_setCurrentIndex)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabBar_setcurrentChangedEvent)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTabBar_settabCloseRequestedEvent)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settabCloseRequestedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTabBar_settabMovedEvent)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settabMovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTabBar_getcurrentChangedEvent)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETSTRING(pObject->getcurrentChangedEvent());
}


RING_FUNC(ring_QTabBar_gettabCloseRequestedEvent)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETSTRING(pObject->gettabCloseRequestedEvent());
}


RING_FUNC(ring_QTabBar_gettabMovedEvent)
{
	GTabBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabBar *) RING_API_GETCPOINTER(1,"QTabBar");
	RING_API_RETSTRING(pObject->gettabMovedEvent());
}


RING_FUNC(ring_QGraphicsView_matrix)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QMatrix *pValue ; 
		pValue = (QMatrix *) RING_API_MALLOC(sizeof(QMatrix)) ;
		*pValue = pObject->matrix();
		RING_API_RETMANAGEDCPOINTER(pValue,"QMatrix",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_resetMatrix)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->resetMatrix();
}


RING_FUNC(ring_QGraphicsView_setMatrix)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMatrix(* (QMatrix  *) RING_API_GETCPOINTER(2,"QMatrix"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QMatrix"));
}


RING_FUNC(ring_QGraphicsView_alignment)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QGraphicsView_backgroundBrush)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->backgroundBrush();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_cacheMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->cacheMode());
}


RING_FUNC(ring_QGraphicsView_centerOn)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->centerOn(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
}


RING_FUNC(ring_QGraphicsView_centerOn_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->centerOn( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsView_centerOn_3)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->centerOn((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"));
}


RING_FUNC(ring_QGraphicsView_dragMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->dragMode());
}


RING_FUNC(ring_QGraphicsView_ensureVisible)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ensureVisible(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsView_ensureVisible_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ensureVisible( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QGraphicsView_ensureVisible_3)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ensureVisible((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QGraphicsView_fitInView)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->fitInView(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsView_fitInView_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->fitInView( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QGraphicsView_fitInView_3)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->fitInView((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsView_foregroundBrush)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foregroundBrush();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_isInteractive)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->isInteractive());
}


RING_FUNC(ring_QGraphicsView_isTransformed)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->isTransformed());
}


RING_FUNC(ring_QGraphicsView_itemAt)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETCPOINTER(pObject->itemAt(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")),"QGraphicsItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QGraphicsView_itemAt_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QGraphicsItem");
}


RING_FUNC(ring_QGraphicsView_items)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_items_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_items_3)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_items_4)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_items_5)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(6,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"Qt::ItemSelectionMode"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_items_6)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QPolygon  *) RING_API_GETCPOINTER(2,"QPolygon"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPolygon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_items_7)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_mapFromScene)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromScene(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_mapFromScene_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPolygon *pValue ; 
		pValue = (QPolygon *) RING_API_MALLOC(sizeof(QPolygon)) ;
		*pValue = pObject->mapFromScene(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPolygon",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_mapFromScene_3)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPolygon *pValue ; 
		pValue = (QPolygon *) RING_API_MALLOC(sizeof(QPolygon)) ;
		*pValue = pObject->mapFromScene(* (QPolygonF  *) RING_API_GETCPOINTER(2,"QPolygonF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPolygonF"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPolygon",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_mapFromScene_4)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->mapFromScene(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_mapFromScene_5)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromScene( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_mapFromScene_6)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPolygon *pValue ; 
		pValue = (QPolygon *) RING_API_MALLOC(sizeof(QPolygon)) ;
		*pValue = pObject->mapFromScene( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPolygon",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_mapToScene)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->mapToScene(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_mapToScene_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPolygonF *pValue ; 
		pValue = (QPolygonF *) RING_API_MALLOC(sizeof(QPolygonF)) ;
		*pValue = pObject->mapToScene(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPolygonF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_mapToScene_3)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPolygonF *pValue ; 
		pValue = (QPolygonF *) RING_API_MALLOC(sizeof(QPolygonF)) ;
		*pValue = pObject->mapToScene(* (QPolygon  *) RING_API_GETCPOINTER(2,"QPolygon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPolygon"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPolygonF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_mapToScene_4)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->mapToScene(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_mapToScene_5)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->mapToScene( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPointF",ring_QPointF_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_mapToScene_6)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPolygonF *pValue ; 
		pValue = (QPolygonF *) RING_API_MALLOC(sizeof(QPolygonF)) ;
		*pValue = pObject->mapToScene( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPolygonF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_optimizationFlags)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->optimizationFlags());
}


RING_FUNC(ring_QGraphicsView_render)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->render((QPainter *) RING_API_GETCPOINTER(2,"QPainter"),* (QRectF  *) RING_API_GETCPOINTER(3,"QRectF"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRect"));
}


RING_FUNC(ring_QGraphicsView_renderHints)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QPainter::RenderHints *pValue ; 
		pValue = (QPainter::RenderHints *) RING_API_MALLOC(sizeof(QPainter::RenderHints)) ;
		*pValue = pObject->renderHints();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainter::RenderHints",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_resetCachedContent)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->resetCachedContent();
}


RING_FUNC(ring_QGraphicsView_resetTransform)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->resetTransform();
}


RING_FUNC(ring_QGraphicsView_resizeAnchor)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->resizeAnchor());
}


RING_FUNC(ring_QGraphicsView_rotate)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->rotate( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_rubberBandRect)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->rubberBandRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QGraphicsView_rubberBandSelectionMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		Qt::ItemSelectionMode *pValue ; 
		pValue = (Qt::ItemSelectionMode *) RING_API_MALLOC(sizeof(Qt::ItemSelectionMode)) ;
		*pValue = pObject->rubberBandSelectionMode();
		RING_API_RETMANAGEDCPOINTER(pValue,"Qt::ItemSelectionMode",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_scale)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scale( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsView_scene)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETCPOINTER(pObject->scene(),"QGraphicsScene");
}


RING_FUNC(ring_QGraphicsView_sceneRect)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->sceneRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_setAlignment)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::Alignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_setBackgroundBrush)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->setBackgroundBrush(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QGraphicsView_setCacheMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCacheMode( (QGraphicsView::CacheMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_setDragMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragMode( (QGraphicsView::DragMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_setForegroundBrush)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->setForegroundBrush(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QGraphicsView_setInteractive)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInteractive( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_setOptimizationFlag)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptimizationFlag( (QGraphicsView::OptimizationFlag )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsView_setOptimizationFlags)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptimizationFlags( (QGraphicsView::OptimizationFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_setRenderHint)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRenderHint( (QPainter::RenderHint )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsView_setRenderHints)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->setRenderHints(* (QPainter::RenderHints  *) RING_API_GETCPOINTER(2,"QPainter::RenderHints"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainter::RenderHints"));
}


RING_FUNC(ring_QGraphicsView_setResizeAnchor)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeAnchor( (QGraphicsView::ViewportAnchor )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_setRubberBandSelectionMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->setRubberBandSelectionMode(* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(2,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"Qt::ItemSelectionMode"));
}


RING_FUNC(ring_QGraphicsView_setScene)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScene((QGraphicsScene *) RING_API_GETCPOINTER(2,"QGraphicsScene"));
}


RING_FUNC(ring_QGraphicsView_setSceneRect)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->setSceneRect(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsView_setSceneRect_2)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSceneRect( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QGraphicsView_setTransform)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTransform(* (QTransform  *) RING_API_GETCPOINTER(2,"QTransform"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QTransform"));
}


RING_FUNC(ring_QGraphicsView_setTransformationAnchor)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTransformationAnchor( (QGraphicsView::ViewportAnchor )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_setViewportUpdateMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewportUpdateMode( (QGraphicsView::ViewportUpdateMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsView_shear)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->shear( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsView_transform)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->transform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_transformationAnchor)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->transformationAnchor());
}


RING_FUNC(ring_QGraphicsView_translate)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsView_viewportTransform)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) RING_API_MALLOC(sizeof(QTransform)) ;
		*pValue = pObject->viewportTransform();
		RING_API_RETMANAGEDCPOINTER(pValue,"QTransform",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsView_viewportUpdateMode)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	RING_API_RETNUMBER(pObject->viewportUpdateMode());
}


RING_FUNC(ring_QGraphicsView_invalidateScene)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->invalidateScene(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"), (QGraphicsScene::SceneLayers )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsView_updateScene)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->updateScene(* (QList<QRectF>  *) RING_API_GETCPOINTER(2,"QList<QRectF>"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QList<QRectF>"));
}


RING_FUNC(ring_QGraphicsView_updateSceneRect)
{
	QGraphicsView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
	pObject->updateSceneRect(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsScene_activePanel)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->activePanel(),"QGraphicsItem");
}


RING_FUNC(ring_QGraphicsScene_activeWindow)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->activeWindow(),"QGraphicsWidget");
}


RING_FUNC(ring_QGraphicsScene_addEllipse)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->addEllipse(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"),* (QPen  *) RING_API_GETCPOINTER(3,"QPen"),* (QBrush  *) RING_API_GETCPOINTER(4,"QBrush")),"QGraphicsEllipseItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_addEllipse_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addEllipse( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5),* (QPen  *) RING_API_GETCPOINTER(6,"QPen"),* (QBrush  *) RING_API_GETCPOINTER(7,"QBrush")),"QGraphicsEllipseItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		RING_API_FREE(RING_API_GETCPOINTER(7,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_addItem)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addItem((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"));
}


RING_FUNC(ring_QGraphicsScene_addLine)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->addLine(* (QLineF  *) RING_API_GETCPOINTER(2,"QLineF"),* (QPen  *) RING_API_GETCPOINTER(3,"QPen")),"QGraphicsLineItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QLineF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPen"));
}


RING_FUNC(ring_QGraphicsScene_addLine_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addLine( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5),* (QPen  *) RING_API_GETCPOINTER(6,"QPen")),"QGraphicsLineItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QPen"));
}


RING_FUNC(ring_QGraphicsScene_addPath)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->addPath(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"),* (QPen  *) RING_API_GETCPOINTER(3,"QPen"),* (QBrush  *) RING_API_GETCPOINTER(4,"QBrush")),"QGraphicsPathItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_addPixmap)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->addPixmap(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap")),"QGraphicsPixmapItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPixmap"));
}


RING_FUNC(ring_QGraphicsScene_addPolygon)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->addPolygon(* (QPolygonF  *) RING_API_GETCPOINTER(2,"QPolygonF"),* (QPen  *) RING_API_GETCPOINTER(3,"QPen"),* (QBrush  *) RING_API_GETCPOINTER(4,"QBrush")),"QGraphicsPolygonItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPolygonF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_addRect)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->addRect(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"),* (QPen  *) RING_API_GETCPOINTER(3,"QPen"),* (QBrush  *) RING_API_GETCPOINTER(4,"QBrush")),"QGraphicsRectItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_addRect_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addRect( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5),* (QPen  *) RING_API_GETCPOINTER(6,"QPen"),* (QBrush  *) RING_API_GETCPOINTER(7,"QBrush")),"QGraphicsRectItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		RING_API_FREE(RING_API_GETCPOINTER(7,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_addSimpleText)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addSimpleText(RING_API_GETSTRING(2),* (QFont  *) RING_API_GETCPOINTER(3,"QFont")),"QGraphicsSimpleTextItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QFont"));
}


RING_FUNC(ring_QGraphicsScene_addText)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addText(RING_API_GETSTRING(2),* (QFont  *) RING_API_GETCPOINTER(3,"QFont")),"QGraphicsTextItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QFont"));
}


RING_FUNC(ring_QGraphicsScene_addWidget)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::WindowFlags )  (int) RING_API_GETNUMBER(3)),"QGraphicsProxyWidget");
}


RING_FUNC(ring_QGraphicsScene_backgroundBrush)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->backgroundBrush();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QGraphicsScene_bspTreeDepth)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->bspTreeDepth());
}


RING_FUNC(ring_QGraphicsScene_clearFocus)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->clearFocus();
}


RING_FUNC(ring_QGraphicsScene_collidingItems)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->collidingItems((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_createItemGroup)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->createItemGroup(* (QList<QGraphicsItem *>  *) RING_API_GETCPOINTER(2,"QList<QGraphicsItem *>")),"QGraphicsItemGroup");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QList<QGraphicsItem >"));
}


RING_FUNC(ring_QGraphicsScene_destroyItemGroup)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->destroyItemGroup((QGraphicsItemGroup *) RING_API_GETCPOINTER(2,"QGraphicsItemGroup"));
}


RING_FUNC(ring_QGraphicsScene_focusItem)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->focusItem(),"QGraphicsItem");
}


RING_FUNC(ring_QGraphicsScene_font)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETMANAGEDCPOINTER(pValue,"QFont",ring_QFont_freefunc);
	}
}


RING_FUNC(ring_QGraphicsScene_foregroundBrush)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foregroundBrush();
		RING_API_RETMANAGEDCPOINTER(pValue,"QBrush",ring_QBrush_freefunc);
	}
}


RING_FUNC(ring_QGraphicsScene_hasFocus)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->hasFocus());
}


RING_FUNC(ring_QGraphicsScene_height)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QGraphicsScene_inputMethodQuery)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->inputMethodQuery( (Qt::InputMethodQuery )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QVariant",ring_QVariant_freefunc);
	}
}


RING_FUNC(ring_QGraphicsScene_invalidate)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->invalidate( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (QGraphicsScene::SceneLayers )  (int) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QGraphicsScene_isActive)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QGraphicsScene_itemAt)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->itemAt(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"),* (QTransform  *) RING_API_GETCPOINTER(3,"QTransform")),"QGraphicsItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTransform"));
}


RING_FUNC(ring_QGraphicsScene_itemAt_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3),* (QTransform  *) RING_API_GETCPOINTER(4,"QTransform")),"QGraphicsItem");
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QTransform"));
}


RING_FUNC(ring_QGraphicsScene_itemIndexMethod)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->itemIndexMethod());
}


RING_FUNC(ring_QGraphicsScene_items)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items( (Qt::SortOrder )  (int) RING_API_GETNUMBER(2));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_items_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"), (Qt::SortOrder )  (int) RING_API_GETNUMBER(4),* (QTransform  *) RING_API_GETCPOINTER(5,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_items_3)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"), (Qt::SortOrder )  (int) RING_API_GETNUMBER(4),* (QTransform  *) RING_API_GETCPOINTER(5,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_items_4)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QPolygonF  *) RING_API_GETCPOINTER(2,"QPolygonF"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"), (Qt::SortOrder )  (int) RING_API_GETNUMBER(4),* (QTransform  *) RING_API_GETCPOINTER(5,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPolygonF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_items_5)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"), (Qt::SortOrder )  (int) RING_API_GETNUMBER(4),* (QTransform  *) RING_API_GETCPOINTER(5,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_items_6)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->items( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(6,"Qt::ItemSelectionMode"), (Qt::SortOrder )  (int) RING_API_GETNUMBER(7),* (QTransform  *) RING_API_GETCPOINTER(8,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		RING_API_FREE(RING_API_GETCPOINTER(6,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		RING_API_FREE(RING_API_GETCPOINTER(8,"QTransform"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_itemsBoundingRect)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->itemsBoundingRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_minimumRenderSize)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->minimumRenderSize());
}


RING_FUNC(ring_QGraphicsScene_mouseGrabberItem)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->mouseGrabberItem(),"QGraphicsItem");
}


RING_FUNC(ring_QGraphicsScene_palette)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QPalette *pValue ; 
		pValue = (QPalette *) RING_API_MALLOC(sizeof(QPalette)) ;
		*pValue = pObject->palette();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPalette",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_removeItem)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItem((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"));
}


RING_FUNC(ring_QGraphicsScene_render)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->render((QPainter *) RING_API_GETCPOINTER(2,"QPainter"),* (QRectF  *) RING_API_GETCPOINTER(3,"QRectF"),* (QRectF  *) RING_API_GETCPOINTER(4,"QRectF"), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRectF"));
}


RING_FUNC(ring_QGraphicsScene_sceneRect)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) RING_API_MALLOC(sizeof(QRectF)) ;
		*pValue = pObject->sceneRect();
		RING_API_RETMANAGEDCPOINTER(pValue,"QRectF",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_selectedItems)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QList<QGraphicsItem *> *pValue ; 
		pValue = (QList<QGraphicsItem *> *) RING_API_MALLOC(sizeof(QList<QGraphicsItem *>)) ;
		*pValue = pObject->selectedItems();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsItem *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_selectionArea)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->selectionArea();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPainterPath",ring_QPainterPath_freefunc);
	}
}


RING_FUNC(ring_QGraphicsScene_sendEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sendEvent((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"),(QEvent *) RING_API_GETCPOINTER(3,"QEvent")));
}


RING_FUNC(ring_QGraphicsScene_setActivePanel)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActivePanel((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"));
}


RING_FUNC(ring_QGraphicsScene_setActiveWindow)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActiveWindow((QGraphicsWidget *) RING_API_GETCPOINTER(2,"QGraphicsWidget"));
}


RING_FUNC(ring_QGraphicsScene_setBackgroundBrush)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setBackgroundBrush(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_setBspTreeDepth)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBspTreeDepth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsScene_setFocus)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocus( (Qt::FocusReason )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsScene_setFocusItem)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusItem((QGraphicsItem *) RING_API_GETCPOINTER(2,"QGraphicsItem"), (Qt::FocusReason )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGraphicsScene_setFont)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QGraphicsScene_setForegroundBrush)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setForegroundBrush(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QGraphicsScene_setItemIndexMethod)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemIndexMethod( (QGraphicsScene::ItemIndexMethod )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsScene_setMinimumRenderSize)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumRenderSize( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsScene_setPalette)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setPalette(* (QPalette  *) RING_API_GETCPOINTER(2,"QPalette"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPalette"));
}


RING_FUNC(ring_QGraphicsScene_setSceneRect)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setSceneRect(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsScene_setSceneRect_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSceneRect( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QGraphicsScene_setSelectionArea)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setSelectionArea(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"),* (QTransform  *) RING_API_GETCPOINTER(3,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QTransform"));
}


RING_FUNC(ring_QGraphicsScene_setSelectionArea_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setSelectionArea(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"),* (QTransform  *) RING_API_GETCPOINTER(4,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QTransform"));
}


RING_FUNC(ring_QGraphicsScene_setSelectionArea_3)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->setSelectionArea(* (QPainterPath  *) RING_API_GETCPOINTER(2,"QPainterPath"),* (Qt::ItemSelectionOperation  *) RING_API_GETCPOINTER(3,"Qt::ItemSelectionOperation"),* (Qt::ItemSelectionMode  *) RING_API_GETCPOINTER(4,"Qt::ItemSelectionMode"),* (QTransform  *) RING_API_GETCPOINTER(5,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"Qt::ItemSelectionOperation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"Qt::ItemSelectionMode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QTransform"));
}


RING_FUNC(ring_QGraphicsScene_setStickyFocus)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStickyFocus( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsScene_setStyle)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle((QStyle *) RING_API_GETCPOINTER(2,"QStyle"));
}


RING_FUNC(ring_QGraphicsScene_stickyFocus)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->stickyFocus());
}


RING_FUNC(ring_QGraphicsScene_style)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETCPOINTER(pObject->style(),"QStyle");
}


RING_FUNC(ring_QGraphicsScene_update)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->update( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QGraphicsScene_views)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	{
		QList<QGraphicsView *> *pValue ; 
		pValue = (QList<QGraphicsView *> *) RING_API_MALLOC(sizeof(QList<QGraphicsView *>)) ;
		*pValue = pObject->views();
		RING_API_RETMANAGEDCPOINTER(pValue,"QList<QGraphicsView *>",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QGraphicsScene_width)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QGraphicsScene_advance)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->advance();
}


RING_FUNC(ring_QGraphicsScene_clear)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->clear();
}


RING_FUNC(ring_QGraphicsScene_clearSelection)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->clearSelection();
}


RING_FUNC(ring_QGraphicsScene_invalidate_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->invalidate(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"), (QGraphicsScene::SceneLayers )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsScene_update_2)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	pObject->update(* (QRectF  *) RING_API_GETCPOINTER(2,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QGraphicsScene_setchangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setchangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGraphicsScene_setfocusItemChangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfocusItemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGraphicsScene_setsceneRectChangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsceneRectChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGraphicsScene_setselectionChangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGraphicsScene_getchangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETSTRING(pObject->getchangedEvent());
}


RING_FUNC(ring_QGraphicsScene_getfocusItemChangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETSTRING(pObject->getfocusItemChangedEvent());
}


RING_FUNC(ring_QGraphicsScene_getsceneRectChangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETSTRING(pObject->getsceneRectChangedEvent());
}


RING_FUNC(ring_QGraphicsScene_getselectionChangedEvent)
{
	GGraphicsScene *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"QGraphicsScene");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QStyle_combinedLayoutSpacing)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->combinedLayoutSpacing(* (QSizePolicy::ControlTypes  *) RING_API_GETCPOINTER(2,"QSizePolicy::ControlTypes"),* (QSizePolicy::ControlTypes  *) RING_API_GETCPOINTER(3,"QSizePolicy::ControlTypes"), (Qt::Orientation )  (int) RING_API_GETNUMBER(4),(QStyleOption *) RING_API_GETCPOINTER(5,"QStyleOption"),(QWidget *) RING_API_GETCPOINTER(6,"QWidget")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSizePolicy::ControlTypes"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QSizePolicy::ControlTypes"));
}


RING_FUNC(ring_QStyle_drawComplexControl)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawComplexControl( (QStyle::ComplexControl )  (int) RING_API_GETNUMBER(2),(QStyleOptionComplex *) RING_API_GETCPOINTER(3,"QStyleOptionComplex"),(QPainter *) RING_API_GETCPOINTER(4,"QPainter"),(QWidget *) RING_API_GETCPOINTER(5,"QWidget"));
}


RING_FUNC(ring_QStyle_drawControl)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawControl( (QStyle::ControlElement )  (int) RING_API_GETNUMBER(2),(QStyleOption *) RING_API_GETCPOINTER(3,"QStyleOption"),(QPainter *) RING_API_GETCPOINTER(4,"QPainter"),(QWidget *) RING_API_GETCPOINTER(5,"QWidget"));
}


RING_FUNC(ring_QStyle_drawItemPixmap)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawItemPixmap((QPainter *) RING_API_GETCPOINTER(2,"QPainter"),* (QRect  *) RING_API_GETCPOINTER(3,"QRect"), (int ) RING_API_GETNUMBER(4),* (QPixmap  *) RING_API_GETCPOINTER(5,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QPixmap"));
}


RING_FUNC(ring_QStyle_drawItemText)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawItemText((QPainter *) RING_API_GETCPOINTER(2,"QPainter"),* (QRect  *) RING_API_GETCPOINTER(3,"QRect"), (int ) RING_API_GETNUMBER(4),* (QPalette  *) RING_API_GETCPOINTER(5,"QPalette"), (bool ) RING_API_GETNUMBER(6),RING_API_GETSTRING(7), (QPalette::ColorRole )  (int) RING_API_GETNUMBER(8));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QPalette"));
}


RING_FUNC(ring_QStyle_drawPrimitive)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPrimitive( (QStyle::PrimitiveElement )  (int) RING_API_GETNUMBER(2),(QStyleOption *) RING_API_GETCPOINTER(3,"QStyleOption"),(QPainter *) RING_API_GETCPOINTER(4,"QPainter"),(QWidget *) RING_API_GETCPOINTER(5,"QWidget"));
}


RING_FUNC(ring_QStyle_generatedIconPixmap)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->generatedIconPixmap(* (QIcon::Mode  *) RING_API_GETCPOINTER(2,"QIcon::Mode"),* (QPixmap  *) RING_API_GETCPOINTER(3,"QPixmap"),(QStyleOption *) RING_API_GETCPOINTER(4,"QStyleOption"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QIcon::Mode"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QPixmap"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPixmap",ring_QPixmap_freefunc);
	}
}


RING_FUNC(ring_QStyle_hitTestComplexControl)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hitTestComplexControl( (QStyle::ComplexControl )  (int) RING_API_GETNUMBER(2),(QStyleOptionComplex *) RING_API_GETCPOINTER(3,"QStyleOptionComplex"),* (QPoint  *) RING_API_GETCPOINTER(4,"QPoint"),(QWidget *) RING_API_GETCPOINTER(5,"QWidget")));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QPoint"));
}


RING_FUNC(ring_QStyle_itemPixmapRect)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->itemPixmapRect(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"), (int ) RING_API_GETNUMBER(3),* (QPixmap  *) RING_API_GETCPOINTER(4,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QPixmap"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QStyle_itemTextRect)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->itemTextRect(* (QFontMetrics  *) RING_API_GETCPOINTER(2,"QFontMetrics"),* (QRect  *) RING_API_GETCPOINTER(3,"QRect"), (int ) RING_API_GETNUMBER(4), (bool ) RING_API_GETNUMBER(5),RING_API_GETSTRING(6));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QFontMetrics"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QStyle_layoutSpacing)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->layoutSpacing(* (QSizePolicy::ControlType  *) RING_API_GETCPOINTER(2,"QSizePolicy::ControlType"),* (QSizePolicy::ControlType  *) RING_API_GETCPOINTER(3,"QSizePolicy::ControlType"), (Qt::Orientation )  (int) RING_API_GETNUMBER(4),(QStyleOption *) RING_API_GETCPOINTER(5,"QStyleOption"),(QWidget *) RING_API_GETCPOINTER(6,"QWidget")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QSizePolicy::ControlType"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QSizePolicy::ControlType"));
}


RING_FUNC(ring_QStyle_pixelMetric)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->pixelMetric( (QStyle::PixelMetric )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QStyle_pixelMetric_2)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->pixelMetric( (QStyle::PixelMetric )  (int) RING_API_GETNUMBER(2),(QStyleOption *) RING_API_GETCPOINTER(3,"QStyleOption"),(QWidget *) RING_API_GETCPOINTER(4,"QWidget")));
}


RING_FUNC(ring_QStyle_polish)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->polish((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStyle_polish_2)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->polish((QApplication *) RING_API_GETCPOINTER(2,"QApplication"));
}


RING_FUNC(ring_QStyle_polish_3)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	pObject->polish(* (QPalette  *) RING_API_GETCPOINTER(2,"QPalette"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		RING_API_FREE(RING_API_GETCPOINTER(2,"QPalette"));
}


RING_FUNC(ring_QStyle_proxy)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	RING_API_RETCPOINTER(pObject->proxy(),"QStyle");
}


RING_FUNC(ring_QStyle_sizeFromContents)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeFromContents( (QStyle::ContentsType )  (int) RING_API_GETNUMBER(2),(QStyleOption *) RING_API_GETCPOINTER(3,"QStyleOption"),* (QSize  *) RING_API_GETCPOINTER(4,"QSize"),(QWidget *) RING_API_GETCPOINTER(5,"QWidget"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QSize"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QSize",ring_QSize_freefunc);
	}
}


RING_FUNC(ring_QStyle_standardIcon)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->standardIcon( (QStyle::StandardPixmap )  (int) RING_API_GETNUMBER(2),(QStyleOption *) RING_API_GETCPOINTER(3,"QStyleOption"),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QIcon",ring_QIcon_freefunc);
	}
}


RING_FUNC(ring_QStyle_standardPalette)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	{
		QPalette *pValue ; 
		pValue = (QPalette *) RING_API_MALLOC(sizeof(QPalette)) ;
		*pValue = pObject->standardPalette();
		RING_API_RETMANAGEDCPOINTER(pValue,"QPalette",RING_API_FREEFUNC);
	}
}


RING_FUNC(ring_QStyle_styleHint)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->styleHint( (QStyle::StyleHint )  (int) RING_API_GETNUMBER(2),(QStyleOption *) RING_API_GETCPOINTER(3,"QStyleOption"),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"),(QStyleHintReturn *) RING_API_GETCPOINTER(5,"QStyleHintReturn")));
}


RING_FUNC(ring_QStyle_subControlRect)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->subControlRect( (QStyle::ComplexControl )  (int) RING_API_GETNUMBER(2),(QStyleOptionComplex *) RING_API_GETCPOINTER(3,"QStyleOptionComplex"), (QStyle::SubControl )  (int) RING_API_GETNUMBER(4),(QWidget *) RING_API_GETCPOINTER(5,"QWidget"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QStyle_subElementRect)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->subElementRect( (QStyle::SubElement )  (int) RING_API_GETNUMBER(2),(QStyleOption *) RING_API_GETCPOINTER(3,"QStyleOption"),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QStyle_unpolish)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->unpolish((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStyle_unpolish_2)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->unpolish((QApplication *) RING_API_GETCPOINTER(2,"QApplication"));
}


RING_FUNC(ring_QStyle_alignedRect)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->alignedRect( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2), (Qt::Alignment )  (int) RING_API_GETNUMBER(3),* (QSize  *) RING_API_GETCPOINTER(4,"QSize"),* (QRect  *) RING_API_GETCPOINTER(5,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		RING_API_FREE(RING_API_GETCPOINTER(5,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QStyle_sliderPositionFromValue)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sliderPositionFromValue( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (bool ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QStyle_sliderValueFromPosition)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sliderValueFromPosition( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (bool ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QStyle_visualAlignment)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualAlignment( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2), (Qt::Alignment )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStyle_visualPos)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->visualPos( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2),* (QRect  *) RING_API_GETCPOINTER(3,"QRect"),* (QPoint  *) RING_API_GETCPOINTER(4,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QPoint"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QPoint",ring_QPoint_freefunc);
	}
}


RING_FUNC(ring_QStyle_visualRect)
{
	QStyle *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStyle *) RING_API_GETCPOINTER(1,"QStyle");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualRect( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2),* (QRect  *) RING_API_GETCPOINTER(3,"QRect"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		RING_API_FREE(RING_API_GETCPOINTER(3,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		RING_API_FREE(RING_API_GETCPOINTER(4,"QRect"));
		RING_API_RETMANAGEDCPOINTER(pValue,"QRect",ring_QRect_freefunc);
	}
}


RING_FUNC(ring_QTest_qsleep)
{
	QTest::qSleep((int) RING_API_GETNUMBER(1));
}

RING_FUNC(ring_QObject_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QObject *pObject = new QObject();
	RING_API_RETCPOINTER(pObject,"QObject");
}

RING_FUNC(ring_QSize_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QSize *pObject = new QSize((int ) RING_API_GETNUMBER(1), (int ) RING_API_GETNUMBER(2));
	RING_API_RETMANAGEDCPOINTER(pObject,"QSize",ring_QSize_freefunc);
}

RING_FUNC(ring_QDir_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDir *pObject = new QDir();
	RING_API_RETMANAGEDCPOINTER(pObject,"QDir",ring_QDir_freefunc);
}

RING_FUNC(ring_QUrl_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QUrl *pObject = new QUrl(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QUrl");
}

RING_FUNC(ring_QEvent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QEvent *pObject = new QEvent((QEvent::Type )  (int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QEvent");
}

RING_FUNC(ring_QTimer_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTimer *pObject = new GTimer((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTimer");
}

RING_FUNC(ring_QByteArray_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QByteArray *pObject = new QByteArray();
	RING_API_RETCPOINTER(pObject,"QByteArray");
}

RING_FUNC(ring_QFileInfo_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFileInfo *pObject = new QFileInfo();
	RING_API_RETCPOINTER(pObject,"QFileInfo");
}

RING_FUNC(ring_QStringList_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QStringList *pObject = new QStringList();
	RING_API_RETMANAGEDCPOINTER(pObject,"QStringList",ring_QStringList_freefunc);
}

RING_FUNC(ring_QRect_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRect *pObject = new QRect();
	RING_API_RETCPOINTER(pObject,"QRect");
}

RING_FUNC(ring_QTime_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTime *pObject = new QTime();
	RING_API_RETCPOINTER(pObject,"QTime");
}

RING_FUNC(ring_QDate_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDate *pObject = new QDate();
	RING_API_RETCPOINTER(pObject,"QDate");
}

RING_FUNC(ring_QVariant_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QVariant *pObject = new QVariant();
	RING_API_RETCPOINTER(pObject,"QVariant");
}

RING_FUNC(ring_QVariant2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant((int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QVariant2");
}

RING_FUNC(ring_QVariant3_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant((float) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QVariant3");
}

RING_FUNC(ring_QVariant4_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant((double) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QVariant4");
}

RING_FUNC(ring_QVariant5_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QVariant5");
}

RING_FUNC(ring_QVariantInt_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant((int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QVariantInt");
}

RING_FUNC(ring_QVariantFloat_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant((float) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QVariantFloat");
}

RING_FUNC(ring_QVariantDouble_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant((double) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QVariantDouble");
}

RING_FUNC(ring_QVariantString_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVariant *pObject = new QVariant(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QVariantString");
}

RING_FUNC(ring_QXmlStreamReader_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamReader *pObject = new QXmlStreamReader();
	RING_API_RETCPOINTER(pObject,"QXmlStreamReader");
}

RING_FUNC(ring_QXmlStreamWriter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamWriter *pObject = new QXmlStreamWriter();
	RING_API_RETCPOINTER(pObject,"QXmlStreamWriter");
}

RING_FUNC(ring_QXmlStreamNotationDeclaration_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamNotationDeclaration *pObject = new QXmlStreamNotationDeclaration();
	RING_API_RETCPOINTER(pObject,"QXmlStreamNotationDeclaration");
}

RING_FUNC(ring_QXmlStreamNamespaceDeclaration_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamNamespaceDeclaration *pObject = new QXmlStreamNamespaceDeclaration();
	RING_API_RETCPOINTER(pObject,"QXmlStreamNamespaceDeclaration");
}

RING_FUNC(ring_QXmlStreamEntityDeclaration_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamEntityDeclaration *pObject = new QXmlStreamEntityDeclaration();
	RING_API_RETCPOINTER(pObject,"QXmlStreamEntityDeclaration");
}

RING_FUNC(ring_QXmlStreamEntityResolver_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamEntityResolver *pObject = new QXmlStreamEntityResolver();
	RING_API_RETCPOINTER(pObject,"QXmlStreamEntityResolver");
}

RING_FUNC(ring_QXmlStreamAttributes_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamAttributes *pObject = new QXmlStreamAttributes();
	RING_API_RETCPOINTER(pObject,"QXmlStreamAttributes");
}

RING_FUNC(ring_QXmlStreamAttribute_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamAttribute *pObject = new QXmlStreamAttribute();
	RING_API_RETCPOINTER(pObject,"QXmlStreamAttribute");
}

RING_FUNC(ring_QRegularExpression_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegularExpression *pObject = new QRegularExpression();
	RING_API_RETCPOINTER(pObject,"QRegularExpression");
}

RING_FUNC(ring_QRegularExpressionMatch_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegularExpressionMatch *pObject = new QRegularExpressionMatch();
	RING_API_RETCPOINTER(pObject,"QRegularExpressionMatch");
}

RING_FUNC(ring_QRegularExpressionMatchIterator_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegularExpressionMatchIterator *pObject = new QRegularExpressionMatchIterator();
	RING_API_RETCPOINTER(pObject,"QRegularExpressionMatchIterator");
}

RING_FUNC(ring_QJsonArray_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonArray *pObject = new QJsonArray();
	RING_API_RETCPOINTER(pObject,"QJsonArray");
}

RING_FUNC(ring_QJsonDocument_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonDocument *pObject = new QJsonDocument();
	RING_API_RETCPOINTER(pObject,"QJsonDocument");
}

RING_FUNC(ring_QJsonObject_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonObject *pObject = new QJsonObject();
	RING_API_RETCPOINTER(pObject,"QJsonObject");
}

RING_FUNC(ring_QJsonParseError_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonParseError *pObject = new QJsonParseError();
	RING_API_RETCPOINTER(pObject,"QJsonParseError");
}

RING_FUNC(ring_QJsonValue_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonValue *pObject = new QJsonValue();
	RING_API_RETCPOINTER(pObject,"QJsonValue");
}

RING_FUNC(ring_QPointF_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPointF *pObject = new QPointF();
	RING_API_RETCPOINTER(pObject,"QPointF");
}

RING_FUNC(ring_QPoint_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPoint *pObject = new QPoint();
	RING_API_RETCPOINTER(pObject,"QPoint");
}

RING_FUNC(ring_QString2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QString *pObject = new QString();
	RING_API_RETMANAGEDCPOINTER(pObject,"QString2",ring_QString2_freefunc);
}

RING_FUNC(ring_QStringRef_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QStringRef *pObject = new QStringRef();
	RING_API_RETCPOINTER(pObject,"QStringRef");
}

RING_FUNC(ring_QBuffer_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QBuffer *pObject = new QBuffer((QObject *) RING_API_GETCPOINTER(1,"QObject"));
	RING_API_RETCPOINTER(pObject,"QBuffer");
}

RING_FUNC(ring_QDateTime_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDateTime *pObject = new QDateTime();
	RING_API_RETCPOINTER(pObject,"QDateTime");
}

RING_FUNC(ring_QFile_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFile *pObject = new QFile();
	RING_API_RETCPOINTER(pObject,"QFile");
}

RING_FUNC(ring_QFile2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFile *pObject = new QFile(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QFile2");
}

RING_FUNC(ring_QMimeData_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QMimeData *pObject = new QMimeData();
	RING_API_RETCPOINTER(pObject,"QMimeData");
}

RING_FUNC(ring_QChar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QChar *pObject = new QChar((int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QChar");
}

RING_FUNC(ring_QChildEvent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QChildEvent *pObject = new QChildEvent((QEvent::Type)  (int) RING_API_GETNUMBER(1),(QObject *) RING_API_GETCPOINTER(2,"QObject"));
	RING_API_RETCPOINTER(pObject,"QChildEvent");
}

RING_FUNC(ring_QTextStream_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextStream *pObject = new QTextStream();
	RING_API_RETCPOINTER(pObject,"QTextStream");
}

RING_FUNC(ring_QTextStream2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTextStream *pObject = new QTextStream((QIODevice *) RING_API_GETCPOINTER(1,"QIODevice"));
	RING_API_RETCPOINTER(pObject,"QTextStream2");
}

RING_FUNC(ring_QTextStream3_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTextStream *pObject = new QTextStream((FILE *) RING_API_GETCPOINTER(1,"FILE"), (QIODevice::OpenMode)  (int) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QTextStream3");
}

RING_FUNC(ring_QTextStream4_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTextStream *pObject = new QTextStream((QString *) RING_API_GETCPOINTER(1,"QString"), (QIODevice::OpenMode)  (int) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QTextStream4");
}

RING_FUNC(ring_QTextStream5_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTextStream *pObject = new QTextStream((QByteArray *) RING_API_GETCPOINTER(1,"QByteArray"), (QIODevice::OpenMode)  (int) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QTextStream5");
}

RING_FUNC(ring_QLocale_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QLocale *pObject = new QLocale(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QLocale");
}

RING_FUNC(ring_QThread_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GThread *pObject = new GThread((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QThread");
}

RING_FUNC(ring_QThreadPool_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QThreadPool *pObject = new QThreadPool();
	RING_API_RETCPOINTER(pObject,"QThreadPool");
}

RING_FUNC(ring_QProcess_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GProcess *pObject = new GProcess((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QProcess");
}

RING_FUNC(ring_QUuid_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QUuid *pObject = new QUuid();
	RING_API_RETCPOINTER(pObject,"QUuid");
}

RING_FUNC(ring_QMutex_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMutex *pObject = new QMutex((QMutex::RecursionMode)  (int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QMutex");
}

RING_FUNC(ring_QMutexLocker_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMutexLocker *pObject = new QMutexLocker((QMutex *) RING_API_GETCPOINTER(1,"QMutex"));
	RING_API_RETCPOINTER(pObject,"QMutexLocker");
}

RING_FUNC(ring_QBitmap_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QBitmap *pObject = new QBitmap();
	RING_API_RETCPOINTER(pObject,"QBitmap");
}

RING_FUNC(ring_QPixmap_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QPixmap *pObject = new QPixmap(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QPixmap");
}

RING_FUNC(ring_QPixmap2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QPixmap *pObject = new QPixmap((int ) RING_API_GETNUMBER(1), (int ) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QPixmap2");
}

RING_FUNC(ring_QIcon_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	QIcon *pObject = new QIcon(* (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap"));
	RING_API_RETMANAGEDCPOINTER(pObject,"QIcon",ring_QIcon_freefunc);
}

RING_FUNC(ring_QPainter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPainter *pObject = new QPainter();
	RING_API_RETCPOINTER(pObject,"QPainter");
}

RING_FUNC(ring_QPainter2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QPainter *pObject = new QPainter((QPaintDevice *) RING_API_GETCPOINTER(1,"QPaintDevice"));
	RING_API_RETCPOINTER(pObject,"QPainter2");
}

RING_FUNC(ring_QPicture_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPicture *pObject = new QPicture();
	RING_API_RETCPOINTER(pObject,"QPicture");
}

RING_FUNC(ring_QPen_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPen *pObject = new QPen();
	RING_API_RETCPOINTER(pObject,"QPen");
}

RING_FUNC(ring_QColor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QColor *pObject = new QColor();
	RING_API_RETCPOINTER(pObject,"QColor");
}

RING_FUNC(ring_QFont_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFont *pObject = new QFont(RING_API_GETSTRING(1), (int) RING_API_GETNUMBER(2), (int) RING_API_GETNUMBER(3), (bool) RING_API_GETNUMBER(4));
	RING_API_RETMANAGEDCPOINTER(pObject,"QFont",ring_QFont_freefunc);
}

RING_FUNC(ring_QBrush_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QBrush *pObject = new QBrush();
	RING_API_RETCPOINTER(pObject,"QBrush");
}

RING_FUNC(ring_QTextCursor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextCursor *pObject = new QTextCursor();
	RING_API_RETCPOINTER(pObject,"QTextCursor");
}

RING_FUNC(ring_QKeySequence_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QKeySequence *pObject = new QKeySequence(RING_API_GETSTRING(1));
	RING_API_RETMANAGEDCPOINTER(pObject,"QKeySequence",ring_QKeySequence_freefunc);
}

RING_FUNC(ring_QTextDocument_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextDocument *pObject = new QTextDocument();
	RING_API_RETCPOINTER(pObject,"QTextDocument");
}

RING_FUNC(ring_QTextBlock_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextBlock *pObject = new QTextBlock();
	RING_API_RETCPOINTER(pObject,"QTextBlock");
}

RING_FUNC(ring_QPainterPath_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPainterPath *pObject = new QPainterPath();
	RING_API_RETCPOINTER(pObject,"QPainterPath");
}

RING_FUNC(ring_QImage_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QImage *pObject = new QImage();
	RING_API_RETCPOINTER(pObject,"QImage");
}

RING_FUNC(ring_QTextCharFormat_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextCharFormat *pObject = new QTextCharFormat();
	RING_API_RETCPOINTER(pObject,"QTextCharFormat");
}

RING_FUNC(ring_QFontMetrics_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	QFontMetrics *pObject = new QFontMetrics(* (QFont *) RING_API_GETCPOINTER(1,"QFont"));
	RING_API_RETCPOINTER(pObject,"QFontMetrics");
}

RING_FUNC(ring_QLinearGradient_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QLinearGradient *pObject = new QLinearGradient();
	RING_API_RETCPOINTER(pObject,"QLinearGradient");
}

RING_FUNC(ring_QCursor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QCursor *pObject = new QCursor();
	RING_API_RETCPOINTER(pObject,"QCursor");
}

RING_FUNC(ring_QWindow_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GWindow *pObject = new GWindow((QScreen *) RING_API_GETCPOINTER(1,"QScreen"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QWindow");
}

RING_FUNC(ring_QGuiApplication_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GGuiApplication *pObject = new GGuiApplication((int) RING_API_GETNUMBER(1),(char **) RING_API_GETCPOINTER2POINTER(2,"char"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QGuiApplication");
}

RING_FUNC(ring_QRegion_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegion *pObject = new QRegion();
	RING_API_RETCPOINTER(pObject,"QRegion");
}

RING_FUNC(ring_QVector2D_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVector2D *pObject = new QVector2D((float) RING_API_GETNUMBER(1), (float) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QVector2D");
}

RING_FUNC(ring_QVector3D_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVector3D *pObject = new QVector3D((float) RING_API_GETNUMBER(1), (float) RING_API_GETNUMBER(2), (float) RING_API_GETNUMBER(3));
	RING_API_RETCPOINTER(pObject,"QVector3D");
}

RING_FUNC(ring_QVector4D_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QVector4D *pObject = new QVector4D((float) RING_API_GETNUMBER(1), (float) RING_API_GETNUMBER(2), (float) RING_API_GETNUMBER(3), (float) RING_API_GETNUMBER(4));
	RING_API_RETCPOINTER(pObject,"QVector4D");
}

RING_FUNC(ring_QQuaternion_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QQuaternion *pObject = new QQuaternion((float) RING_API_GETNUMBER(1), (float) RING_API_GETNUMBER(2), (float) RING_API_GETNUMBER(3), (float) RING_API_GETNUMBER(4));
	RING_API_RETCPOINTER(pObject,"QQuaternion");
}

RING_FUNC(ring_QMatrix4x4_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 16 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(11) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(12) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(13) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(14) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(15) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(16) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMatrix4x4 *pObject = new QMatrix4x4((qreal) RING_API_GETNUMBER(1), (qreal) RING_API_GETNUMBER(2), (qreal) RING_API_GETNUMBER(3), (qreal) RING_API_GETNUMBER(4), (qreal) RING_API_GETNUMBER(5), (qreal) RING_API_GETNUMBER(6), (qreal) RING_API_GETNUMBER(7), (qreal) RING_API_GETNUMBER(8), (qreal) RING_API_GETNUMBER(9), (qreal) RING_API_GETNUMBER(10), (qreal) RING_API_GETNUMBER(11), (qreal) RING_API_GETNUMBER(12), (qreal) RING_API_GETNUMBER(13), (qreal) RING_API_GETNUMBER(14), (qreal) RING_API_GETNUMBER(15), (qreal) RING_API_GETNUMBER(16));
	RING_API_RETCPOINTER(pObject,"QMatrix4x4");
}

RING_FUNC(ring_QDrag_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GDrag *pObject = new GDrag((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QDrag");
}

RING_FUNC(ring_QDropEvent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDropEvent *pObject = new QDropEvent(* (QPointF *) RING_API_GETCPOINTER(1,"QPointF"), (Qt::DropActions)  (int) RING_API_GETNUMBER(2),(QMimeData *) RING_API_GETCPOINTER(3,"QMimeData"), (Qt::MouseButtons)  (int) RING_API_GETNUMBER(4), (Qt::KeyboardModifiers)  (int) RING_API_GETNUMBER(5), (QEvent::Type)  (int) RING_API_GETNUMBER(6));
	RING_API_RETCPOINTER(pObject,"QDropEvent");
}

RING_FUNC(ring_QDragMoveEvent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDragMoveEvent *pObject = new QDragMoveEvent(* (QPoint *) RING_API_GETCPOINTER(1,"QPoint"), (Qt::DropActions)  (int) RING_API_GETNUMBER(2),(QMimeData *) RING_API_GETCPOINTER(3,"QMimeData"), (Qt::MouseButtons)  (int) RING_API_GETNUMBER(4), (Qt::KeyboardModifiers)  (int) RING_API_GETNUMBER(5), (QEvent::Type)  (int) RING_API_GETNUMBER(6));
	RING_API_RETCPOINTER(pObject,"QDragMoveEvent");
}

RING_FUNC(ring_QDragEnterEvent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDragEnterEvent *pObject = new QDragEnterEvent(* (QPoint *) RING_API_GETCPOINTER(1,"QPoint"), (Qt::DropActions)  (int) RING_API_GETNUMBER(2),(QMimeData *) RING_API_GETCPOINTER(3,"QMimeData"), (Qt::MouseButtons)  (int) RING_API_GETNUMBER(4), (Qt::KeyboardModifiers)  (int) RING_API_GETNUMBER(5));
	RING_API_RETCPOINTER(pObject,"QDragEnterEvent");
}

RING_FUNC(ring_QDragLeaveEvent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDragLeaveEvent *pObject = new QDragLeaveEvent();
	RING_API_RETCPOINTER(pObject,"QDragLeaveEvent");
}

RING_FUNC(ring_QMovie_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GMovie *pObject = new GMovie((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QMovie");
}

RING_FUNC(ring_QWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QWidget *pObject = new QWidget();
	RING_API_RETCPOINTER(pObject,"QWidget");
}

RING_FUNC(ring_QLabel_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QLabel *pObject = new QLabel((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QLabel");
}

RING_FUNC(ring_QPushButton_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GPushButton *pObject = new GPushButton((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QPushButton");
}

RING_FUNC(ring_QLineEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GLineEdit *pObject = new GLineEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QLineEdit");
}

RING_FUNC(ring_QVBoxLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QVBoxLayout *pObject = new QVBoxLayout();
	RING_API_RETCPOINTER(pObject,"QVBoxLayout");
}

RING_FUNC(ring_QHBoxLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QHBoxLayout *pObject = new QHBoxLayout();
	RING_API_RETCPOINTER(pObject,"QHBoxLayout");
}

RING_FUNC(ring_QTextEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTextEdit *pObject = new GTextEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTextEdit");
}

RING_FUNC(ring_QListWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GListWidget *pObject = new GListWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QListWidget");
}

RING_FUNC(ring_QTreeView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTreeView *pObject = new GTreeView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTreeView");
}

RING_FUNC(ring_QFileSystemModel_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFileSystemModel *pObject = new QFileSystemModel();
	RING_API_RETCPOINTER(pObject,"QFileSystemModel");
}

RING_FUNC(ring_QTreeWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTreeWidget *pObject = new GTreeWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTreeWidget");
}

RING_FUNC(ring_QTreeWidgetItem_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTreeWidgetItem *pObject = new QTreeWidgetItem();
	RING_API_RETCPOINTER(pObject,"QTreeWidgetItem");
}

RING_FUNC(ring_QComboBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GComboBox *pObject = new GComboBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QComboBox");
}

RING_FUNC(ring_QMenuBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMenuBar *pObject = new QMenuBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMenuBar");
}

RING_FUNC(ring_QMenu_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMenu *pObject = new QMenu((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMenu");
}

RING_FUNC(ring_QToolBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QToolBar *pObject = new QToolBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QToolBar");
}

RING_FUNC(ring_QMainWindow_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QMainWindow *pObject = new QMainWindow();
	RING_API_RETCPOINTER(pObject,"QMainWindow");
}

RING_FUNC(ring_QStatusBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QStatusBar *pObject = new QStatusBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QStatusBar");
}

RING_FUNC(ring_QDockWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GDockWidget *pObject = new GDockWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (Qt::WindowType )  (int) RING_API_GETNUMBER(2), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QDockWidget");
}

RING_FUNC(ring_QTabWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTabWidget *pObject = new GTabWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTabWidget");
}

RING_FUNC(ring_QTableWidgetItem_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTableWidgetItem *pObject = new QTableWidgetItem(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QTableWidgetItem");
}

RING_FUNC(ring_QFrame_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFrame *pObject = new QFrame((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (Qt::WindowType )  (int) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QFrame");
}

RING_FUNC(ring_QFrame2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFrame *pObject = new QFrame();
	RING_API_RETCPOINTER(pObject,"QFrame2");
}

RING_FUNC(ring_QFrame3_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFrame *pObject = new QFrame((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QFrame3");
}

RING_FUNC(ring_QAbstractScrollArea_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QAbstractScrollArea *pObject = new QAbstractScrollArea((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QAbstractScrollArea");
}

RING_FUNC(ring_QTableView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTableView *pObject = new QTableView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QTableView");
}

RING_FUNC(ring_QTableWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTableWidget *pObject = new GTableWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTableWidget");
}

RING_FUNC(ring_QProgressBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GProgressBar *pObject = new GProgressBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QProgressBar");
}

RING_FUNC(ring_QSpinBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GSpinBox *pObject = new GSpinBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QSpinBox");
}

RING_FUNC(ring_QAbstractSlider_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QAbstractSlider *pObject = new QAbstractSlider((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QAbstractSlider");
}

RING_FUNC(ring_QSlider_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GSlider *pObject = new GSlider((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QSlider");
}

RING_FUNC(ring_QDateEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDateEdit *pObject = new QDateEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QDateEdit");
}

RING_FUNC(ring_QDateTimeEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDateTimeEdit *pObject = new QDateTimeEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QDateTimeEdit");
}

RING_FUNC(ring_QAbstractSpinBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QAbstractSpinBox *pObject = new QAbstractSpinBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QAbstractSpinBox");
}

RING_FUNC(ring_QDial_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GDial *pObject = new GDial((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QDial");
}

RING_FUNC(ring_QCheckBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GCheckBox *pObject = new GCheckBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QCheckBox");
}

RING_FUNC(ring_QRadioButton_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GRadioButton *pObject = new GRadioButton((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QRadioButton");
}

RING_FUNC(ring_QButtonGroup_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GButtonGroup *pObject = new GButtonGroup((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QButtonGroup");
}

RING_FUNC(ring_QAction_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GAction *pObject = new GAction((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QAction");
}

RING_FUNC(ring_QMessageBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMessageBox *pObject = new QMessageBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMessageBox");
}

RING_FUNC(ring_QFileDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GFileDialog *pObject = new GFileDialog((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QFileDialog");
}

RING_FUNC(ring_QDirModel_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDirModel *pObject = new QDirModel();
	RING_API_RETCPOINTER(pObject,"QDirModel");
}

RING_FUNC(ring_QFontDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	GFontDialog *pObject = new GFontDialog(NULL, (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QFontDialog");
}

RING_FUNC(ring_QDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDialog *pObject = new QDialog((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QDialog");
}

RING_FUNC(ring_QColorDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	GColorDialog *pObject = new GColorDialog(NULL, (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QColorDialog");
}

RING_FUNC(ring_QLCDNumber_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QLCDNumber *pObject = new QLCDNumber((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QLCDNumber");
}

RING_FUNC(ring_QInputDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QInputDialog *pObject = new QInputDialog((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QInputDialog");
}

RING_FUNC(ring_QAllEvents_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GAllEvents *pObject = new GAllEvents((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QAllEvents");
}

RING_FUNC(ring_QDesktopWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDesktopWidget *pObject = new QDesktopWidget();
	RING_API_RETCPOINTER(pObject,"QDesktopWidget");
}

RING_FUNC(ring_QListWidgetItem_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QListWidgetItem *pObject = new QListWidgetItem();
	RING_API_RETCPOINTER(pObject,"QListWidgetItem");
}

RING_FUNC(ring_QSystemTrayIcon_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QSystemTrayIcon *pObject = new QSystemTrayIcon();
	RING_API_RETCPOINTER(pObject,"QSystemTrayIcon");
}

RING_FUNC(ring_RingCodeHighlighter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	Highlighter *pObject = new Highlighter((QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument"));
	RING_API_RETCPOINTER(pObject,"RingCodeHighlighter");
}

RING_FUNC(ring_QPlainTextEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GPlainTextEdit *pObject = new GPlainTextEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QPlainTextEdit");
}

RING_FUNC(ring_CodeEditor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	CodeEditor *pObject = new CodeEditor((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"CodeEditor");
}

RING_FUNC(ring_QGridLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QGridLayout *pObject = new QGridLayout();
	RING_API_RETCPOINTER(pObject,"QGridLayout");
}

RING_FUNC(ring_QHeaderView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GHeaderView *pObject = new GHeaderView((Qt::Orientation)  (int) RING_API_GETNUMBER(1),(QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QHeaderView");
}

RING_FUNC(ring_QSplashScreen_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	QSplashScreen *pObject = new QSplashScreen(* (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap"));
	RING_API_RETCPOINTER(pObject,"QSplashScreen");
}

RING_FUNC(ring_QBoxLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QBoxLayout *pObject = new QBoxLayout(* (QBoxLayout::Direction  *) RING_API_GETCPOINTER(1,"QBoxLayout::Direction"),(QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QBoxLayout");
}

RING_FUNC(ring_QScrollArea_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QScrollArea *pObject = new QScrollArea((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QScrollArea");
}

RING_FUNC(ring_QSplitter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QSplitter *pObject = new QSplitter((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QSplitter");
}

RING_FUNC(ring_QCompleter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCompleter *pObject = new QCompleter((QObject *) RING_API_GETCPOINTER(1,"QObject"));
	RING_API_RETCPOINTER(pObject,"QCompleter");
}

RING_FUNC(ring_QCompleter2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCompleter *pObject = new QCompleter((QAbstractItemModel *) RING_API_GETCPOINTER(1,"QAbstractItemModel"),(QObject *) RING_API_GETCPOINTER(2,"QObject"));
	RING_API_RETCPOINTER(pObject,"QCompleter2");
}

RING_FUNC(ring_QCompleter3_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCompleter *pObject = new QCompleter(* (QStringList  *) RING_API_GETCPOINTER(1,"QStringList"),(QObject *) RING_API_GETCPOINTER(2,"QObject"));
	RING_API_RETCPOINTER(pObject,"QCompleter3");
}

RING_FUNC(ring_QCompleter4_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	MultiSelectCompleter *pObject = new MultiSelectCompleter(* (QStringList  *) RING_API_GETCPOINTER(1,"QStringList"),(QObject *) RING_API_GETCPOINTER(2,"QObject"));
	RING_API_RETCPOINTER(pObject,"QCompleter4");
}

RING_FUNC(ring_QMdiArea_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMdiArea *pObject = new QMdiArea((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMdiArea");
}

RING_FUNC(ring_QMdiSubWindow_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMdiSubWindow *pObject = new QMdiSubWindow((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMdiSubWindow");
}

RING_FUNC(ring_QListView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QListView *pObject = new QListView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QListView");
}

RING_FUNC(ring_QToolButton_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GToolButton *pObject = new GToolButton((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QToolButton");
}

RING_FUNC(ring_QTextBrowser_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTextBrowser *pObject = new GTextBrowser((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTextBrowser");
}

RING_FUNC(ring_QStackedWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GStackedWidget *pObject = new GStackedWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QStackedWidget");
}

RING_FUNC(ring_QCalendarWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GCalendarWidget *pObject = new GCalendarWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QCalendarWidget");
}

RING_FUNC(ring_QTabBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTabBar *pObject = new GTabBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTabBar");
}

RING_FUNC(ring_QScrollBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QScrollBar *pObject = new QScrollBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QScrollBar");
}

RING_FUNC(ring_QGraphicsView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QGraphicsView *pObject = new QGraphicsView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QGraphicsView");
}

RING_FUNC(ring_QGraphicsScene_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GGraphicsScene *pObject = new GGraphicsScene((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QGraphicsScene");
}

RING_FUNC(ring_QObject_delete)
{
	QObject *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QSize_delete)
{
	QSize *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QSize *) RING_API_GETCPOINTER(1,"QSize");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDir_delete)
{
	QDir *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QUrl_delete)
{
	QUrl *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QEvent_delete)
{
	QEvent *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTimer_delete)
{
	GTimer *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTimer *) RING_API_GETCPOINTER(1,"GTimer");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QByteArray_delete)
{
	QByteArray *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFileInfo_delete)
{
	QFileInfo *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QStringList_delete)
{
	QStringList *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QRect_delete)
{
	QRect *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTime_delete)
{
	QTime *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDate_delete)
{
	QDate *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariant_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariant2_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariant3_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariant4_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariant5_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariantInt_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariantFloat_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariantDouble_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVariantString_delete)
{
	QVariant *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamReader_delete)
{
	QXmlStreamReader *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamWriter_delete)
{
	QXmlStreamWriter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamNotationDeclaration_delete)
{
	QXmlStreamNotationDeclaration *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamNamespaceDeclaration_delete)
{
	QXmlStreamNamespaceDeclaration *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclaration");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamEntityDeclaration_delete)
{
	QXmlStreamEntityDeclaration *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamEntityResolver_delete)
{
	QXmlStreamEntityResolver *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamEntityResolver *) RING_API_GETCPOINTER(1,"QXmlStreamEntityResolver");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamAttributes_delete)
{
	QXmlStreamAttributes *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QXmlStreamAttribute_delete)
{
	QXmlStreamAttribute *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QRegularExpression_delete)
{
	QRegularExpression *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QRegularExpressionMatch_delete)
{
	QRegularExpressionMatch *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QRegularExpressionMatchIterator_delete)
{
	QRegularExpressionMatchIterator *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QJsonArray_delete)
{
	QJsonArray *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QJsonDocument_delete)
{
	QJsonDocument *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QJsonObject_delete)
{
	QJsonObject *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QJsonParseError_delete)
{
	QJsonParseError *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QJsonParseError *) RING_API_GETCPOINTER(1,"QJsonParseError");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QJsonValue_delete)
{
	QJsonValue *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPointF_delete)
{
	QPointF *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPoint_delete)
{
	QPoint *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QString2_delete)
{
	QString *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QString *) RING_API_GETCPOINTER(1,"QString");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QStringRef_delete)
{
	QStringRef *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QBuffer_delete)
{
	QBuffer *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDateTime_delete)
{
	QDateTime *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFile_delete)
{
	QFile *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFile2_delete)
{
	QFile *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFile *) RING_API_GETCPOINTER(1,"QFile");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMimeData_delete)
{
	QMimeData *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMimeData *) RING_API_GETCPOINTER(1,"QMimeData");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QChar_delete)
{
	QChar *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QChar *) RING_API_GETCPOINTER(1,"QChar");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QChildEvent_delete)
{
	QChildEvent *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QChildEvent *) RING_API_GETCPOINTER(1,"QChildEvent");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextStream_delete)
{
	QTextStream *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextStream2_delete)
{
	QTextStream *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextStream3_delete)
{
	QTextStream *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextStream4_delete)
{
	QTextStream *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextStream5_delete)
{
	QTextStream *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextStream *) RING_API_GETCPOINTER(1,"QTextStream");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QLocale_delete)
{
	QLocale *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QLocale *) RING_API_GETCPOINTER(1,"QLocale");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QThread_delete)
{
	GThread *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GThread *) RING_API_GETCPOINTER(1,"GThread");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QThreadPool_delete)
{
	QThreadPool *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QProcess_delete)
{
	GProcess *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GProcess *) RING_API_GETCPOINTER(1,"GProcess");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QUuid_delete)
{
	QUuid *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QUuid *) RING_API_GETCPOINTER(1,"QUuid");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMutex_delete)
{
	QMutex *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMutexLocker_delete)
{
	QMutexLocker *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QBitmap_delete)
{
	QBitmap *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPixmap_delete)
{
	QPixmap *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPixmap2_delete)
{
	QPixmap *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QIcon_delete)
{
	QIcon *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QIcon *) RING_API_GETCPOINTER(1,"QIcon");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPainter_delete)
{
	QPainter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPainter2_delete)
{
	QPainter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPicture_delete)
{
	QPicture *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPen_delete)
{
	QPen *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QColor_delete)
{
	QColor *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFont_delete)
{
	QFont *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QBrush_delete)
{
	QBrush *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextCursor_delete)
{
	QTextCursor *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QKeySequence_delete)
{
	QKeySequence *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QKeySequence *) RING_API_GETCPOINTER(1,"QKeySequence");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextDocument_delete)
{
	QTextDocument *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextBlock_delete)
{
	QTextBlock *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPainterPath_delete)
{
	QPainterPath *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QImage_delete)
{
	QImage *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextCharFormat_delete)
{
	QTextCharFormat *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFontMetrics_delete)
{
	QFontMetrics *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QLinearGradient_delete)
{
	QLinearGradient *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QCursor_delete)
{
	QCursor *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QWindow_delete)
{
	GWindow *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GWindow *) RING_API_GETCPOINTER(1,"GWindow");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QGuiApplication_delete)
{
	GGuiApplication *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"GGuiApplication");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QRegion_delete)
{
	QRegion *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVector2D_delete)
{
	QVector2D *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVector2D *) RING_API_GETCPOINTER(1,"QVector2D");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVector3D_delete)
{
	QVector3D *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVector3D *) RING_API_GETCPOINTER(1,"QVector3D");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVector4D_delete)
{
	QVector4D *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVector4D *) RING_API_GETCPOINTER(1,"QVector4D");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QQuaternion_delete)
{
	QQuaternion *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QQuaternion *) RING_API_GETCPOINTER(1,"QQuaternion");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMatrix4x4_delete)
{
	QMatrix4x4 *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMatrix4x4 *) RING_API_GETCPOINTER(1,"QMatrix4x4");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDrag_delete)
{
	GDrag *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GDrag *) RING_API_GETCPOINTER(1,"GDrag");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDropEvent_delete)
{
	QDropEvent *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDropEvent *) RING_API_GETCPOINTER(1,"QDropEvent");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDragMoveEvent_delete)
{
	QDragMoveEvent *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDragMoveEvent *) RING_API_GETCPOINTER(1,"QDragMoveEvent");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDragEnterEvent_delete)
{
	QDragEnterEvent *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDragEnterEvent *) RING_API_GETCPOINTER(1,"QDragEnterEvent");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDragLeaveEvent_delete)
{
	QDragLeaveEvent *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDragLeaveEvent *) RING_API_GETCPOINTER(1,"QDragLeaveEvent");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMovie_delete)
{
	GMovie *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GMovie *) RING_API_GETCPOINTER(1,"GMovie");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QWidget_delete)
{
	QWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QLabel_delete)
{
	QLabel *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPushButton_delete)
{
	GPushButton *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GPushButton *) RING_API_GETCPOINTER(1,"GPushButton");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QLineEdit_delete)
{
	GLineEdit *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"GLineEdit");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QVBoxLayout_delete)
{
	QVBoxLayout *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QVBoxLayout *) RING_API_GETCPOINTER(1,"QVBoxLayout");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QHBoxLayout_delete)
{
	QHBoxLayout *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QHBoxLayout *) RING_API_GETCPOINTER(1,"QHBoxLayout");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextEdit_delete)
{
	GTextEdit *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"GTextEdit");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QListWidget_delete)
{
	GListWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GListWidget *) RING_API_GETCPOINTER(1,"GListWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTreeView_delete)
{
	GTreeView *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTreeView *) RING_API_GETCPOINTER(1,"GTreeView");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFileSystemModel_delete)
{
	QFileSystemModel *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTreeWidget_delete)
{
	GTreeWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"GTreeWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTreeWidgetItem_delete)
{
	QTreeWidgetItem *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QComboBox_delete)
{
	GComboBox *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GComboBox *) RING_API_GETCPOINTER(1,"GComboBox");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMenuBar_delete)
{
	QMenuBar *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMenu_delete)
{
	QMenu *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QToolBar_delete)
{
	QToolBar *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMainWindow_delete)
{
	QMainWindow *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QStatusBar_delete)
{
	QStatusBar *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDockWidget_delete)
{
	GDockWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"GDockWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTabWidget_delete)
{
	GTabWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"GTabWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTableWidgetItem_delete)
{
	QTableWidgetItem *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFrame_delete)
{
	QFrame *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFrame2_delete)
{
	QFrame *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFrame3_delete)
{
	QFrame *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QAbstractScrollArea_delete)
{
	QAbstractScrollArea *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTableView_delete)
{
	QTableView *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTableWidget_delete)
{
	GTableWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"GTableWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QProgressBar_delete)
{
	GProgressBar *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"GProgressBar");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QSpinBox_delete)
{
	GSpinBox *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"GSpinBox");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QAbstractSlider_delete)
{
	QAbstractSlider *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QSlider_delete)
{
	GSlider *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GSlider *) RING_API_GETCPOINTER(1,"GSlider");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDateEdit_delete)
{
	QDateEdit *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDateEdit *) RING_API_GETCPOINTER(1,"QDateEdit");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDateTimeEdit_delete)
{
	QDateTimeEdit *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QAbstractSpinBox_delete)
{
	QAbstractSpinBox *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDial_delete)
{
	GDial *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GDial *) RING_API_GETCPOINTER(1,"GDial");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QCheckBox_delete)
{
	GCheckBox *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"GCheckBox");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QRadioButton_delete)
{
	GRadioButton *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"GRadioButton");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QButtonGroup_delete)
{
	GButtonGroup *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"GButtonGroup");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QAction_delete)
{
	GAction *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GAction *) RING_API_GETCPOINTER(1,"GAction");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMessageBox_delete)
{
	QMessageBox *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFileDialog_delete)
{
	GFileDialog *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GFileDialog *) RING_API_GETCPOINTER(1,"GFileDialog");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDirModel_delete)
{
	QDirModel *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QFontDialog_delete)
{
	GFontDialog *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GFontDialog *) RING_API_GETCPOINTER(1,"GFontDialog");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDialog_delete)
{
	QDialog *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QColorDialog_delete)
{
	GColorDialog *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GColorDialog *) RING_API_GETCPOINTER(1,"GColorDialog");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QLCDNumber_delete)
{
	QLCDNumber *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QInputDialog_delete)
{
	QInputDialog *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QAllEvents_delete)
{
	GAllEvents *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"GAllEvents");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QDesktopWidget_delete)
{
	QDesktopWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QListWidgetItem_delete)
{
	QListWidgetItem *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QSystemTrayIcon_delete)
{
	QSystemTrayIcon *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_RingCodeHighlighter_delete)
{
	Highlighter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (Highlighter *) RING_API_GETCPOINTER(1,"Highlighter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QPlainTextEdit_delete)
{
	GPlainTextEdit *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"GPlainTextEdit");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_CodeEditor_delete)
{
	CodeEditor *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QGridLayout_delete)
{
	QGridLayout *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QHeaderView_delete)
{
	GHeaderView *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"GHeaderView");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QSplashScreen_delete)
{
	QSplashScreen *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QBoxLayout_delete)
{
	QBoxLayout *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QScrollArea_delete)
{
	QScrollArea *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QSplitter_delete)
{
	QSplitter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QCompleter_delete)
{
	QCompleter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QCompleter2_delete)
{
	QCompleter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QCompleter3_delete)
{
	QCompleter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QCompleter4_delete)
{
	MultiSelectCompleter *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (MultiSelectCompleter *) RING_API_GETCPOINTER(1,"MultiSelectCompleter");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMdiArea_delete)
{
	QMdiArea *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QMdiSubWindow_delete)
{
	QMdiSubWindow *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QListView_delete)
{
	QListView *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QToolButton_delete)
{
	GToolButton *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GToolButton *) RING_API_GETCPOINTER(1,"GToolButton");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTextBrowser_delete)
{
	GTextBrowser *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"GTextBrowser");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QStackedWidget_delete)
{
	GStackedWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"GStackedWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QCalendarWidget_delete)
{
	GCalendarWidget *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"GCalendarWidget");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QTabBar_delete)
{
	GTabBar *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GTabBar *) RING_API_GETCPOINTER(1,"GTabBar");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QScrollBar_delete)
{
	QScrollBar *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QScrollBar *) RING_API_GETCPOINTER(1,"QScrollBar");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QGraphicsView_delete)
{
	QGraphicsView *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (QGraphicsView *) RING_API_GETCPOINTER(1,"QGraphicsView");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

RING_FUNC(ring_QGraphicsScene_delete)
{
	GGraphicsScene *pObject ; 
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISCPOINTER(1) )
	{
		pObject = (GGraphicsScene *) RING_API_GETCPOINTER(1,"GGraphicsScene");
		delete pObject ;
		RING_API_SETNULLPOINTER(1);
	}
}

void ring_QObject_freefunc(void *pState,void *pPointer)
{
	QObject *pObject ; 
	pObject = (QObject *) pPointer;
	delete pObject ;
}

void ring_QSize_freefunc(void *pState,void *pPointer)
{
	QSize *pObject ; 
	pObject = (QSize *) pPointer;
	delete pObject ;
}

void ring_QDir_freefunc(void *pState,void *pPointer)
{
	QDir *pObject ; 
	pObject = (QDir *) pPointer;
	delete pObject ;
}

void ring_QUrl_freefunc(void *pState,void *pPointer)
{
	QUrl *pObject ; 
	pObject = (QUrl *) pPointer;
	delete pObject ;
}

void ring_QEvent_freefunc(void *pState,void *pPointer)
{
	QEvent *pObject ; 
	pObject = (QEvent *) pPointer;
	delete pObject ;
}

void ring_QTimer_freefunc(void *pState,void *pPointer)
{
	GTimer *pObject ; 
	pObject = (GTimer *) pPointer;
	delete pObject ;
}

void ring_QByteArray_freefunc(void *pState,void *pPointer)
{
	QByteArray *pObject ; 
	pObject = (QByteArray *) pPointer;
	delete pObject ;
}

void ring_QFileInfo_freefunc(void *pState,void *pPointer)
{
	QFileInfo *pObject ; 
	pObject = (QFileInfo *) pPointer;
	delete pObject ;
}

void ring_QStringList_freefunc(void *pState,void *pPointer)
{
	QStringList *pObject ; 
	pObject = (QStringList *) pPointer;
	delete pObject ;
}

void ring_QRect_freefunc(void *pState,void *pPointer)
{
	QRect *pObject ; 
	pObject = (QRect *) pPointer;
	delete pObject ;
}

void ring_QTime_freefunc(void *pState,void *pPointer)
{
	QTime *pObject ; 
	pObject = (QTime *) pPointer;
	delete pObject ;
}

void ring_QDate_freefunc(void *pState,void *pPointer)
{
	QDate *pObject ; 
	pObject = (QDate *) pPointer;
	delete pObject ;
}

void ring_QVariant_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariant2_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariant3_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariant4_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariant5_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariantInt_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariantFloat_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariantDouble_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QVariantString_freefunc(void *pState,void *pPointer)
{
	QVariant *pObject ; 
	pObject = (QVariant *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamReader_freefunc(void *pState,void *pPointer)
{
	QXmlStreamReader *pObject ; 
	pObject = (QXmlStreamReader *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamWriter_freefunc(void *pState,void *pPointer)
{
	QXmlStreamWriter *pObject ; 
	pObject = (QXmlStreamWriter *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamNotationDeclaration_freefunc(void *pState,void *pPointer)
{
	QXmlStreamNotationDeclaration *pObject ; 
	pObject = (QXmlStreamNotationDeclaration *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamNamespaceDeclaration_freefunc(void *pState,void *pPointer)
{
	QXmlStreamNamespaceDeclaration *pObject ; 
	pObject = (QXmlStreamNamespaceDeclaration *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamEntityDeclaration_freefunc(void *pState,void *pPointer)
{
	QXmlStreamEntityDeclaration *pObject ; 
	pObject = (QXmlStreamEntityDeclaration *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamEntityResolver_freefunc(void *pState,void *pPointer)
{
	QXmlStreamEntityResolver *pObject ; 
	pObject = (QXmlStreamEntityResolver *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamAttributes_freefunc(void *pState,void *pPointer)
{
	QXmlStreamAttributes *pObject ; 
	pObject = (QXmlStreamAttributes *) pPointer;
	delete pObject ;
}

void ring_QXmlStreamAttribute_freefunc(void *pState,void *pPointer)
{
	QXmlStreamAttribute *pObject ; 
	pObject = (QXmlStreamAttribute *) pPointer;
	delete pObject ;
}

void ring_QRegularExpression_freefunc(void *pState,void *pPointer)
{
	QRegularExpression *pObject ; 
	pObject = (QRegularExpression *) pPointer;
	delete pObject ;
}

void ring_QRegularExpressionMatch_freefunc(void *pState,void *pPointer)
{
	QRegularExpressionMatch *pObject ; 
	pObject = (QRegularExpressionMatch *) pPointer;
	delete pObject ;
}

void ring_QRegularExpressionMatchIterator_freefunc(void *pState,void *pPointer)
{
	QRegularExpressionMatchIterator *pObject ; 
	pObject = (QRegularExpressionMatchIterator *) pPointer;
	delete pObject ;
}

void ring_QJsonArray_freefunc(void *pState,void *pPointer)
{
	QJsonArray *pObject ; 
	pObject = (QJsonArray *) pPointer;
	delete pObject ;
}

void ring_QJsonDocument_freefunc(void *pState,void *pPointer)
{
	QJsonDocument *pObject ; 
	pObject = (QJsonDocument *) pPointer;
	delete pObject ;
}

void ring_QJsonObject_freefunc(void *pState,void *pPointer)
{
	QJsonObject *pObject ; 
	pObject = (QJsonObject *) pPointer;
	delete pObject ;
}

void ring_QJsonParseError_freefunc(void *pState,void *pPointer)
{
	QJsonParseError *pObject ; 
	pObject = (QJsonParseError *) pPointer;
	delete pObject ;
}

void ring_QJsonValue_freefunc(void *pState,void *pPointer)
{
	QJsonValue *pObject ; 
	pObject = (QJsonValue *) pPointer;
	delete pObject ;
}

void ring_QPointF_freefunc(void *pState,void *pPointer)
{
	QPointF *pObject ; 
	pObject = (QPointF *) pPointer;
	delete pObject ;
}

void ring_QPoint_freefunc(void *pState,void *pPointer)
{
	QPoint *pObject ; 
	pObject = (QPoint *) pPointer;
	delete pObject ;
}

void ring_QString2_freefunc(void *pState,void *pPointer)
{
	QString *pObject ; 
	pObject = (QString *) pPointer;
	delete pObject ;
}

void ring_QStringRef_freefunc(void *pState,void *pPointer)
{
	QStringRef *pObject ; 
	pObject = (QStringRef *) pPointer;
	delete pObject ;
}

void ring_QBuffer_freefunc(void *pState,void *pPointer)
{
	QBuffer *pObject ; 
	pObject = (QBuffer *) pPointer;
	delete pObject ;
}

void ring_QDateTime_freefunc(void *pState,void *pPointer)
{
	QDateTime *pObject ; 
	pObject = (QDateTime *) pPointer;
	delete pObject ;
}

void ring_QFile_freefunc(void *pState,void *pPointer)
{
	QFile *pObject ; 
	pObject = (QFile *) pPointer;
	delete pObject ;
}

void ring_QFile2_freefunc(void *pState,void *pPointer)
{
	QFile *pObject ; 
	pObject = (QFile *) pPointer;
	delete pObject ;
}

void ring_QMimeData_freefunc(void *pState,void *pPointer)
{
	QMimeData *pObject ; 
	pObject = (QMimeData *) pPointer;
	delete pObject ;
}

void ring_QChar_freefunc(void *pState,void *pPointer)
{
	QChar *pObject ; 
	pObject = (QChar *) pPointer;
	delete pObject ;
}

void ring_QChildEvent_freefunc(void *pState,void *pPointer)
{
	QChildEvent *pObject ; 
	pObject = (QChildEvent *) pPointer;
	delete pObject ;
}

void ring_QTextStream_freefunc(void *pState,void *pPointer)
{
	QTextStream *pObject ; 
	pObject = (QTextStream *) pPointer;
	delete pObject ;
}

void ring_QTextStream2_freefunc(void *pState,void *pPointer)
{
	QTextStream *pObject ; 
	pObject = (QTextStream *) pPointer;
	delete pObject ;
}

void ring_QTextStream3_freefunc(void *pState,void *pPointer)
{
	QTextStream *pObject ; 
	pObject = (QTextStream *) pPointer;
	delete pObject ;
}

void ring_QTextStream4_freefunc(void *pState,void *pPointer)
{
	QTextStream *pObject ; 
	pObject = (QTextStream *) pPointer;
	delete pObject ;
}

void ring_QTextStream5_freefunc(void *pState,void *pPointer)
{
	QTextStream *pObject ; 
	pObject = (QTextStream *) pPointer;
	delete pObject ;
}

void ring_QLocale_freefunc(void *pState,void *pPointer)
{
	QLocale *pObject ; 
	pObject = (QLocale *) pPointer;
	delete pObject ;
}

void ring_QThread_freefunc(void *pState,void *pPointer)
{
	GThread *pObject ; 
	pObject = (GThread *) pPointer;
	delete pObject ;
}

void ring_QThreadPool_freefunc(void *pState,void *pPointer)
{
	QThreadPool *pObject ; 
	pObject = (QThreadPool *) pPointer;
	delete pObject ;
}

void ring_QProcess_freefunc(void *pState,void *pPointer)
{
	GProcess *pObject ; 
	pObject = (GProcess *) pPointer;
	delete pObject ;
}

void ring_QUuid_freefunc(void *pState,void *pPointer)
{
	QUuid *pObject ; 
	pObject = (QUuid *) pPointer;
	delete pObject ;
}

void ring_QMutex_freefunc(void *pState,void *pPointer)
{
	QMutex *pObject ; 
	pObject = (QMutex *) pPointer;
	delete pObject ;
}

void ring_QMutexLocker_freefunc(void *pState,void *pPointer)
{
	QMutexLocker *pObject ; 
	pObject = (QMutexLocker *) pPointer;
	delete pObject ;
}

void ring_QBitmap_freefunc(void *pState,void *pPointer)
{
	QBitmap *pObject ; 
	pObject = (QBitmap *) pPointer;
	delete pObject ;
}

void ring_QPixmap_freefunc(void *pState,void *pPointer)
{
	QPixmap *pObject ; 
	pObject = (QPixmap *) pPointer;
	delete pObject ;
}

void ring_QPixmap2_freefunc(void *pState,void *pPointer)
{
	QPixmap *pObject ; 
	pObject = (QPixmap *) pPointer;
	delete pObject ;
}

void ring_QIcon_freefunc(void *pState,void *pPointer)
{
	QIcon *pObject ; 
	pObject = (QIcon *) pPointer;
	delete pObject ;
}

void ring_QPainter_freefunc(void *pState,void *pPointer)
{
	QPainter *pObject ; 
	pObject = (QPainter *) pPointer;
	delete pObject ;
}

void ring_QPainter2_freefunc(void *pState,void *pPointer)
{
	QPainter *pObject ; 
	pObject = (QPainter *) pPointer;
	delete pObject ;
}

void ring_QPicture_freefunc(void *pState,void *pPointer)
{
	QPicture *pObject ; 
	pObject = (QPicture *) pPointer;
	delete pObject ;
}

void ring_QPen_freefunc(void *pState,void *pPointer)
{
	QPen *pObject ; 
	pObject = (QPen *) pPointer;
	delete pObject ;
}

void ring_QColor_freefunc(void *pState,void *pPointer)
{
	QColor *pObject ; 
	pObject = (QColor *) pPointer;
	delete pObject ;
}

void ring_QFont_freefunc(void *pState,void *pPointer)
{
	QFont *pObject ; 
	pObject = (QFont *) pPointer;
	delete pObject ;
}

void ring_QBrush_freefunc(void *pState,void *pPointer)
{
	QBrush *pObject ; 
	pObject = (QBrush *) pPointer;
	delete pObject ;
}

void ring_QTextCursor_freefunc(void *pState,void *pPointer)
{
	QTextCursor *pObject ; 
	pObject = (QTextCursor *) pPointer;
	delete pObject ;
}

void ring_QKeySequence_freefunc(void *pState,void *pPointer)
{
	QKeySequence *pObject ; 
	pObject = (QKeySequence *) pPointer;
	delete pObject ;
}

void ring_QTextDocument_freefunc(void *pState,void *pPointer)
{
	QTextDocument *pObject ; 
	pObject = (QTextDocument *) pPointer;
	delete pObject ;
}

void ring_QTextBlock_freefunc(void *pState,void *pPointer)
{
	QTextBlock *pObject ; 
	pObject = (QTextBlock *) pPointer;
	delete pObject ;
}

void ring_QPainterPath_freefunc(void *pState,void *pPointer)
{
	QPainterPath *pObject ; 
	pObject = (QPainterPath *) pPointer;
	delete pObject ;
}

void ring_QImage_freefunc(void *pState,void *pPointer)
{
	QImage *pObject ; 
	pObject = (QImage *) pPointer;
	delete pObject ;
}

void ring_QTextCharFormat_freefunc(void *pState,void *pPointer)
{
	QTextCharFormat *pObject ; 
	pObject = (QTextCharFormat *) pPointer;
	delete pObject ;
}

void ring_QFontMetrics_freefunc(void *pState,void *pPointer)
{
	QFontMetrics *pObject ; 
	pObject = (QFontMetrics *) pPointer;
	delete pObject ;
}

void ring_QLinearGradient_freefunc(void *pState,void *pPointer)
{
	QLinearGradient *pObject ; 
	pObject = (QLinearGradient *) pPointer;
	delete pObject ;
}

void ring_QCursor_freefunc(void *pState,void *pPointer)
{
	QCursor *pObject ; 
	pObject = (QCursor *) pPointer;
	delete pObject ;
}

void ring_QWindow_freefunc(void *pState,void *pPointer)
{
	GWindow *pObject ; 
	pObject = (GWindow *) pPointer;
	delete pObject ;
}

void ring_QGuiApplication_freefunc(void *pState,void *pPointer)
{
	GGuiApplication *pObject ; 
	pObject = (GGuiApplication *) pPointer;
	delete pObject ;
}

void ring_QRegion_freefunc(void *pState,void *pPointer)
{
	QRegion *pObject ; 
	pObject = (QRegion *) pPointer;
	delete pObject ;
}

void ring_QVector2D_freefunc(void *pState,void *pPointer)
{
	QVector2D *pObject ; 
	pObject = (QVector2D *) pPointer;
	delete pObject ;
}

void ring_QVector3D_freefunc(void *pState,void *pPointer)
{
	QVector3D *pObject ; 
	pObject = (QVector3D *) pPointer;
	delete pObject ;
}

void ring_QVector4D_freefunc(void *pState,void *pPointer)
{
	QVector4D *pObject ; 
	pObject = (QVector4D *) pPointer;
	delete pObject ;
}

void ring_QQuaternion_freefunc(void *pState,void *pPointer)
{
	QQuaternion *pObject ; 
	pObject = (QQuaternion *) pPointer;
	delete pObject ;
}

void ring_QMatrix4x4_freefunc(void *pState,void *pPointer)
{
	QMatrix4x4 *pObject ; 
	pObject = (QMatrix4x4 *) pPointer;
	delete pObject ;
}

void ring_QDrag_freefunc(void *pState,void *pPointer)
{
	GDrag *pObject ; 
	pObject = (GDrag *) pPointer;
	delete pObject ;
}

void ring_QDropEvent_freefunc(void *pState,void *pPointer)
{
	QDropEvent *pObject ; 
	pObject = (QDropEvent *) pPointer;
	delete pObject ;
}

void ring_QDragMoveEvent_freefunc(void *pState,void *pPointer)
{
	QDragMoveEvent *pObject ; 
	pObject = (QDragMoveEvent *) pPointer;
	delete pObject ;
}

void ring_QDragEnterEvent_freefunc(void *pState,void *pPointer)
{
	QDragEnterEvent *pObject ; 
	pObject = (QDragEnterEvent *) pPointer;
	delete pObject ;
}

void ring_QDragLeaveEvent_freefunc(void *pState,void *pPointer)
{
	QDragLeaveEvent *pObject ; 
	pObject = (QDragLeaveEvent *) pPointer;
	delete pObject ;
}

void ring_QMovie_freefunc(void *pState,void *pPointer)
{
	GMovie *pObject ; 
	pObject = (GMovie *) pPointer;
	delete pObject ;
}

void ring_QWidget_freefunc(void *pState,void *pPointer)
{
	QWidget *pObject ; 
	pObject = (QWidget *) pPointer;
	delete pObject ;
}

void ring_QLabel_freefunc(void *pState,void *pPointer)
{
	QLabel *pObject ; 
	pObject = (QLabel *) pPointer;
	delete pObject ;
}

void ring_QPushButton_freefunc(void *pState,void *pPointer)
{
	GPushButton *pObject ; 
	pObject = (GPushButton *) pPointer;
	delete pObject ;
}

void ring_QLineEdit_freefunc(void *pState,void *pPointer)
{
	GLineEdit *pObject ; 
	pObject = (GLineEdit *) pPointer;
	delete pObject ;
}

void ring_QVBoxLayout_freefunc(void *pState,void *pPointer)
{
	QVBoxLayout *pObject ; 
	pObject = (QVBoxLayout *) pPointer;
	delete pObject ;
}

void ring_QHBoxLayout_freefunc(void *pState,void *pPointer)
{
	QHBoxLayout *pObject ; 
	pObject = (QHBoxLayout *) pPointer;
	delete pObject ;
}

void ring_QTextEdit_freefunc(void *pState,void *pPointer)
{
	GTextEdit *pObject ; 
	pObject = (GTextEdit *) pPointer;
	delete pObject ;
}

void ring_QListWidget_freefunc(void *pState,void *pPointer)
{
	GListWidget *pObject ; 
	pObject = (GListWidget *) pPointer;
	delete pObject ;
}

void ring_QTreeView_freefunc(void *pState,void *pPointer)
{
	GTreeView *pObject ; 
	pObject = (GTreeView *) pPointer;
	delete pObject ;
}

void ring_QFileSystemModel_freefunc(void *pState,void *pPointer)
{
	QFileSystemModel *pObject ; 
	pObject = (QFileSystemModel *) pPointer;
	delete pObject ;
}

void ring_QTreeWidget_freefunc(void *pState,void *pPointer)
{
	GTreeWidget *pObject ; 
	pObject = (GTreeWidget *) pPointer;
	delete pObject ;
}

void ring_QTreeWidgetItem_freefunc(void *pState,void *pPointer)
{
	QTreeWidgetItem *pObject ; 
	pObject = (QTreeWidgetItem *) pPointer;
	delete pObject ;
}

void ring_QComboBox_freefunc(void *pState,void *pPointer)
{
	GComboBox *pObject ; 
	pObject = (GComboBox *) pPointer;
	delete pObject ;
}

void ring_QMenuBar_freefunc(void *pState,void *pPointer)
{
	QMenuBar *pObject ; 
	pObject = (QMenuBar *) pPointer;
	delete pObject ;
}

void ring_QMenu_freefunc(void *pState,void *pPointer)
{
	QMenu *pObject ; 
	pObject = (QMenu *) pPointer;
	delete pObject ;
}

void ring_QToolBar_freefunc(void *pState,void *pPointer)
{
	QToolBar *pObject ; 
	pObject = (QToolBar *) pPointer;
	delete pObject ;
}

void ring_QMainWindow_freefunc(void *pState,void *pPointer)
{
	QMainWindow *pObject ; 
	pObject = (QMainWindow *) pPointer;
	delete pObject ;
}

void ring_QStatusBar_freefunc(void *pState,void *pPointer)
{
	QStatusBar *pObject ; 
	pObject = (QStatusBar *) pPointer;
	delete pObject ;
}

void ring_QDockWidget_freefunc(void *pState,void *pPointer)
{
	GDockWidget *pObject ; 
	pObject = (GDockWidget *) pPointer;
	delete pObject ;
}

void ring_QTabWidget_freefunc(void *pState,void *pPointer)
{
	GTabWidget *pObject ; 
	pObject = (GTabWidget *) pPointer;
	delete pObject ;
}

void ring_QTableWidgetItem_freefunc(void *pState,void *pPointer)
{
	QTableWidgetItem *pObject ; 
	pObject = (QTableWidgetItem *) pPointer;
	delete pObject ;
}

void ring_QFrame_freefunc(void *pState,void *pPointer)
{
	QFrame *pObject ; 
	pObject = (QFrame *) pPointer;
	delete pObject ;
}

void ring_QFrame2_freefunc(void *pState,void *pPointer)
{
	QFrame *pObject ; 
	pObject = (QFrame *) pPointer;
	delete pObject ;
}

void ring_QFrame3_freefunc(void *pState,void *pPointer)
{
	QFrame *pObject ; 
	pObject = (QFrame *) pPointer;
	delete pObject ;
}

void ring_QAbstractScrollArea_freefunc(void *pState,void *pPointer)
{
	QAbstractScrollArea *pObject ; 
	pObject = (QAbstractScrollArea *) pPointer;
	delete pObject ;
}

void ring_QTableView_freefunc(void *pState,void *pPointer)
{
	QTableView *pObject ; 
	pObject = (QTableView *) pPointer;
	delete pObject ;
}

void ring_QTableWidget_freefunc(void *pState,void *pPointer)
{
	GTableWidget *pObject ; 
	pObject = (GTableWidget *) pPointer;
	delete pObject ;
}

void ring_QProgressBar_freefunc(void *pState,void *pPointer)
{
	GProgressBar *pObject ; 
	pObject = (GProgressBar *) pPointer;
	delete pObject ;
}

void ring_QSpinBox_freefunc(void *pState,void *pPointer)
{
	GSpinBox *pObject ; 
	pObject = (GSpinBox *) pPointer;
	delete pObject ;
}

void ring_QAbstractSlider_freefunc(void *pState,void *pPointer)
{
	QAbstractSlider *pObject ; 
	pObject = (QAbstractSlider *) pPointer;
	delete pObject ;
}

void ring_QSlider_freefunc(void *pState,void *pPointer)
{
	GSlider *pObject ; 
	pObject = (GSlider *) pPointer;
	delete pObject ;
}

void ring_QDateEdit_freefunc(void *pState,void *pPointer)
{
	QDateEdit *pObject ; 
	pObject = (QDateEdit *) pPointer;
	delete pObject ;
}

void ring_QDateTimeEdit_freefunc(void *pState,void *pPointer)
{
	QDateTimeEdit *pObject ; 
	pObject = (QDateTimeEdit *) pPointer;
	delete pObject ;
}

void ring_QAbstractSpinBox_freefunc(void *pState,void *pPointer)
{
	QAbstractSpinBox *pObject ; 
	pObject = (QAbstractSpinBox *) pPointer;
	delete pObject ;
}

void ring_QDial_freefunc(void *pState,void *pPointer)
{
	GDial *pObject ; 
	pObject = (GDial *) pPointer;
	delete pObject ;
}

void ring_QCheckBox_freefunc(void *pState,void *pPointer)
{
	GCheckBox *pObject ; 
	pObject = (GCheckBox *) pPointer;
	delete pObject ;
}

void ring_QRadioButton_freefunc(void *pState,void *pPointer)
{
	GRadioButton *pObject ; 
	pObject = (GRadioButton *) pPointer;
	delete pObject ;
}

void ring_QButtonGroup_freefunc(void *pState,void *pPointer)
{
	GButtonGroup *pObject ; 
	pObject = (GButtonGroup *) pPointer;
	delete pObject ;
}

void ring_QAction_freefunc(void *pState,void *pPointer)
{
	GAction *pObject ; 
	pObject = (GAction *) pPointer;
	delete pObject ;
}

void ring_QMessageBox_freefunc(void *pState,void *pPointer)
{
	QMessageBox *pObject ; 
	pObject = (QMessageBox *) pPointer;
	delete pObject ;
}

void ring_QFileDialog_freefunc(void *pState,void *pPointer)
{
	GFileDialog *pObject ; 
	pObject = (GFileDialog *) pPointer;
	delete pObject ;
}

void ring_QDirModel_freefunc(void *pState,void *pPointer)
{
	QDirModel *pObject ; 
	pObject = (QDirModel *) pPointer;
	delete pObject ;
}

void ring_QFontDialog_freefunc(void *pState,void *pPointer)
{
	GFontDialog *pObject ; 
	pObject = (GFontDialog *) pPointer;
	delete pObject ;
}

void ring_QDialog_freefunc(void *pState,void *pPointer)
{
	QDialog *pObject ; 
	pObject = (QDialog *) pPointer;
	delete pObject ;
}

void ring_QColorDialog_freefunc(void *pState,void *pPointer)
{
	GColorDialog *pObject ; 
	pObject = (GColorDialog *) pPointer;
	delete pObject ;
}

void ring_QLCDNumber_freefunc(void *pState,void *pPointer)
{
	QLCDNumber *pObject ; 
	pObject = (QLCDNumber *) pPointer;
	delete pObject ;
}

void ring_QInputDialog_freefunc(void *pState,void *pPointer)
{
	QInputDialog *pObject ; 
	pObject = (QInputDialog *) pPointer;
	delete pObject ;
}

void ring_QAllEvents_freefunc(void *pState,void *pPointer)
{
	GAllEvents *pObject ; 
	pObject = (GAllEvents *) pPointer;
	delete pObject ;
}

void ring_QDesktopWidget_freefunc(void *pState,void *pPointer)
{
	QDesktopWidget *pObject ; 
	pObject = (QDesktopWidget *) pPointer;
	delete pObject ;
}

void ring_QListWidgetItem_freefunc(void *pState,void *pPointer)
{
	QListWidgetItem *pObject ; 
	pObject = (QListWidgetItem *) pPointer;
	delete pObject ;
}

void ring_QSystemTrayIcon_freefunc(void *pState,void *pPointer)
{
	QSystemTrayIcon *pObject ; 
	pObject = (QSystemTrayIcon *) pPointer;
	delete pObject ;
}

void ring_RingCodeHighlighter_freefunc(void *pState,void *pPointer)
{
	Highlighter *pObject ; 
	pObject = (Highlighter *) pPointer;
	delete pObject ;
}

void ring_QPlainTextEdit_freefunc(void *pState,void *pPointer)
{
	GPlainTextEdit *pObject ; 
	pObject = (GPlainTextEdit *) pPointer;
	delete pObject ;
}

void ring_CodeEditor_freefunc(void *pState,void *pPointer)
{
	CodeEditor *pObject ; 
	pObject = (CodeEditor *) pPointer;
	delete pObject ;
}

void ring_QGridLayout_freefunc(void *pState,void *pPointer)
{
	QGridLayout *pObject ; 
	pObject = (QGridLayout *) pPointer;
	delete pObject ;
}

void ring_QHeaderView_freefunc(void *pState,void *pPointer)
{
	GHeaderView *pObject ; 
	pObject = (GHeaderView *) pPointer;
	delete pObject ;
}

void ring_QSplashScreen_freefunc(void *pState,void *pPointer)
{
	QSplashScreen *pObject ; 
	pObject = (QSplashScreen *) pPointer;
	delete pObject ;
}

void ring_QBoxLayout_freefunc(void *pState,void *pPointer)
{
	QBoxLayout *pObject ; 
	pObject = (QBoxLayout *) pPointer;
	delete pObject ;
}

void ring_QScrollArea_freefunc(void *pState,void *pPointer)
{
	QScrollArea *pObject ; 
	pObject = (QScrollArea *) pPointer;
	delete pObject ;
}

void ring_QSplitter_freefunc(void *pState,void *pPointer)
{
	QSplitter *pObject ; 
	pObject = (QSplitter *) pPointer;
	delete pObject ;
}

void ring_QCompleter_freefunc(void *pState,void *pPointer)
{
	QCompleter *pObject ; 
	pObject = (QCompleter *) pPointer;
	delete pObject ;
}

void ring_QCompleter2_freefunc(void *pState,void *pPointer)
{
	QCompleter *pObject ; 
	pObject = (QCompleter *) pPointer;
	delete pObject ;
}

void ring_QCompleter3_freefunc(void *pState,void *pPointer)
{
	QCompleter *pObject ; 
	pObject = (QCompleter *) pPointer;
	delete pObject ;
}

void ring_QCompleter4_freefunc(void *pState,void *pPointer)
{
	MultiSelectCompleter *pObject ; 
	pObject = (MultiSelectCompleter *) pPointer;
	delete pObject ;
}

void ring_QMdiArea_freefunc(void *pState,void *pPointer)
{
	QMdiArea *pObject ; 
	pObject = (QMdiArea *) pPointer;
	delete pObject ;
}

void ring_QMdiSubWindow_freefunc(void *pState,void *pPointer)
{
	QMdiSubWindow *pObject ; 
	pObject = (QMdiSubWindow *) pPointer;
	delete pObject ;
}

void ring_QListView_freefunc(void *pState,void *pPointer)
{
	QListView *pObject ; 
	pObject = (QListView *) pPointer;
	delete pObject ;
}

void ring_QToolButton_freefunc(void *pState,void *pPointer)
{
	GToolButton *pObject ; 
	pObject = (GToolButton *) pPointer;
	delete pObject ;
}

void ring_QTextBrowser_freefunc(void *pState,void *pPointer)
{
	GTextBrowser *pObject ; 
	pObject = (GTextBrowser *) pPointer;
	delete pObject ;
}

void ring_QStackedWidget_freefunc(void *pState,void *pPointer)
{
	GStackedWidget *pObject ; 
	pObject = (GStackedWidget *) pPointer;
	delete pObject ;
}

void ring_QCalendarWidget_freefunc(void *pState,void *pPointer)
{
	GCalendarWidget *pObject ; 
	pObject = (GCalendarWidget *) pPointer;
	delete pObject ;
}

void ring_QTabBar_freefunc(void *pState,void *pPointer)
{
	GTabBar *pObject ; 
	pObject = (GTabBar *) pPointer;
	delete pObject ;
}

void ring_QScrollBar_freefunc(void *pState,void *pPointer)
{
	QScrollBar *pObject ; 
	pObject = (QScrollBar *) pPointer;
	delete pObject ;
}

void ring_QGraphicsView_freefunc(void *pState,void *pPointer)
{
	QGraphicsView *pObject ; 
	pObject = (QGraphicsView *) pPointer;
	delete pObject ;
}

void ring_QGraphicsScene_freefunc(void *pState,void *pPointer)
{
	GGraphicsScene *pObject ; 
	pObject = (GGraphicsScene *) pPointer;
	delete pObject ;
}

RING_API void ring_qt_start(RingState *pRingState)
{
	RING_API_REGISTER("qobject_blocksignals",ring_QObject_blockSignals);
	RING_API_REGISTER("qobject_children",ring_QObject_children);
	RING_API_REGISTER("qobject_dumpobjectinfo",ring_QObject_dumpObjectInfo);
	RING_API_REGISTER("qobject_dumpobjecttree",ring_QObject_dumpObjectTree);
	RING_API_REGISTER("qobject_inherits",ring_QObject_inherits);
	RING_API_REGISTER("qobject_installeventfilter",ring_QObject_installEventFilter);
	RING_API_REGISTER("qobject_iswidgettype",ring_QObject_isWidgetType);
	RING_API_REGISTER("qobject_killtimer",ring_QObject_killTimer);
	RING_API_REGISTER("qobject_movetothread",ring_QObject_moveToThread);
	RING_API_REGISTER("qobject_objectname",ring_QObject_objectName);
	RING_API_REGISTER("qobject_parent",ring_QObject_parent);
	RING_API_REGISTER("qobject_property",ring_QObject_property);
	RING_API_REGISTER("qobject_removeeventfilter",ring_QObject_removeEventFilter);
	RING_API_REGISTER("qobject_setobjectname",ring_QObject_setObjectName);
	RING_API_REGISTER("qobject_setparent",ring_QObject_setParent);
	RING_API_REGISTER("qobject_setproperty",ring_QObject_setProperty);
	RING_API_REGISTER("qobject_setproperty_2",ring_QObject_setProperty_2);
	RING_API_REGISTER("qobject_setproperty_3",ring_QObject_setProperty_3);
	RING_API_REGISTER("qobject_setproperty_4",ring_QObject_setProperty_4);
	RING_API_REGISTER("qobject_setproperty_5",ring_QObject_setProperty_5);
	RING_API_REGISTER("qobject_setproperty_int",ring_QObject_setProperty_int);
	RING_API_REGISTER("qobject_setproperty_float",ring_QObject_setProperty_float);
	RING_API_REGISTER("qobject_setproperty_double",ring_QObject_setProperty_double);
	RING_API_REGISTER("qobject_setproperty_string",ring_QObject_setProperty_string);
	RING_API_REGISTER("qobject_signalsblocked",ring_QObject_signalsBlocked);
	RING_API_REGISTER("qobject_starttimer",ring_QObject_startTimer);
	RING_API_REGISTER("qobject_thread",ring_QObject_thread);
	RING_API_REGISTER("qobject_deletelater",ring_QObject_deleteLater);
	RING_API_REGISTER("qdir_absolutefilepath",ring_QDir_absoluteFilePath);
	RING_API_REGISTER("qdir_absolutepath",ring_QDir_absolutePath);
	RING_API_REGISTER("qdir_canonicalpath",ring_QDir_canonicalPath);
	RING_API_REGISTER("qdir_cd",ring_QDir_cd);
	RING_API_REGISTER("qdir_cdup",ring_QDir_cdUp);
	RING_API_REGISTER("qdir_count",ring_QDir_count);
	RING_API_REGISTER("qdir_dirname",ring_QDir_dirName);
	RING_API_REGISTER("qdir_entryinfolist",ring_QDir_entryInfoList);
	RING_API_REGISTER("qdir_entryinfolist_2",ring_QDir_entryInfoList_2);
	RING_API_REGISTER("qdir_entrylist",ring_QDir_entryList);
	RING_API_REGISTER("qdir_entrylist_2",ring_QDir_entryList_2);
	RING_API_REGISTER("qdir_exists",ring_QDir_exists);
	RING_API_REGISTER("qdir_exists_2",ring_QDir_exists_2);
	RING_API_REGISTER("qdir_filepath",ring_QDir_filePath);
	RING_API_REGISTER("qdir_filter",ring_QDir_filter);
	RING_API_REGISTER("qdir_isabsolute",ring_QDir_isAbsolute);
	RING_API_REGISTER("qdir_isreadable",ring_QDir_isReadable);
	RING_API_REGISTER("qdir_isrelative",ring_QDir_isRelative);
	RING_API_REGISTER("qdir_isroot",ring_QDir_isRoot);
	RING_API_REGISTER("qdir_makeabsolute",ring_QDir_makeAbsolute);
	RING_API_REGISTER("qdir_mkdir",ring_QDir_mkdir);
	RING_API_REGISTER("qdir_mkpath",ring_QDir_mkpath);
	RING_API_REGISTER("qdir_namefilters",ring_QDir_nameFilters);
	RING_API_REGISTER("qdir_path",ring_QDir_path);
	RING_API_REGISTER("qdir_refresh",ring_QDir_refresh);
	RING_API_REGISTER("qdir_relativefilepath",ring_QDir_relativeFilePath);
	RING_API_REGISTER("qdir_remove",ring_QDir_remove);
	RING_API_REGISTER("qdir_removerecursively",ring_QDir_removeRecursively);
	RING_API_REGISTER("qdir_rename",ring_QDir_rename);
	RING_API_REGISTER("qdir_rmdir",ring_QDir_rmdir);
	RING_API_REGISTER("qdir_rmpath",ring_QDir_rmpath);
	RING_API_REGISTER("qdir_setfilter",ring_QDir_setFilter);
	RING_API_REGISTER("qdir_setnamefilters",ring_QDir_setNameFilters);
	RING_API_REGISTER("qdir_setpath",ring_QDir_setPath);
	RING_API_REGISTER("qdir_setsorting",ring_QDir_setSorting);
	RING_API_REGISTER("qdir_sorting",ring_QDir_sorting);
	RING_API_REGISTER("qdir_swap",ring_QDir_swap);
	RING_API_REGISTER("qdir_addsearchpath",ring_QDir_addSearchPath);
	RING_API_REGISTER("qdir_cleanpath",ring_QDir_cleanPath);
	RING_API_REGISTER("qdir_current",ring_QDir_current);
	RING_API_REGISTER("qdir_currentpath",ring_QDir_currentPath);
	RING_API_REGISTER("qdir_drives",ring_QDir_drives);
	RING_API_REGISTER("qdir_fromnativeseparators",ring_QDir_fromNativeSeparators);
	RING_API_REGISTER("qdir_home",ring_QDir_home);
	RING_API_REGISTER("qdir_homepath",ring_QDir_homePath);
	RING_API_REGISTER("qdir_isabsolutepath",ring_QDir_isAbsolutePath);
	RING_API_REGISTER("qdir_isrelativepath",ring_QDir_isRelativePath);
	RING_API_REGISTER("qdir_match",ring_QDir_match);
	RING_API_REGISTER("qdir_match_2",ring_QDir_match_2);
	RING_API_REGISTER("qdir_root",ring_QDir_root);
	RING_API_REGISTER("qdir_rootpath",ring_QDir_rootPath);
	RING_API_REGISTER("qdir_searchpaths",ring_QDir_searchPaths);
	RING_API_REGISTER("qdir_separator",ring_QDir_separator);
	RING_API_REGISTER("qdir_setcurrent",ring_QDir_setCurrent);
	RING_API_REGISTER("qdir_setsearchpaths",ring_QDir_setSearchPaths);
	RING_API_REGISTER("qdir_temp",ring_QDir_temp);
	RING_API_REGISTER("qdir_temppath",ring_QDir_tempPath);
	RING_API_REGISTER("qdir_tonativeseparators",ring_QDir_toNativeSeparators);
	RING_API_REGISTER("qurl_topleveldomain",ring_QUrl_topLevelDomain);
	RING_API_REGISTER("qurl_authority",ring_QUrl_authority);
	RING_API_REGISTER("qurl_clear",ring_QUrl_clear);
	RING_API_REGISTER("qurl_errorstring",ring_QUrl_errorString);
	RING_API_REGISTER("qurl_filename",ring_QUrl_fileName);
	RING_API_REGISTER("qurl_fragment",ring_QUrl_fragment);
	RING_API_REGISTER("qurl_hasfragment",ring_QUrl_hasFragment);
	RING_API_REGISTER("qurl_hasquery",ring_QUrl_hasQuery);
	RING_API_REGISTER("qurl_host",ring_QUrl_host);
	RING_API_REGISTER("qurl_isempty",ring_QUrl_isEmpty);
	RING_API_REGISTER("qurl_islocalfile",ring_QUrl_isLocalFile);
	RING_API_REGISTER("qurl_isparentof",ring_QUrl_isParentOf);
	RING_API_REGISTER("qurl_isrelative",ring_QUrl_isRelative);
	RING_API_REGISTER("qurl_isvalid",ring_QUrl_isValid);
	RING_API_REGISTER("qurl_password",ring_QUrl_password);
	RING_API_REGISTER("qurl_path",ring_QUrl_path);
	RING_API_REGISTER("qurl_port",ring_QUrl_port);
	RING_API_REGISTER("qurl_query",ring_QUrl_query);
	RING_API_REGISTER("qurl_resolved",ring_QUrl_resolved);
	RING_API_REGISTER("qurl_scheme",ring_QUrl_scheme);
	RING_API_REGISTER("qurl_setauthority",ring_QUrl_setAuthority);
	RING_API_REGISTER("qurl_setfragment",ring_QUrl_setFragment);
	RING_API_REGISTER("qurl_sethost",ring_QUrl_setHost);
	RING_API_REGISTER("qurl_setpassword",ring_QUrl_setPassword);
	RING_API_REGISTER("qurl_setpath",ring_QUrl_setPath);
	RING_API_REGISTER("qurl_setport",ring_QUrl_setPort);
	RING_API_REGISTER("qurl_setquery",ring_QUrl_setQuery);
	RING_API_REGISTER("qurl_setscheme",ring_QUrl_setScheme);
	RING_API_REGISTER("qurl_seturl",ring_QUrl_setUrl);
	RING_API_REGISTER("qurl_setuserinfo",ring_QUrl_setUserInfo);
	RING_API_REGISTER("qurl_setusername",ring_QUrl_setUserName);
	RING_API_REGISTER("qurl_swap",ring_QUrl_swap);
	RING_API_REGISTER("qurl_tolocalfile",ring_QUrl_toLocalFile);
	RING_API_REGISTER("qurl_userinfo",ring_QUrl_userInfo);
	RING_API_REGISTER("qurl_username",ring_QUrl_userName);
	RING_API_REGISTER("qurl_fromlocalfile",ring_QUrl_fromLocalFile);
	RING_API_REGISTER("qevent_accept",ring_QEvent_accept);
	RING_API_REGISTER("qevent_ignore",ring_QEvent_ignore);
	RING_API_REGISTER("qevent_isaccepted",ring_QEvent_isAccepted);
	RING_API_REGISTER("qevent_setaccepted",ring_QEvent_setAccepted);
	RING_API_REGISTER("qevent_spontaneous",ring_QEvent_spontaneous);
	RING_API_REGISTER("qevent_type",ring_QEvent_type);
	RING_API_REGISTER("qtimer_interval",ring_QTimer_interval);
	RING_API_REGISTER("qtimer_isactive",ring_QTimer_isActive);
	RING_API_REGISTER("qtimer_issingleshot",ring_QTimer_isSingleShot);
	RING_API_REGISTER("qtimer_setinterval",ring_QTimer_setInterval);
	RING_API_REGISTER("qtimer_setsingleshot",ring_QTimer_setSingleShot);
	RING_API_REGISTER("qtimer_timerid",ring_QTimer_timerId);
	RING_API_REGISTER("qtimer_start",ring_QTimer_start);
	RING_API_REGISTER("qtimer_stop",ring_QTimer_stop);
	RING_API_REGISTER("qtimer_settimeoutevent",ring_QTimer_settimeoutEvent);
	RING_API_REGISTER("qtimer_gettimeoutevent",ring_QTimer_gettimeoutEvent);
	RING_API_REGISTER("qbytearray_append",ring_QByteArray_append);
	RING_API_REGISTER("qbytearray_append_2",ring_QByteArray_append_2);
	RING_API_REGISTER("qbytearray_at",ring_QByteArray_at);
	RING_API_REGISTER("qbytearray_capacity",ring_QByteArray_capacity);
	RING_API_REGISTER("qbytearray_chop",ring_QByteArray_chop);
	RING_API_REGISTER("qbytearray_clear",ring_QByteArray_clear);
	RING_API_REGISTER("qbytearray_constdata",ring_QByteArray_constData);
	RING_API_REGISTER("qbytearray_contains",ring_QByteArray_contains);
	RING_API_REGISTER("qbytearray_count",ring_QByteArray_count);
	RING_API_REGISTER("qbytearray_data",ring_QByteArray_data);
	RING_API_REGISTER("qbytearray_endswith",ring_QByteArray_endsWith);
	RING_API_REGISTER("qbytearray_fill",ring_QByteArray_fill);
	RING_API_REGISTER("qbytearray_indexof",ring_QByteArray_indexOf);
	RING_API_REGISTER("qbytearray_insert",ring_QByteArray_insert);
	RING_API_REGISTER("qbytearray_isempty",ring_QByteArray_isEmpty);
	RING_API_REGISTER("qbytearray_isnull",ring_QByteArray_isNull);
	RING_API_REGISTER("qbytearray_lastindexof",ring_QByteArray_lastIndexOf);
	RING_API_REGISTER("qbytearray_left",ring_QByteArray_left);
	RING_API_REGISTER("qbytearray_leftjustified",ring_QByteArray_leftJustified);
	RING_API_REGISTER("qbytearray_length",ring_QByteArray_length);
	RING_API_REGISTER("qbytearray_mid",ring_QByteArray_mid);
	RING_API_REGISTER("qbytearray_prepend",ring_QByteArray_prepend);
	RING_API_REGISTER("qbytearray_push_back",ring_QByteArray_push_back);
	RING_API_REGISTER("qbytearray_push_front",ring_QByteArray_push_front);
	RING_API_REGISTER("qbytearray_remove",ring_QByteArray_remove);
	RING_API_REGISTER("qbytearray_repeated",ring_QByteArray_repeated);
	RING_API_REGISTER("qbytearray_replace",ring_QByteArray_replace);
	RING_API_REGISTER("qbytearray_replace_2",ring_QByteArray_replace_2);
	RING_API_REGISTER("qbytearray_replace_3",ring_QByteArray_replace_3);
	RING_API_REGISTER("qbytearray_replace_4",ring_QByteArray_replace_4);
	RING_API_REGISTER("qbytearray_replace_5",ring_QByteArray_replace_5);
	RING_API_REGISTER("qbytearray_replace_6",ring_QByteArray_replace_6);
	RING_API_REGISTER("qbytearray_replace_7",ring_QByteArray_replace_7);
	RING_API_REGISTER("qbytearray_replace_8",ring_QByteArray_replace_8);
	RING_API_REGISTER("qbytearray_replace_9",ring_QByteArray_replace_9);
	RING_API_REGISTER("qbytearray_replace_10",ring_QByteArray_replace_10);
	RING_API_REGISTER("qbytearray_replace_11",ring_QByteArray_replace_11);
	RING_API_REGISTER("qbytearray_reserve",ring_QByteArray_reserve);
	RING_API_REGISTER("qbytearray_resize",ring_QByteArray_resize);
	RING_API_REGISTER("qbytearray_right",ring_QByteArray_right);
	RING_API_REGISTER("qbytearray_rightjustified",ring_QByteArray_rightJustified);
	RING_API_REGISTER("qbytearray_setnum",ring_QByteArray_setNum);
	RING_API_REGISTER("qbytearray_setrawdata",ring_QByteArray_setRawData);
	RING_API_REGISTER("qbytearray_simplified",ring_QByteArray_simplified);
	RING_API_REGISTER("qbytearray_size",ring_QByteArray_size);
	RING_API_REGISTER("qbytearray_squeeze",ring_QByteArray_squeeze);
	RING_API_REGISTER("qbytearray_startswith",ring_QByteArray_startsWith);
	RING_API_REGISTER("qbytearray_swap",ring_QByteArray_swap);
	RING_API_REGISTER("qbytearray_tobase64",ring_QByteArray_toBase64);
	RING_API_REGISTER("qbytearray_todouble",ring_QByteArray_toDouble);
	RING_API_REGISTER("qbytearray_tofloat",ring_QByteArray_toFloat);
	RING_API_REGISTER("qbytearray_tohex",ring_QByteArray_toHex);
	RING_API_REGISTER("qbytearray_toint",ring_QByteArray_toInt);
	RING_API_REGISTER("qbytearray_tolong",ring_QByteArray_toLong);
	RING_API_REGISTER("qbytearray_tolonglong",ring_QByteArray_toLongLong);
	RING_API_REGISTER("qbytearray_tolower",ring_QByteArray_toLower);
	RING_API_REGISTER("qbytearray_topercentencoding",ring_QByteArray_toPercentEncoding);
	RING_API_REGISTER("qbytearray_toshort",ring_QByteArray_toShort);
	RING_API_REGISTER("qbytearray_touint",ring_QByteArray_toUInt);
	RING_API_REGISTER("qbytearray_toulong",ring_QByteArray_toULong);
	RING_API_REGISTER("qbytearray_toulonglong",ring_QByteArray_toULongLong);
	RING_API_REGISTER("qbytearray_toushort",ring_QByteArray_toUShort);
	RING_API_REGISTER("qbytearray_toupper",ring_QByteArray_toUpper);
	RING_API_REGISTER("qbytearray_trimmed",ring_QByteArray_trimmed);
	RING_API_REGISTER("qbytearray_truncate",ring_QByteArray_truncate);
	RING_API_REGISTER("qbytearray_frombase64",ring_QByteArray_fromBase64);
	RING_API_REGISTER("qbytearray_fromhex",ring_QByteArray_fromHex);
	RING_API_REGISTER("qbytearray_frompercentencoding",ring_QByteArray_fromPercentEncoding);
	RING_API_REGISTER("qbytearray_fromrawdata",ring_QByteArray_fromRawData);
	RING_API_REGISTER("qbytearray_number",ring_QByteArray_number);
	RING_API_REGISTER("qiodevice_errorstring",ring_QIODevice_errorString);
	RING_API_REGISTER("qiodevice_getchar",ring_QIODevice_getChar);
	RING_API_REGISTER("qiodevice_isopen",ring_QIODevice_isOpen);
	RING_API_REGISTER("qiodevice_isreadable",ring_QIODevice_isReadable);
	RING_API_REGISTER("qiodevice_istextmodeenabled",ring_QIODevice_isTextModeEnabled);
	RING_API_REGISTER("qiodevice_iswritable",ring_QIODevice_isWritable);
	RING_API_REGISTER("qiodevice_openmode",ring_QIODevice_openMode);
	RING_API_REGISTER("qiodevice_peek",ring_QIODevice_peek);
	RING_API_REGISTER("qiodevice_putchar",ring_QIODevice_putChar);
	RING_API_REGISTER("qiodevice_read",ring_QIODevice_read);
	RING_API_REGISTER("qiodevice_readall",ring_QIODevice_readAll);
	RING_API_REGISTER("qiodevice_readline",ring_QIODevice_readLine);
	RING_API_REGISTER("qiodevice_settextmodeenabled",ring_QIODevice_setTextModeEnabled);
	RING_API_REGISTER("qiodevice_ungetchar",ring_QIODevice_ungetChar);
	RING_API_REGISTER("qiodevice_write",ring_QIODevice_write);
	RING_API_REGISTER("qiodevice_atend",ring_QIODevice_atEnd);
	RING_API_REGISTER("qiodevice_canreadline",ring_QIODevice_canReadLine);
	RING_API_REGISTER("qiodevice_close",ring_QIODevice_close);
	RING_API_REGISTER("qiodevice_open",ring_QIODevice_open);
	RING_API_REGISTER("qiodevice_pos",ring_QIODevice_pos);
	RING_API_REGISTER("qiodevice_seek",ring_QIODevice_seek);
	RING_API_REGISTER("qiodevice_size",ring_QIODevice_size);
	RING_API_REGISTER("qiodevice_setabouttocloseevent",ring_QIODevice_setaboutToCloseEvent);
	RING_API_REGISTER("qiodevice_setbyteswrittenevent",ring_QIODevice_setbytesWrittenEvent);
	RING_API_REGISTER("qiodevice_setreadchannelfinishedevent",ring_QIODevice_setreadChannelFinishedEvent);
	RING_API_REGISTER("qiodevice_setreadyreadevent",ring_QIODevice_setreadyReadEvent);
	RING_API_REGISTER("qiodevice_getabouttocloseevent",ring_QIODevice_getaboutToCloseEvent);
	RING_API_REGISTER("qiodevice_getbyteswrittenevent",ring_QIODevice_getbytesWrittenEvent);
	RING_API_REGISTER("qiodevice_getreadchannelfinishedevent",ring_QIODevice_getreadChannelFinishedEvent);
	RING_API_REGISTER("qiodevice_getreadyreadevent",ring_QIODevice_getreadyReadEvent);
	RING_API_REGISTER("qfileinfo_created",ring_QFileInfo_created);
	RING_API_REGISTER("qfileinfo_absolutedir",ring_QFileInfo_absoluteDir);
	RING_API_REGISTER("qfileinfo_absolutefilepath",ring_QFileInfo_absoluteFilePath);
	RING_API_REGISTER("qfileinfo_absolutepath",ring_QFileInfo_absolutePath);
	RING_API_REGISTER("qfileinfo_basename",ring_QFileInfo_baseName);
	RING_API_REGISTER("qfileinfo_bundlename",ring_QFileInfo_bundleName);
	RING_API_REGISTER("qfileinfo_caching",ring_QFileInfo_caching);
	RING_API_REGISTER("qfileinfo_canonicalfilepath",ring_QFileInfo_canonicalFilePath);
	RING_API_REGISTER("qfileinfo_canonicalpath",ring_QFileInfo_canonicalPath);
	RING_API_REGISTER("qfileinfo_completebasename",ring_QFileInfo_completeBaseName);
	RING_API_REGISTER("qfileinfo_completesuffix",ring_QFileInfo_completeSuffix);
	RING_API_REGISTER("qfileinfo_dir",ring_QFileInfo_dir);
	RING_API_REGISTER("qfileinfo_exists",ring_QFileInfo_exists);
	RING_API_REGISTER("qfileinfo_filename",ring_QFileInfo_fileName);
	RING_API_REGISTER("qfileinfo_filepath",ring_QFileInfo_filePath);
	RING_API_REGISTER("qfileinfo_group",ring_QFileInfo_group);
	RING_API_REGISTER("qfileinfo_groupid",ring_QFileInfo_groupId);
	RING_API_REGISTER("qfileinfo_isabsolute",ring_QFileInfo_isAbsolute);
	RING_API_REGISTER("qfileinfo_isbundle",ring_QFileInfo_isBundle);
	RING_API_REGISTER("qfileinfo_isdir",ring_QFileInfo_isDir);
	RING_API_REGISTER("qfileinfo_isexecutable",ring_QFileInfo_isExecutable);
	RING_API_REGISTER("qfileinfo_isfile",ring_QFileInfo_isFile);
	RING_API_REGISTER("qfileinfo_ishidden",ring_QFileInfo_isHidden);
	RING_API_REGISTER("qfileinfo_isnativepath",ring_QFileInfo_isNativePath);
	RING_API_REGISTER("qfileinfo_isreadable",ring_QFileInfo_isReadable);
	RING_API_REGISTER("qfileinfo_isrelative",ring_QFileInfo_isRelative);
	RING_API_REGISTER("qfileinfo_isroot",ring_QFileInfo_isRoot);
	RING_API_REGISTER("qfileinfo_issymlink",ring_QFileInfo_isSymLink);
	RING_API_REGISTER("qfileinfo_iswritable",ring_QFileInfo_isWritable);
	RING_API_REGISTER("qfileinfo_lastmodified",ring_QFileInfo_lastModified);
	RING_API_REGISTER("qfileinfo_lastread",ring_QFileInfo_lastRead);
	RING_API_REGISTER("qfileinfo_makeabsolute",ring_QFileInfo_makeAbsolute);
	RING_API_REGISTER("qfileinfo_owner",ring_QFileInfo_owner);
	RING_API_REGISTER("qfileinfo_ownerid",ring_QFileInfo_ownerId);
	RING_API_REGISTER("qfileinfo_path",ring_QFileInfo_path);
	RING_API_REGISTER("qfileinfo_permission",ring_QFileInfo_permission);
	RING_API_REGISTER("qfileinfo_permissions",ring_QFileInfo_permissions);
	RING_API_REGISTER("qfileinfo_refresh",ring_QFileInfo_refresh);
	RING_API_REGISTER("qfileinfo_setcaching",ring_QFileInfo_setCaching);
	RING_API_REGISTER("qfileinfo_setfile",ring_QFileInfo_setFile);
	RING_API_REGISTER("qfileinfo_size",ring_QFileInfo_size);
	RING_API_REGISTER("qfileinfo_suffix",ring_QFileInfo_suffix);
	RING_API_REGISTER("qfileinfo_swap",ring_QFileInfo_swap);
	RING_API_REGISTER("qfileinfo_symlinktarget",ring_QFileInfo_symLinkTarget);
	RING_API_REGISTER("qstringlist_swap",ring_QStringList_swap);
	RING_API_REGISTER("qstringlist_join",ring_QStringList_join);
	RING_API_REGISTER("qstringlist_sort",ring_QStringList_sort);
	RING_API_REGISTER("qstringlist_removeduplicates",ring_QStringList_removeDuplicates);
	RING_API_REGISTER("qstringlist_filter",ring_QStringList_filter);
	RING_API_REGISTER("qstringlist_replaceinstrings",ring_QStringList_replaceInStrings);
	RING_API_REGISTER("qstringlist_append",ring_QStringList_append);
	RING_API_REGISTER("qstringlist_at",ring_QStringList_at);
	RING_API_REGISTER("qstringlist_back",ring_QStringList_back);
	RING_API_REGISTER("qstringlist_clear",ring_QStringList_clear);
	RING_API_REGISTER("qstringlist_contains",ring_QStringList_contains);
	RING_API_REGISTER("qstringlist_count",ring_QStringList_count);
	RING_API_REGISTER("qstringlist_empty",ring_QStringList_empty);
	RING_API_REGISTER("qstringlist_endswith",ring_QStringList_endsWith);
	RING_API_REGISTER("qstringlist_first",ring_QStringList_first);
	RING_API_REGISTER("qstringlist_front",ring_QStringList_front);
	RING_API_REGISTER("qstringlist_indexof",ring_QStringList_indexOf);
	RING_API_REGISTER("qstringlist_insert",ring_QStringList_insert);
	RING_API_REGISTER("qstringlist_isempty",ring_QStringList_isEmpty);
	RING_API_REGISTER("qstringlist_last",ring_QStringList_last);
	RING_API_REGISTER("qstringlist_lastindexof",ring_QStringList_lastIndexOf);
	RING_API_REGISTER("qstringlist_length",ring_QStringList_length);
	RING_API_REGISTER("qstringlist_move",ring_QStringList_move);
	RING_API_REGISTER("qstringlist_pop_back",ring_QStringList_pop_back);
	RING_API_REGISTER("qstringlist_pop_front",ring_QStringList_pop_front);
	RING_API_REGISTER("qstringlist_prepend",ring_QStringList_prepend);
	RING_API_REGISTER("qstringlist_push_back",ring_QStringList_push_back);
	RING_API_REGISTER("qstringlist_push_front",ring_QStringList_push_front);
	RING_API_REGISTER("qstringlist_removeall",ring_QStringList_removeAll);
	RING_API_REGISTER("qstringlist_removeat",ring_QStringList_removeAt);
	RING_API_REGISTER("qstringlist_removefirst",ring_QStringList_removeFirst);
	RING_API_REGISTER("qstringlist_removelast",ring_QStringList_removeLast);
	RING_API_REGISTER("qstringlist_removeone",ring_QStringList_removeOne);
	RING_API_REGISTER("qstringlist_replace",ring_QStringList_replace);
	RING_API_REGISTER("qstringlist_reserve",ring_QStringList_reserve);
	RING_API_REGISTER("qstringlist_size",ring_QStringList_size);
	RING_API_REGISTER("qstringlist_startswith",ring_QStringList_startsWith);
	RING_API_REGISTER("qstringlist_takeat",ring_QStringList_takeAt);
	RING_API_REGISTER("qstringlist_takefirst",ring_QStringList_takeFirst);
	RING_API_REGISTER("qstringlist_takelast",ring_QStringList_takeLast);
	RING_API_REGISTER("qstringlist_value",ring_QStringList_value);
	RING_API_REGISTER("qrect_adjust",ring_QRect_adjust);
	RING_API_REGISTER("qrect_adjusted",ring_QRect_adjusted);
	RING_API_REGISTER("qrect_bottom",ring_QRect_bottom);
	RING_API_REGISTER("qrect_bottomleft",ring_QRect_bottomLeft);
	RING_API_REGISTER("qrect_bottomright",ring_QRect_bottomRight);
	RING_API_REGISTER("qrect_center",ring_QRect_center);
	RING_API_REGISTER("qrect_contains",ring_QRect_contains);
	RING_API_REGISTER("qrect_getcoords",ring_QRect_getCoords);
	RING_API_REGISTER("qrect_getrect",ring_QRect_getRect);
	RING_API_REGISTER("qrect_height",ring_QRect_height);
	RING_API_REGISTER("qrect_intersected",ring_QRect_intersected);
	RING_API_REGISTER("qrect_intersects",ring_QRect_intersects);
	RING_API_REGISTER("qrect_isempty",ring_QRect_isEmpty);
	RING_API_REGISTER("qrect_isnull",ring_QRect_isNull);
	RING_API_REGISTER("qrect_isvalid",ring_QRect_isValid);
	RING_API_REGISTER("qrect_left",ring_QRect_left);
	RING_API_REGISTER("qrect_movebottom",ring_QRect_moveBottom);
	RING_API_REGISTER("qrect_movebottomleft",ring_QRect_moveBottomLeft);
	RING_API_REGISTER("qrect_movebottomright",ring_QRect_moveBottomRight);
	RING_API_REGISTER("qrect_movecenter",ring_QRect_moveCenter);
	RING_API_REGISTER("qrect_moveleft",ring_QRect_moveLeft);
	RING_API_REGISTER("qrect_moveright",ring_QRect_moveRight);
	RING_API_REGISTER("qrect_moveto",ring_QRect_moveTo);
	RING_API_REGISTER("qrect_movetop",ring_QRect_moveTop);
	RING_API_REGISTER("qrect_movetopleft",ring_QRect_moveTopLeft);
	RING_API_REGISTER("qrect_movetopright",ring_QRect_moveTopRight);
	RING_API_REGISTER("qrect_normalized",ring_QRect_normalized);
	RING_API_REGISTER("qrect_right",ring_QRect_right);
	RING_API_REGISTER("qrect_setbottom",ring_QRect_setBottom);
	RING_API_REGISTER("qrect_setbottomleft",ring_QRect_setBottomLeft);
	RING_API_REGISTER("qrect_setbottomright",ring_QRect_setBottomRight);
	RING_API_REGISTER("qrect_setcoords",ring_QRect_setCoords);
	RING_API_REGISTER("qrect_setheight",ring_QRect_setHeight);
	RING_API_REGISTER("qrect_setleft",ring_QRect_setLeft);
	RING_API_REGISTER("qrect_setrect",ring_QRect_setRect);
	RING_API_REGISTER("qrect_setright",ring_QRect_setRight);
	RING_API_REGISTER("qrect_setsize",ring_QRect_setSize);
	RING_API_REGISTER("qrect_settop",ring_QRect_setTop);
	RING_API_REGISTER("qrect_settopleft",ring_QRect_setTopLeft);
	RING_API_REGISTER("qrect_settopright",ring_QRect_setTopRight);
	RING_API_REGISTER("qrect_setwidth",ring_QRect_setWidth);
	RING_API_REGISTER("qrect_setx",ring_QRect_setX);
	RING_API_REGISTER("qrect_sety",ring_QRect_setY);
	RING_API_REGISTER("qrect_size",ring_QRect_size);
	RING_API_REGISTER("qrect_top",ring_QRect_top);
	RING_API_REGISTER("qrect_topleft",ring_QRect_topLeft);
	RING_API_REGISTER("qrect_topright",ring_QRect_topRight);
	RING_API_REGISTER("qrect_translate",ring_QRect_translate);
	RING_API_REGISTER("qrect_translated",ring_QRect_translated);
	RING_API_REGISTER("qrect_united",ring_QRect_united);
	RING_API_REGISTER("qrect_width",ring_QRect_width);
	RING_API_REGISTER("qrect_x",ring_QRect_x);
	RING_API_REGISTER("qrect_y",ring_QRect_y);
	RING_API_REGISTER("qtime_elapsed",ring_QTime_elapsed);
	RING_API_REGISTER("qtime_restart",ring_QTime_restart);
	RING_API_REGISTER("qtime_start",ring_QTime_start);
	RING_API_REGISTER("qtime_addmsecs",ring_QTime_addMSecs);
	RING_API_REGISTER("qtime_addsecs",ring_QTime_addSecs);
	RING_API_REGISTER("qtime_hour",ring_QTime_hour);
	RING_API_REGISTER("qtime_isnull",ring_QTime_isNull);
	RING_API_REGISTER("qtime_isvalid",ring_QTime_isValid);
	RING_API_REGISTER("qtime_minute",ring_QTime_minute);
	RING_API_REGISTER("qtime_msec",ring_QTime_msec);
	RING_API_REGISTER("qtime_msecssincestartofday",ring_QTime_msecsSinceStartOfDay);
	RING_API_REGISTER("qtime_msecsto",ring_QTime_msecsTo);
	RING_API_REGISTER("qtime_second",ring_QTime_second);
	RING_API_REGISTER("qtime_secsto",ring_QTime_secsTo);
	RING_API_REGISTER("qtime_sethms",ring_QTime_setHMS);
	RING_API_REGISTER("qtime_tostring",ring_QTime_toString);
	RING_API_REGISTER("qtime_currenttime",ring_QTime_currentTime);
	RING_API_REGISTER("qtime_frommsecssincestartofday",ring_QTime_fromMSecsSinceStartOfDay);
	RING_API_REGISTER("qtime_fromstring",ring_QTime_fromString);
	RING_API_REGISTER("qdate_longdayname",ring_QDate_longDayName);
	RING_API_REGISTER("qdate_longmonthname",ring_QDate_longMonthName);
	RING_API_REGISTER("qdate_shortdayname",ring_QDate_shortDayName);
	RING_API_REGISTER("qdate_shortmonthname",ring_QDate_shortMonthName);
	RING_API_REGISTER("qdate_adddays",ring_QDate_addDays);
	RING_API_REGISTER("qdate_addmonths",ring_QDate_addMonths);
	RING_API_REGISTER("qdate_addyears",ring_QDate_addYears);
	RING_API_REGISTER("qdate_day",ring_QDate_day);
	RING_API_REGISTER("qdate_dayofweek",ring_QDate_dayOfWeek);
	RING_API_REGISTER("qdate_dayofyear",ring_QDate_dayOfYear);
	RING_API_REGISTER("qdate_daysinmonth",ring_QDate_daysInMonth);
	RING_API_REGISTER("qdate_daysinyear",ring_QDate_daysInYear);
	RING_API_REGISTER("qdate_daysto",ring_QDate_daysTo);
	RING_API_REGISTER("qdate_getdate",ring_QDate_getDate);
	RING_API_REGISTER("qdate_isnull",ring_QDate_isNull);
	RING_API_REGISTER("qdate_isvalid",ring_QDate_isValid);
	RING_API_REGISTER("qdate_month",ring_QDate_month);
	RING_API_REGISTER("qdate_setdate",ring_QDate_setDate);
	RING_API_REGISTER("qdate_tojulianday",ring_QDate_toJulianDay);
	RING_API_REGISTER("qdate_tostring",ring_QDate_toString);
	RING_API_REGISTER("qdate_weeknumber",ring_QDate_weekNumber);
	RING_API_REGISTER("qdate_year",ring_QDate_year);
	RING_API_REGISTER("qdate_currentdate",ring_QDate_currentDate);
	RING_API_REGISTER("qdate_fromjulianday",ring_QDate_fromJulianDay);
	RING_API_REGISTER("qdate_fromstring",ring_QDate_fromString);
	RING_API_REGISTER("qdate_isleapyear",ring_QDate_isLeapYear);
	RING_API_REGISTER("qtextcodec_codecforname",ring_QTextCodec_codecForName);
	RING_API_REGISTER("qtextcodec_setcodecforlocale",ring_QTextCodec_setCodecForLocale);
	RING_API_REGISTER("qvariant_canconvert",ring_QVariant_canConvert);
	RING_API_REGISTER("qvariant_clear",ring_QVariant_clear);
	RING_API_REGISTER("qvariant_convert",ring_QVariant_convert);
	RING_API_REGISTER("qvariant_isnull",ring_QVariant_isNull);
	RING_API_REGISTER("qvariant_isvalid",ring_QVariant_isValid);
	RING_API_REGISTER("qvariant_swap",ring_QVariant_swap);
	RING_API_REGISTER("qvariant_tobitarray",ring_QVariant_toBitArray);
	RING_API_REGISTER("qvariant_tobool",ring_QVariant_toBool);
	RING_API_REGISTER("qvariant_tobytearray",ring_QVariant_toByteArray);
	RING_API_REGISTER("qvariant_tochar",ring_QVariant_toChar);
	RING_API_REGISTER("qvariant_todate",ring_QVariant_toDate);
	RING_API_REGISTER("qvariant_todatetime",ring_QVariant_toDateTime);
	RING_API_REGISTER("qvariant_todouble",ring_QVariant_toDouble);
	RING_API_REGISTER("qvariant_toeasingcurve",ring_QVariant_toEasingCurve);
	RING_API_REGISTER("qvariant_tofloat",ring_QVariant_toFloat);
	RING_API_REGISTER("qvariant_toint",ring_QVariant_toInt);
	RING_API_REGISTER("qvariant_tojsonarray",ring_QVariant_toJsonArray);
	RING_API_REGISTER("qvariant_tojsondocument",ring_QVariant_toJsonDocument);
	RING_API_REGISTER("qvariant_tojsonobject",ring_QVariant_toJsonObject);
	RING_API_REGISTER("qvariant_tojsonvalue",ring_QVariant_toJsonValue);
	RING_API_REGISTER("qvariant_toline",ring_QVariant_toLine);
	RING_API_REGISTER("qvariant_tolinef",ring_QVariant_toLineF);
	RING_API_REGISTER("qvariant_tolocale",ring_QVariant_toLocale);
	RING_API_REGISTER("qvariant_tolonglong",ring_QVariant_toLongLong);
	RING_API_REGISTER("qvariant_tomodelindex",ring_QVariant_toModelIndex);
	RING_API_REGISTER("qvariant_topoint",ring_QVariant_toPoint);
	RING_API_REGISTER("qvariant_topointf",ring_QVariant_toPointF);
	RING_API_REGISTER("qvariant_toreal",ring_QVariant_toReal);
	RING_API_REGISTER("qvariant_torect",ring_QVariant_toRect);
	RING_API_REGISTER("qvariant_torectf",ring_QVariant_toRectF);
	RING_API_REGISTER("qvariant_toregexp",ring_QVariant_toRegExp);
	RING_API_REGISTER("qvariant_toregularexpression",ring_QVariant_toRegularExpression);
	RING_API_REGISTER("qvariant_tosize",ring_QVariant_toSize);
	RING_API_REGISTER("qvariant_tosizef",ring_QVariant_toSizeF);
	RING_API_REGISTER("qvariant_tostringlist",ring_QVariant_toStringList);
	RING_API_REGISTER("qvariant_totime",ring_QVariant_toTime);
	RING_API_REGISTER("qvariant_touint",ring_QVariant_toUInt);
	RING_API_REGISTER("qvariant_toulonglong",ring_QVariant_toULongLong);
	RING_API_REGISTER("qvariant_tourl",ring_QVariant_toUrl);
	RING_API_REGISTER("qvariant_touuid",ring_QVariant_toUuid);
	RING_API_REGISTER("qvariant_type",ring_QVariant_type);
	RING_API_REGISTER("qvariant_typename",ring_QVariant_typeName);
	RING_API_REGISTER("qvariant_usertype",ring_QVariant_userType);
	RING_API_REGISTER("qvariant_tostring",ring_QVariant_toString);
	RING_API_REGISTER("qxmlstreamreader_adddata",ring_QXmlStreamReader_addData);
	RING_API_REGISTER("qxmlstreamreader_adddata_2",ring_QXmlStreamReader_addData_2);
	RING_API_REGISTER("qxmlstreamreader_adddata_3",ring_QXmlStreamReader_addData_3);
	RING_API_REGISTER("qxmlstreamreader_addextranamespacedeclaration",ring_QXmlStreamReader_addExtraNamespaceDeclaration);
	RING_API_REGISTER("qxmlstreamreader_addextranamespacedeclarations",ring_QXmlStreamReader_addExtraNamespaceDeclarations);
	RING_API_REGISTER("qxmlstreamreader_atend",ring_QXmlStreamReader_atEnd);
	RING_API_REGISTER("qxmlstreamreader_attributes",ring_QXmlStreamReader_attributes);
	RING_API_REGISTER("qxmlstreamreader_characteroffset",ring_QXmlStreamReader_characterOffset);
	RING_API_REGISTER("qxmlstreamreader_clear",ring_QXmlStreamReader_clear);
	RING_API_REGISTER("qxmlstreamreader_columnnumber",ring_QXmlStreamReader_columnNumber);
	RING_API_REGISTER("qxmlstreamreader_device",ring_QXmlStreamReader_device);
	RING_API_REGISTER("qxmlstreamreader_documentencoding",ring_QXmlStreamReader_documentEncoding);
	RING_API_REGISTER("qxmlstreamreader_documentversion",ring_QXmlStreamReader_documentVersion);
	RING_API_REGISTER("qxmlstreamreader_dtdname",ring_QXmlStreamReader_dtdName);
	RING_API_REGISTER("qxmlstreamreader_dtdpublicid",ring_QXmlStreamReader_dtdPublicId);
	RING_API_REGISTER("qxmlstreamreader_dtdsystemid",ring_QXmlStreamReader_dtdSystemId);
	RING_API_REGISTER("qxmlstreamreader_entitydeclarations",ring_QXmlStreamReader_entityDeclarations);
	RING_API_REGISTER("qxmlstreamreader_entityresolver",ring_QXmlStreamReader_entityResolver);
	RING_API_REGISTER("qxmlstreamreader_error",ring_QXmlStreamReader_error);
	RING_API_REGISTER("qxmlstreamreader_errorstring",ring_QXmlStreamReader_errorString);
	RING_API_REGISTER("qxmlstreamreader_haserror",ring_QXmlStreamReader_hasError);
	RING_API_REGISTER("qxmlstreamreader_iscdata",ring_QXmlStreamReader_isCDATA);
	RING_API_REGISTER("qxmlstreamreader_ischaracters",ring_QXmlStreamReader_isCharacters);
	RING_API_REGISTER("qxmlstreamreader_iscomment",ring_QXmlStreamReader_isComment);
	RING_API_REGISTER("qxmlstreamreader_isdtd",ring_QXmlStreamReader_isDTD);
	RING_API_REGISTER("qxmlstreamreader_isenddocument",ring_QXmlStreamReader_isEndDocument);
	RING_API_REGISTER("qxmlstreamreader_isendelement",ring_QXmlStreamReader_isEndElement);
	RING_API_REGISTER("qxmlstreamreader_isentityreference",ring_QXmlStreamReader_isEntityReference);
	RING_API_REGISTER("qxmlstreamreader_isprocessinginstruction",ring_QXmlStreamReader_isProcessingInstruction);
	RING_API_REGISTER("qxmlstreamreader_isstandalonedocument",ring_QXmlStreamReader_isStandaloneDocument);
	RING_API_REGISTER("qxmlstreamreader_isstartdocument",ring_QXmlStreamReader_isStartDocument);
	RING_API_REGISTER("qxmlstreamreader_isstartelement",ring_QXmlStreamReader_isStartElement);
	RING_API_REGISTER("qxmlstreamreader_iswhitespace",ring_QXmlStreamReader_isWhitespace);
	RING_API_REGISTER("qxmlstreamreader_linenumber",ring_QXmlStreamReader_lineNumber);
	RING_API_REGISTER("qxmlstreamreader_name",ring_QXmlStreamReader_name);
	RING_API_REGISTER("qxmlstreamreader_namespacedeclarations",ring_QXmlStreamReader_namespaceDeclarations);
	RING_API_REGISTER("qxmlstreamreader_namespaceprocessing",ring_QXmlStreamReader_namespaceProcessing);
	RING_API_REGISTER("qxmlstreamreader_namespaceuri",ring_QXmlStreamReader_namespaceUri);
	RING_API_REGISTER("qxmlstreamreader_notationdeclarations",ring_QXmlStreamReader_notationDeclarations);
	RING_API_REGISTER("qxmlstreamreader_prefix",ring_QXmlStreamReader_prefix);
	RING_API_REGISTER("qxmlstreamreader_processinginstructiondata",ring_QXmlStreamReader_processingInstructionData);
	RING_API_REGISTER("qxmlstreamreader_processinginstructiontarget",ring_QXmlStreamReader_processingInstructionTarget);
	RING_API_REGISTER("qxmlstreamreader_qualifiedname",ring_QXmlStreamReader_qualifiedName);
	RING_API_REGISTER("qxmlstreamreader_raiseerror",ring_QXmlStreamReader_raiseError);
	RING_API_REGISTER("qxmlstreamreader_readelementtext",ring_QXmlStreamReader_readElementText);
	RING_API_REGISTER("qxmlstreamreader_readnext",ring_QXmlStreamReader_readNext);
	RING_API_REGISTER("qxmlstreamreader_readnextstartelement",ring_QXmlStreamReader_readNextStartElement);
	RING_API_REGISTER("qxmlstreamreader_setdevice",ring_QXmlStreamReader_setDevice);
	RING_API_REGISTER("qxmlstreamreader_setentityresolver",ring_QXmlStreamReader_setEntityResolver);
	RING_API_REGISTER("qxmlstreamreader_setnamespaceprocessing",ring_QXmlStreamReader_setNamespaceProcessing);
	RING_API_REGISTER("qxmlstreamreader_skipcurrentelement",ring_QXmlStreamReader_skipCurrentElement);
	RING_API_REGISTER("qxmlstreamreader_text",ring_QXmlStreamReader_text);
	RING_API_REGISTER("qxmlstreamreader_tokenstring",ring_QXmlStreamReader_tokenString);
	RING_API_REGISTER("qxmlstreamreader_tokentype",ring_QXmlStreamReader_tokenType);
	RING_API_REGISTER("qxmlstreamwriter_autoformatting",ring_QXmlStreamWriter_autoFormatting);
	RING_API_REGISTER("qxmlstreamwriter_autoformattingindent",ring_QXmlStreamWriter_autoFormattingIndent);
	RING_API_REGISTER("qxmlstreamwriter_codec",ring_QXmlStreamWriter_codec);
	RING_API_REGISTER("qxmlstreamwriter_device",ring_QXmlStreamWriter_device);
	RING_API_REGISTER("qxmlstreamwriter_haserror",ring_QXmlStreamWriter_hasError);
	RING_API_REGISTER("qxmlstreamwriter_setautoformatting",ring_QXmlStreamWriter_setAutoFormatting);
	RING_API_REGISTER("qxmlstreamwriter_setautoformattingindent",ring_QXmlStreamWriter_setAutoFormattingIndent);
	RING_API_REGISTER("qxmlstreamwriter_setcodec",ring_QXmlStreamWriter_setCodec);
	RING_API_REGISTER("qxmlstreamwriter_setcodec_2",ring_QXmlStreamWriter_setCodec_2);
	RING_API_REGISTER("qxmlstreamwriter_setdevice",ring_QXmlStreamWriter_setDevice);
	RING_API_REGISTER("qxmlstreamwriter_writeattribute",ring_QXmlStreamWriter_writeAttribute);
	RING_API_REGISTER("qxmlstreamwriter_writeattribute_2",ring_QXmlStreamWriter_writeAttribute_2);
	RING_API_REGISTER("qxmlstreamwriter_writeattribute_3",ring_QXmlStreamWriter_writeAttribute_3);
	RING_API_REGISTER("qxmlstreamwriter_writeattributes",ring_QXmlStreamWriter_writeAttributes);
	RING_API_REGISTER("qxmlstreamwriter_writecdata",ring_QXmlStreamWriter_writeCDATA);
	RING_API_REGISTER("qxmlstreamwriter_writecharacters",ring_QXmlStreamWriter_writeCharacters);
	RING_API_REGISTER("qxmlstreamwriter_writecomment",ring_QXmlStreamWriter_writeComment);
	RING_API_REGISTER("qxmlstreamwriter_writecurrenttoken",ring_QXmlStreamWriter_writeCurrentToken);
	RING_API_REGISTER("qxmlstreamwriter_writedtd",ring_QXmlStreamWriter_writeDTD);
	RING_API_REGISTER("qxmlstreamwriter_writedefaultnamespace",ring_QXmlStreamWriter_writeDefaultNamespace);
	RING_API_REGISTER("qxmlstreamwriter_writeemptyelement",ring_QXmlStreamWriter_writeEmptyElement);
	RING_API_REGISTER("qxmlstreamwriter_writeemptyelement_2",ring_QXmlStreamWriter_writeEmptyElement_2);
	RING_API_REGISTER("qxmlstreamwriter_writeenddocument",ring_QXmlStreamWriter_writeEndDocument);
	RING_API_REGISTER("qxmlstreamwriter_writeendelement",ring_QXmlStreamWriter_writeEndElement);
	RING_API_REGISTER("qxmlstreamwriter_writeentityreference",ring_QXmlStreamWriter_writeEntityReference);
	RING_API_REGISTER("qxmlstreamwriter_writenamespace",ring_QXmlStreamWriter_writeNamespace);
	RING_API_REGISTER("qxmlstreamwriter_writeprocessinginstruction",ring_QXmlStreamWriter_writeProcessingInstruction);
	RING_API_REGISTER("qxmlstreamwriter_writestartdocument",ring_QXmlStreamWriter_writeStartDocument);
	RING_API_REGISTER("qxmlstreamwriter_writestartdocument_2",ring_QXmlStreamWriter_writeStartDocument_2);
	RING_API_REGISTER("qxmlstreamwriter_writestartdocument_3",ring_QXmlStreamWriter_writeStartDocument_3);
	RING_API_REGISTER("qxmlstreamwriter_writestartelement",ring_QXmlStreamWriter_writeStartElement);
	RING_API_REGISTER("qxmlstreamwriter_writestartelement_2",ring_QXmlStreamWriter_writeStartElement_2);
	RING_API_REGISTER("qxmlstreamwriter_writetextelement",ring_QXmlStreamWriter_writeTextElement);
	RING_API_REGISTER("qxmlstreamwriter_writetextelement_2",ring_QXmlStreamWriter_writeTextElement_2);
	RING_API_REGISTER("qxmlstreamnotationdeclaration_name",ring_QXmlStreamNotationDeclaration_name);
	RING_API_REGISTER("qxmlstreamnotationdeclaration_publicid",ring_QXmlStreamNotationDeclaration_publicId);
	RING_API_REGISTER("qxmlstreamnotationdeclaration_systemid",ring_QXmlStreamNotationDeclaration_systemId);
	RING_API_REGISTER("qxmlstreamnamespacedeclaration_namespaceuri",ring_QXmlStreamNamespaceDeclaration_namespaceUri);
	RING_API_REGISTER("qxmlstreamnamespacedeclaration_prefix",ring_QXmlStreamNamespaceDeclaration_prefix);
	RING_API_REGISTER("qxmlstreamentitydeclaration_name",ring_QXmlStreamEntityDeclaration_name);
	RING_API_REGISTER("qxmlstreamentitydeclaration_notationname",ring_QXmlStreamEntityDeclaration_notationName);
	RING_API_REGISTER("qxmlstreamentitydeclaration_publicid",ring_QXmlStreamEntityDeclaration_publicId);
	RING_API_REGISTER("qxmlstreamentitydeclaration_systemid",ring_QXmlStreamEntityDeclaration_systemId);
	RING_API_REGISTER("qxmlstreamentitydeclaration_value",ring_QXmlStreamEntityDeclaration_value);
	RING_API_REGISTER("qxmlstreamattributes_append",ring_QXmlStreamAttributes_append);
	RING_API_REGISTER("qxmlstreamattributes_append_2",ring_QXmlStreamAttributes_append_2);
	RING_API_REGISTER("qxmlstreamattributes_hasattribute",ring_QXmlStreamAttributes_hasAttribute);
	RING_API_REGISTER("qxmlstreamattributes_hasattribute_2",ring_QXmlStreamAttributes_hasAttribute_2);
	RING_API_REGISTER("qxmlstreamattributes_hasattribute_3",ring_QXmlStreamAttributes_hasAttribute_3);
	RING_API_REGISTER("qxmlstreamattributes_value",ring_QXmlStreamAttributes_value);
	RING_API_REGISTER("qxmlstreamattributes_value_2",ring_QXmlStreamAttributes_value_2);
	RING_API_REGISTER("qxmlstreamattributes_value_3",ring_QXmlStreamAttributes_value_3);
	RING_API_REGISTER("qxmlstreamattributes_value_4",ring_QXmlStreamAttributes_value_4);
	RING_API_REGISTER("qxmlstreamattributes_value_5",ring_QXmlStreamAttributes_value_5);
	RING_API_REGISTER("qxmlstreamattribute_isdefault",ring_QXmlStreamAttribute_isDefault);
	RING_API_REGISTER("qxmlstreamattribute_name",ring_QXmlStreamAttribute_name);
	RING_API_REGISTER("qxmlstreamattribute_namespaceuri",ring_QXmlStreamAttribute_namespaceUri);
	RING_API_REGISTER("qxmlstreamattribute_prefix",ring_QXmlStreamAttribute_prefix);
	RING_API_REGISTER("qxmlstreamattribute_qualifiedname",ring_QXmlStreamAttribute_qualifiedName);
	RING_API_REGISTER("qxmlstreamattribute_value",ring_QXmlStreamAttribute_value);
	RING_API_REGISTER("qregularexpression_capturecount",ring_QRegularExpression_captureCount);
	RING_API_REGISTER("qregularexpression_errorstring",ring_QRegularExpression_errorString);
	RING_API_REGISTER("qregularexpression_globalmatch",ring_QRegularExpression_globalMatch);
	RING_API_REGISTER("qregularexpression_isvalid",ring_QRegularExpression_isValid);
	RING_API_REGISTER("qregularexpression_match",ring_QRegularExpression_match);
	RING_API_REGISTER("qregularexpression_namedcapturegroups",ring_QRegularExpression_namedCaptureGroups);
	RING_API_REGISTER("qregularexpression_pattern",ring_QRegularExpression_pattern);
	RING_API_REGISTER("qregularexpression_patternerroroffset",ring_QRegularExpression_patternErrorOffset);
	RING_API_REGISTER("qregularexpression_patternoptions",ring_QRegularExpression_patternOptions);
	RING_API_REGISTER("qregularexpression_setpattern",ring_QRegularExpression_setPattern);
	RING_API_REGISTER("qregularexpression_setpatternoptions",ring_QRegularExpression_setPatternOptions);
	RING_API_REGISTER("qregularexpression_swap",ring_QRegularExpression_swap);
	RING_API_REGISTER("qregularexpressionmatch_captured",ring_QRegularExpressionMatch_captured);
	RING_API_REGISTER("qregularexpressionmatch_captured_2",ring_QRegularExpressionMatch_captured_2);
	RING_API_REGISTER("qregularexpressionmatch_capturedend",ring_QRegularExpressionMatch_capturedEnd);
	RING_API_REGISTER("qregularexpressionmatch_capturedend_2",ring_QRegularExpressionMatch_capturedEnd_2);
	RING_API_REGISTER("qregularexpressionmatch_capturedlength",ring_QRegularExpressionMatch_capturedLength);
	RING_API_REGISTER("qregularexpressionmatch_capturedlength_2",ring_QRegularExpressionMatch_capturedLength_2);
	RING_API_REGISTER("qregularexpressionmatch_capturedref",ring_QRegularExpressionMatch_capturedRef);
	RING_API_REGISTER("qregularexpressionmatch_capturedref_2",ring_QRegularExpressionMatch_capturedRef_2);
	RING_API_REGISTER("qregularexpressionmatch_capturedstart",ring_QRegularExpressionMatch_capturedStart);
	RING_API_REGISTER("qregularexpressionmatch_capturedstart_2",ring_QRegularExpressionMatch_capturedStart_2);
	RING_API_REGISTER("qregularexpressionmatch_capturedtexts",ring_QRegularExpressionMatch_capturedTexts);
	RING_API_REGISTER("qregularexpressionmatch_hasmatch",ring_QRegularExpressionMatch_hasMatch);
	RING_API_REGISTER("qregularexpressionmatch_haspartialmatch",ring_QRegularExpressionMatch_hasPartialMatch);
	RING_API_REGISTER("qregularexpressionmatch_isvalid",ring_QRegularExpressionMatch_isValid);
	RING_API_REGISTER("qregularexpressionmatch_lastcapturedindex",ring_QRegularExpressionMatch_lastCapturedIndex);
	RING_API_REGISTER("qregularexpressionmatch_matchoptions",ring_QRegularExpressionMatch_matchOptions);
	RING_API_REGISTER("qregularexpressionmatch_matchtype",ring_QRegularExpressionMatch_matchType);
	RING_API_REGISTER("qregularexpressionmatch_regularexpression",ring_QRegularExpressionMatch_regularExpression);
	RING_API_REGISTER("qregularexpressionmatch_swap",ring_QRegularExpressionMatch_swap);
	RING_API_REGISTER("qregularexpressionmatchiterator_hasnext",ring_QRegularExpressionMatchIterator_hasNext);
	RING_API_REGISTER("qregularexpressionmatchiterator_isvalid",ring_QRegularExpressionMatchIterator_isValid);
	RING_API_REGISTER("qregularexpressionmatchiterator_matchoptions",ring_QRegularExpressionMatchIterator_matchOptions);
	RING_API_REGISTER("qregularexpressionmatchiterator_matchtype",ring_QRegularExpressionMatchIterator_matchType);
	RING_API_REGISTER("qregularexpressionmatchiterator_next",ring_QRegularExpressionMatchIterator_next);
	RING_API_REGISTER("qregularexpressionmatchiterator_peeknext",ring_QRegularExpressionMatchIterator_peekNext);
	RING_API_REGISTER("qregularexpressionmatchiterator_regularexpression",ring_QRegularExpressionMatchIterator_regularExpression);
	RING_API_REGISTER("qregularexpressionmatchiterator_swap",ring_QRegularExpressionMatchIterator_swap);
	RING_API_REGISTER("qjsonarray_append",ring_QJsonArray_append);
	RING_API_REGISTER("qjsonarray_at",ring_QJsonArray_at);
	RING_API_REGISTER("qjsonarray_contains",ring_QJsonArray_contains);
	RING_API_REGISTER("qjsonarray_count",ring_QJsonArray_count);
	RING_API_REGISTER("qjsonarray_empty",ring_QJsonArray_empty);
	RING_API_REGISTER("qjsonarray_first",ring_QJsonArray_first);
	RING_API_REGISTER("qjsonarray_insert",ring_QJsonArray_insert);
	RING_API_REGISTER("qjsonarray_isempty",ring_QJsonArray_isEmpty);
	RING_API_REGISTER("qjsonarray_last",ring_QJsonArray_last);
	RING_API_REGISTER("qjsonarray_pop_back",ring_QJsonArray_pop_back);
	RING_API_REGISTER("qjsonarray_pop_front",ring_QJsonArray_pop_front);
	RING_API_REGISTER("qjsonarray_prepend",ring_QJsonArray_prepend);
	RING_API_REGISTER("qjsonarray_push_back",ring_QJsonArray_push_back);
	RING_API_REGISTER("qjsonarray_push_front",ring_QJsonArray_push_front);
	RING_API_REGISTER("qjsonarray_removeat",ring_QJsonArray_removeAt);
	RING_API_REGISTER("qjsonarray_removefirst",ring_QJsonArray_removeFirst);
	RING_API_REGISTER("qjsonarray_removelast",ring_QJsonArray_removeLast);
	RING_API_REGISTER("qjsonarray_replace",ring_QJsonArray_replace);
	RING_API_REGISTER("qjsonarray_size",ring_QJsonArray_size);
	RING_API_REGISTER("qjsonarray_takeat",ring_QJsonArray_takeAt);
	RING_API_REGISTER("qjsonarray_tovariantlist",ring_QJsonArray_toVariantList);
	RING_API_REGISTER("qjsonarray_fromstringlist",ring_QJsonArray_fromStringList);
	RING_API_REGISTER("qjsonarray_fromvariantlist",ring_QJsonArray_fromVariantList);
	RING_API_REGISTER("qjsondocument_rawdata",ring_QJsonDocument_rawData);
	RING_API_REGISTER("qjsondocument_tobinarydata",ring_QJsonDocument_toBinaryData);
	RING_API_REGISTER("qjsondocument_frombinarydata",ring_QJsonDocument_fromBinaryData);
	RING_API_REGISTER("qjsondocument_fromrawdata",ring_QJsonDocument_fromRawData);
	RING_API_REGISTER("qjsondocument_array",ring_QJsonDocument_array);
	RING_API_REGISTER("qjsondocument_isarray",ring_QJsonDocument_isArray);
	RING_API_REGISTER("qjsondocument_isempty",ring_QJsonDocument_isEmpty);
	RING_API_REGISTER("qjsondocument_isnull",ring_QJsonDocument_isNull);
	RING_API_REGISTER("qjsondocument_isobject",ring_QJsonDocument_isObject);
	RING_API_REGISTER("qjsondocument_object",ring_QJsonDocument_object);
	RING_API_REGISTER("qjsondocument_setarray",ring_QJsonDocument_setArray);
	RING_API_REGISTER("qjsondocument_setobject",ring_QJsonDocument_setObject);
	RING_API_REGISTER("qjsondocument_tojson",ring_QJsonDocument_toJson);
	RING_API_REGISTER("qjsondocument_tovariant",ring_QJsonDocument_toVariant);
	RING_API_REGISTER("qjsondocument_fromjson",ring_QJsonDocument_fromJson);
	RING_API_REGISTER("qjsondocument_fromvariant",ring_QJsonDocument_fromVariant);
	RING_API_REGISTER("qjsonobject_contains",ring_QJsonObject_contains);
	RING_API_REGISTER("qjsonobject_count",ring_QJsonObject_count);
	RING_API_REGISTER("qjsonobject_empty",ring_QJsonObject_empty);
	RING_API_REGISTER("qjsonobject_isempty",ring_QJsonObject_isEmpty);
	RING_API_REGISTER("qjsonobject_keys",ring_QJsonObject_keys);
	RING_API_REGISTER("qjsonobject_length",ring_QJsonObject_length);
	RING_API_REGISTER("qjsonobject_remove",ring_QJsonObject_remove);
	RING_API_REGISTER("qjsonobject_size",ring_QJsonObject_size);
	RING_API_REGISTER("qjsonobject_take",ring_QJsonObject_take);
	RING_API_REGISTER("qjsonobject_tovariantmap",ring_QJsonObject_toVariantMap);
	RING_API_REGISTER("qjsonobject_value",ring_QJsonObject_value);
	RING_API_REGISTER("qjsonobject_fromvariantmap",ring_QJsonObject_fromVariantMap);
	RING_API_REGISTER("qjsonparseerror_errorstring",ring_QJsonParseError_errorString);
	RING_API_REGISTER("qjsonvalue_isarray",ring_QJsonValue_isArray);
	RING_API_REGISTER("qjsonvalue_isbool",ring_QJsonValue_isBool);
	RING_API_REGISTER("qjsonvalue_isdouble",ring_QJsonValue_isDouble);
	RING_API_REGISTER("qjsonvalue_isnull",ring_QJsonValue_isNull);
	RING_API_REGISTER("qjsonvalue_isobject",ring_QJsonValue_isObject);
	RING_API_REGISTER("qjsonvalue_isstring",ring_QJsonValue_isString);
	RING_API_REGISTER("qjsonvalue_isundefined",ring_QJsonValue_isUndefined);
	RING_API_REGISTER("qjsonvalue_toarray",ring_QJsonValue_toArray);
	RING_API_REGISTER("qjsonvalue_toarray_2",ring_QJsonValue_toArray_2);
	RING_API_REGISTER("qjsonvalue_tobool",ring_QJsonValue_toBool);
	RING_API_REGISTER("qjsonvalue_todouble",ring_QJsonValue_toDouble);
	RING_API_REGISTER("qjsonvalue_toint",ring_QJsonValue_toInt);
	RING_API_REGISTER("qjsonvalue_toobject",ring_QJsonValue_toObject);
	RING_API_REGISTER("qjsonvalue_toobject_2",ring_QJsonValue_toObject_2);
	RING_API_REGISTER("qjsonvalue_tostring",ring_QJsonValue_toString);
	RING_API_REGISTER("qjsonvalue_tovariant",ring_QJsonValue_toVariant);
	RING_API_REGISTER("qjsonvalue_type",ring_QJsonValue_type);
	RING_API_REGISTER("qjsonvalue_fromvariant",ring_QJsonValue_fromVariant);
	RING_API_REGISTER("qpointf_isnull",ring_QPointF_isNull);
	RING_API_REGISTER("qpointf_manhattanlength",ring_QPointF_manhattanLength);
	RING_API_REGISTER("qpointf_rx",ring_QPointF_rx);
	RING_API_REGISTER("qpointf_ry",ring_QPointF_ry);
	RING_API_REGISTER("qpointf_setx",ring_QPointF_setX);
	RING_API_REGISTER("qpointf_sety",ring_QPointF_setY);
	RING_API_REGISTER("qpointf_topoint",ring_QPointF_toPoint);
	RING_API_REGISTER("qpointf_x",ring_QPointF_x);
	RING_API_REGISTER("qpointf_y",ring_QPointF_y);
	RING_API_REGISTER("qpoint_isnull",ring_QPoint_isNull);
	RING_API_REGISTER("qpoint_manhattanlength",ring_QPoint_manhattanLength);
	RING_API_REGISTER("qpoint_rx",ring_QPoint_rx);
	RING_API_REGISTER("qpoint_ry",ring_QPoint_ry);
	RING_API_REGISTER("qpoint_setx",ring_QPoint_setX);
	RING_API_REGISTER("qpoint_sety",ring_QPoint_setY);
	RING_API_REGISTER("qpoint_x",ring_QPoint_x);
	RING_API_REGISTER("qpoint_y",ring_QPoint_y);
	RING_API_REGISTER("qstring2_split",ring_QString2_split);
	RING_API_REGISTER("qstring2_split_2",ring_QString2_split_2);
	RING_API_REGISTER("qstring2_split_3",ring_QString2_split_3);
	RING_API_REGISTER("qstring2_split_4",ring_QString2_split_4);
	RING_API_REGISTER("qstring2_append",ring_QString2_append);
	RING_API_REGISTER("qstring2_append_2",ring_QString2_append_2);
	RING_API_REGISTER("qstring2_toutf8",ring_QString2_toUtf8);
	RING_API_REGISTER("qstring2_tolatin1",ring_QString2_toLatin1);
	RING_API_REGISTER("qstring2_tolocal8bit",ring_QString2_toLocal8Bit);
	RING_API_REGISTER("qstring2_unicode",ring_QString2_unicode);
	RING_API_REGISTER("qstring2_number",ring_QString2_number);
	RING_API_REGISTER("qstring2_count",ring_QString2_count);
	RING_API_REGISTER("qstring2_left",ring_QString2_left);
	RING_API_REGISTER("qstring2_mid",ring_QString2_mid);
	RING_API_REGISTER("qstring2_right",ring_QString2_right);
	RING_API_REGISTER("qstring2_compare",ring_QString2_compare);
	RING_API_REGISTER("qstring2_contains",ring_QString2_contains);
	RING_API_REGISTER("qstring2_indexof",ring_QString2_indexOf);
	RING_API_REGISTER("qstring2_insert",ring_QString2_insert);
	RING_API_REGISTER("qstring2_isrighttoleft",ring_QString2_isRightToLeft);
	RING_API_REGISTER("qstring2_repeated",ring_QString2_repeated);
	RING_API_REGISTER("qstring2_replace",ring_QString2_replace);
	RING_API_REGISTER("qstring2_replace_2",ring_QString2_replace_2);
	RING_API_REGISTER("qstring2_startswith",ring_QString2_startsWith);
	RING_API_REGISTER("qstring2_endswith",ring_QString2_endsWith);
	RING_API_REGISTER("qstring2_tohtmlescaped",ring_QString2_toHtmlEscaped);
	RING_API_REGISTER("qstring2_clear",ring_QString2_clear);
	RING_API_REGISTER("qstring2_isnull",ring_QString2_isNull);
	RING_API_REGISTER("qstring2_resize",ring_QString2_resize);
	RING_API_REGISTER("qstring2_fill",ring_QString2_fill);
	RING_API_REGISTER("qstring2_localeawarecompare",ring_QString2_localeAwareCompare);
	RING_API_REGISTER("qstring2_leftjustified",ring_QString2_leftJustified);
	RING_API_REGISTER("qstring2_rightjustified",ring_QString2_rightJustified);
	RING_API_REGISTER("qstring2_section_1",ring_QString2_section_1);
	RING_API_REGISTER("qstring2_section_2",ring_QString2_section_2);
	RING_API_REGISTER("qstring2_section_3",ring_QString2_section_3);
	RING_API_REGISTER("qstring2_section_4",ring_QString2_section_4);
	RING_API_REGISTER("qstring2_simplified",ring_QString2_simplified);
	RING_API_REGISTER("qstring2_tocasefolded",ring_QString2_toCaseFolded);
	RING_API_REGISTER("qstring2_trimmed",ring_QString2_trimmed);
	RING_API_REGISTER("qstring2_truncate",ring_QString2_truncate);
	RING_API_REGISTER("qstringref_appendto",ring_QStringRef_appendTo);
	RING_API_REGISTER("qstringref_at",ring_QStringRef_at);
	RING_API_REGISTER("qstringref_clear",ring_QStringRef_clear);
	RING_API_REGISTER("qstringref_compare_2",ring_QStringRef_compare_2);
	RING_API_REGISTER("qstringref_compare_3",ring_QStringRef_compare_3);
	RING_API_REGISTER("qstringref_constdata",ring_QStringRef_constData);
	RING_API_REGISTER("qstringref_contains",ring_QStringRef_contains);
	RING_API_REGISTER("qstringref_contains_2",ring_QStringRef_contains_2);
	RING_API_REGISTER("qstringref_contains_3",ring_QStringRef_contains_3);
	RING_API_REGISTER("qstringref_contains_4",ring_QStringRef_contains_4);
	RING_API_REGISTER("qstringref_count",ring_QStringRef_count);
	RING_API_REGISTER("qstringref_count_2",ring_QStringRef_count_2);
	RING_API_REGISTER("qstringref_count_3",ring_QStringRef_count_3);
	RING_API_REGISTER("qstringref_count_4",ring_QStringRef_count_4);
	RING_API_REGISTER("qstringref_data",ring_QStringRef_data);
	RING_API_REGISTER("qstringref_endswith",ring_QStringRef_endsWith);
	RING_API_REGISTER("qstringref_endswith_2",ring_QStringRef_endsWith_2);
	RING_API_REGISTER("qstringref_endswith_3",ring_QStringRef_endsWith_3);
	RING_API_REGISTER("qstringref_endswith_4",ring_QStringRef_endsWith_4);
	RING_API_REGISTER("qstringref_indexof",ring_QStringRef_indexOf);
	RING_API_REGISTER("qstringref_indexof_2",ring_QStringRef_indexOf_2);
	RING_API_REGISTER("qstringref_indexof_3",ring_QStringRef_indexOf_3);
	RING_API_REGISTER("qstringref_indexof_4",ring_QStringRef_indexOf_4);
	RING_API_REGISTER("qstringref_isempty",ring_QStringRef_isEmpty);
	RING_API_REGISTER("qstringref_isnull",ring_QStringRef_isNull);
	RING_API_REGISTER("qstringref_lastindexof",ring_QStringRef_lastIndexOf);
	RING_API_REGISTER("qstringref_lastindexof_2",ring_QStringRef_lastIndexOf_2);
	RING_API_REGISTER("qstringref_lastindexof_3",ring_QStringRef_lastIndexOf_3);
	RING_API_REGISTER("qstringref_lastindexof_4",ring_QStringRef_lastIndexOf_4);
	RING_API_REGISTER("qstringref_length",ring_QStringRef_length);
	RING_API_REGISTER("qstringref_localeawarecompare",ring_QStringRef_localeAwareCompare);
	RING_API_REGISTER("qstringref_localeawarecompare_2",ring_QStringRef_localeAwareCompare_2);
	RING_API_REGISTER("qstringref_position",ring_QStringRef_position);
	RING_API_REGISTER("qstringref_size",ring_QStringRef_size);
	RING_API_REGISTER("qstringref_startswith",ring_QStringRef_startsWith);
	RING_API_REGISTER("qstringref_startswith_2",ring_QStringRef_startsWith_2);
	RING_API_REGISTER("qstringref_startswith_3",ring_QStringRef_startsWith_3);
	RING_API_REGISTER("qstringref_startswith_4",ring_QStringRef_startsWith_4);
	RING_API_REGISTER("qstringref_string",ring_QStringRef_string);
	RING_API_REGISTER("qstringref_tolatin1",ring_QStringRef_toLatin1);
	RING_API_REGISTER("qstringref_tolocal8bit",ring_QStringRef_toLocal8Bit);
	RING_API_REGISTER("qstringref_tostring",ring_QStringRef_toString);
	RING_API_REGISTER("qstringref_toucs4",ring_QStringRef_toUcs4);
	RING_API_REGISTER("qstringref_toutf8",ring_QStringRef_toUtf8);
	RING_API_REGISTER("qstringref_unicode",ring_QStringRef_unicode);
	RING_API_REGISTER("qstringref_compare_4",ring_QStringRef_compare_4);
	RING_API_REGISTER("qstringref_compare_5",ring_QStringRef_compare_5);
	RING_API_REGISTER("qstringref_compare_6",ring_QStringRef_compare_6);
	RING_API_REGISTER("qstringref_localeawarecompare_3",ring_QStringRef_localeAwareCompare_3);
	RING_API_REGISTER("qstringref_localeawarecompare_4",ring_QStringRef_localeAwareCompare_4);
	RING_API_REGISTER("qbuffer_buffer",ring_QBuffer_buffer);
	RING_API_REGISTER("qbuffer_data",ring_QBuffer_data);
	RING_API_REGISTER("qbuffer_setbuffer",ring_QBuffer_setBuffer);
	RING_API_REGISTER("qbuffer_setdata",ring_QBuffer_setData);
	RING_API_REGISTER("qbuffer_setdata_2",ring_QBuffer_setData_2);
	RING_API_REGISTER("qdatetime_totime_t",ring_QDateTime_toTime_t);
	RING_API_REGISTER("qdatetime_fromtime_t",ring_QDateTime_fromTime_t);
	RING_API_REGISTER("qdatetime_settime_t",ring_QDateTime_setTime_t);
	RING_API_REGISTER("qdatetime_adddays",ring_QDateTime_addDays);
	RING_API_REGISTER("qdatetime_addmsecs",ring_QDateTime_addMSecs);
	RING_API_REGISTER("qdatetime_addmonths",ring_QDateTime_addMonths);
	RING_API_REGISTER("qdatetime_addsecs",ring_QDateTime_addSecs);
	RING_API_REGISTER("qdatetime_addyears",ring_QDateTime_addYears);
	RING_API_REGISTER("qdatetime_date",ring_QDateTime_date);
	RING_API_REGISTER("qdatetime_daysto",ring_QDateTime_daysTo);
	RING_API_REGISTER("qdatetime_isnull",ring_QDateTime_isNull);
	RING_API_REGISTER("qdatetime_isvalid",ring_QDateTime_isValid);
	RING_API_REGISTER("qdatetime_msecsto",ring_QDateTime_msecsTo);
	RING_API_REGISTER("qdatetime_secsto",ring_QDateTime_secsTo);
	RING_API_REGISTER("qdatetime_setdate",ring_QDateTime_setDate);
	RING_API_REGISTER("qdatetime_setmsecssinceepoch",ring_QDateTime_setMSecsSinceEpoch);
	RING_API_REGISTER("qdatetime_settime",ring_QDateTime_setTime);
	RING_API_REGISTER("qdatetime_settimespec",ring_QDateTime_setTimeSpec);
	RING_API_REGISTER("qdatetime_time",ring_QDateTime_time);
	RING_API_REGISTER("qdatetime_timespec",ring_QDateTime_timeSpec);
	RING_API_REGISTER("qdatetime_tolocaltime",ring_QDateTime_toLocalTime);
	RING_API_REGISTER("qdatetime_tomsecssinceepoch",ring_QDateTime_toMSecsSinceEpoch);
	RING_API_REGISTER("qdatetime_tostring",ring_QDateTime_toString);
	RING_API_REGISTER("qdatetime_tostring_2",ring_QDateTime_toString_2);
	RING_API_REGISTER("qdatetime_totimespec",ring_QDateTime_toTimeSpec);
	RING_API_REGISTER("qdatetime_toutc",ring_QDateTime_toUTC);
	RING_API_REGISTER("qdatetime_currentdatetime",ring_QDateTime_currentDateTime);
	RING_API_REGISTER("qdatetime_currentdatetimeutc",ring_QDateTime_currentDateTimeUtc);
	RING_API_REGISTER("qdatetime_currentmsecssinceepoch",ring_QDateTime_currentMSecsSinceEpoch);
	RING_API_REGISTER("qdatetime_frommsecssinceepoch",ring_QDateTime_fromMSecsSinceEpoch);
	RING_API_REGISTER("qdatetime_fromstring",ring_QDateTime_fromString);
	RING_API_REGISTER("qdatetime_fromstring_2",ring_QDateTime_fromString_2);
	RING_API_REGISTER("qcoreapplication_installnativeeventfilter",ring_QCoreApplication_installNativeEventFilter);
	RING_API_REGISTER("qcoreapplication_removenativeeventfilter",ring_QCoreApplication_removeNativeEventFilter);
	RING_API_REGISTER("qcoreapplication_quit",ring_QCoreApplication_quit);
	RING_API_REGISTER("qcoreapplication_addlibrarypath",ring_QCoreApplication_addLibraryPath);
	RING_API_REGISTER("qcoreapplication_applicationdirpath",ring_QCoreApplication_applicationDirPath);
	RING_API_REGISTER("qcoreapplication_applicationfilepath",ring_QCoreApplication_applicationFilePath);
	RING_API_REGISTER("qcoreapplication_applicationname",ring_QCoreApplication_applicationName);
	RING_API_REGISTER("qcoreapplication_applicationpid",ring_QCoreApplication_applicationPid);
	RING_API_REGISTER("qcoreapplication_applicationversion",ring_QCoreApplication_applicationVersion);
	RING_API_REGISTER("qcoreapplication_arguments",ring_QCoreApplication_arguments);
	RING_API_REGISTER("qcoreapplication_closingdown",ring_QCoreApplication_closingDown);
	RING_API_REGISTER("qcoreapplication_eventdispatcher",ring_QCoreApplication_eventDispatcher);
	RING_API_REGISTER("qcoreapplication_exec",ring_QCoreApplication_exec);
	RING_API_REGISTER("qcoreapplication_exit",ring_QCoreApplication_exit);
	RING_API_REGISTER("qcoreapplication_installtranslator",ring_QCoreApplication_installTranslator);
	RING_API_REGISTER("qcoreapplication_instance",ring_QCoreApplication_instance);
	RING_API_REGISTER("qcoreapplication_isquitlockenabled",ring_QCoreApplication_isQuitLockEnabled);
	RING_API_REGISTER("qcoreapplication_librarypaths",ring_QCoreApplication_libraryPaths);
	RING_API_REGISTER("qcoreapplication_organizationdomain",ring_QCoreApplication_organizationDomain);
	RING_API_REGISTER("qcoreapplication_organizationname",ring_QCoreApplication_organizationName);
	RING_API_REGISTER("qcoreapplication_postevent",ring_QCoreApplication_postEvent);
	RING_API_REGISTER("qcoreapplication_processevents",ring_QCoreApplication_processEvents);
	RING_API_REGISTER("qcoreapplication_processevents_2",ring_QCoreApplication_processEvents_2);
	RING_API_REGISTER("qcoreapplication_removelibrarypath",ring_QCoreApplication_removeLibraryPath);
	RING_API_REGISTER("qcoreapplication_removepostedevents",ring_QCoreApplication_removePostedEvents);
	RING_API_REGISTER("qcoreapplication_removetranslator",ring_QCoreApplication_removeTranslator);
	RING_API_REGISTER("qcoreapplication_sendevent",ring_QCoreApplication_sendEvent);
	RING_API_REGISTER("qcoreapplication_sendpostedevents",ring_QCoreApplication_sendPostedEvents);
	RING_API_REGISTER("qcoreapplication_setapplicationname",ring_QCoreApplication_setApplicationName);
	RING_API_REGISTER("qcoreapplication_setapplicationversion",ring_QCoreApplication_setApplicationVersion);
	RING_API_REGISTER("qcoreapplication_setattribute",ring_QCoreApplication_setAttribute);
	RING_API_REGISTER("qcoreapplication_seteventdispatcher",ring_QCoreApplication_setEventDispatcher);
	RING_API_REGISTER("qcoreapplication_setlibrarypaths",ring_QCoreApplication_setLibraryPaths);
	RING_API_REGISTER("qcoreapplication_setorganizationdomain",ring_QCoreApplication_setOrganizationDomain);
	RING_API_REGISTER("qcoreapplication_setorganizationname",ring_QCoreApplication_setOrganizationName);
	RING_API_REGISTER("qcoreapplication_setquitlockenabled",ring_QCoreApplication_setQuitLockEnabled);
	RING_API_REGISTER("qcoreapplication_startingup",ring_QCoreApplication_startingUp);
	RING_API_REGISTER("qcoreapplication_testattribute",ring_QCoreApplication_testAttribute);
	RING_API_REGISTER("qcoreapplication_translate",ring_QCoreApplication_translate);
	RING_API_REGISTER("qfile_copy",ring_QFile_copy);
	RING_API_REGISTER("qfile_exists",ring_QFile_exists);
	RING_API_REGISTER("qfile_link",ring_QFile_link);
	RING_API_REGISTER("qfile_open",ring_QFile_open);
	RING_API_REGISTER("qfile_open_2",ring_QFile_open_2);
	RING_API_REGISTER("qfile_open_3",ring_QFile_open_3);
	RING_API_REGISTER("qfile_remove",ring_QFile_remove);
	RING_API_REGISTER("qfile_rename",ring_QFile_rename);
	RING_API_REGISTER("qfile_setfilename",ring_QFile_setFileName);
	RING_API_REGISTER("qfile_symlinktarget",ring_QFile_symLinkTarget);
	RING_API_REGISTER("qfile_copy_2",ring_QFile_copy_2);
	RING_API_REGISTER("qfile_decodename",ring_QFile_decodeName);
	RING_API_REGISTER("qfile_decodename_2",ring_QFile_decodeName_2);
	RING_API_REGISTER("qfile_encodename",ring_QFile_encodeName);
	RING_API_REGISTER("qfile_exists_2",ring_QFile_exists_2);
	RING_API_REGISTER("qfile_link_2",ring_QFile_link_2);
	RING_API_REGISTER("qfile_permissions",ring_QFile_permissions);
	RING_API_REGISTER("qfile_remove_2",ring_QFile_remove_2);
	RING_API_REGISTER("qfile_rename_2",ring_QFile_rename_2);
	RING_API_REGISTER("qfile_resize",ring_QFile_resize);
	RING_API_REGISTER("qfile_setpermissions",ring_QFile_setPermissions);
	RING_API_REGISTER("qfile_symlinktarget_2",ring_QFile_symLinkTarget_2);
	RING_API_REGISTER("qfiledevice_error",ring_QFileDevice_error);
	RING_API_REGISTER("qfiledevice_flush",ring_QFileDevice_flush);
	RING_API_REGISTER("qfiledevice_handle",ring_QFileDevice_handle);
	RING_API_REGISTER("qfiledevice_map",ring_QFileDevice_map);
	RING_API_REGISTER("qfiledevice_permissions",ring_QFileDevice_permissions);
	RING_API_REGISTER("qfiledevice_resize",ring_QFileDevice_resize);
	RING_API_REGISTER("qfiledevice_filename",ring_QFileDevice_fileName);
	RING_API_REGISTER("qfiledevice_setpermissions",ring_QFileDevice_setPermissions);
	RING_API_REGISTER("qfiledevice_unmap",ring_QFileDevice_unmap);
	RING_API_REGISTER("qfiledevice_unseterror",ring_QFileDevice_unsetError);
	RING_API_REGISTER("qstandardpaths_displayname",ring_QStandardPaths_displayName);
	RING_API_REGISTER("qstandardpaths_findexecutable",ring_QStandardPaths_findExecutable);
	RING_API_REGISTER("qstandardpaths_locate",ring_QStandardPaths_locate);
	RING_API_REGISTER("qstandardpaths_locateall",ring_QStandardPaths_locateAll);
	RING_API_REGISTER("qstandardpaths_settestmodeenabled",ring_QStandardPaths_setTestModeEnabled);
	RING_API_REGISTER("qstandardpaths_standardlocations",ring_QStandardPaths_standardLocations);
	RING_API_REGISTER("qstandardpaths_writablelocation",ring_QStandardPaths_writableLocation);
	RING_API_REGISTER("qmimedata_clear",ring_QMimeData_clear);
	RING_API_REGISTER("qmimedata_colordata",ring_QMimeData_colorData);
	RING_API_REGISTER("qmimedata_data",ring_QMimeData_data);
	RING_API_REGISTER("qmimedata_formats",ring_QMimeData_formats);
	RING_API_REGISTER("qmimedata_hascolor",ring_QMimeData_hasColor);
	RING_API_REGISTER("qmimedata_hasformat",ring_QMimeData_hasFormat);
	RING_API_REGISTER("qmimedata_hashtml",ring_QMimeData_hasHtml);
	RING_API_REGISTER("qmimedata_hasimage",ring_QMimeData_hasImage);
	RING_API_REGISTER("qmimedata_hastext",ring_QMimeData_hasText);
	RING_API_REGISTER("qmimedata_hasurls",ring_QMimeData_hasUrls);
	RING_API_REGISTER("qmimedata_html",ring_QMimeData_html);
	RING_API_REGISTER("qmimedata_imagedata",ring_QMimeData_imageData);
	RING_API_REGISTER("qmimedata_removeformat",ring_QMimeData_removeFormat);
	RING_API_REGISTER("qmimedata_setcolordata",ring_QMimeData_setColorData);
	RING_API_REGISTER("qmimedata_setdata",ring_QMimeData_setData);
	RING_API_REGISTER("qmimedata_sethtml",ring_QMimeData_setHtml);
	RING_API_REGISTER("qmimedata_setimagedata",ring_QMimeData_setImageData);
	RING_API_REGISTER("qmimedata_settext",ring_QMimeData_setText);
	RING_API_REGISTER("qmimedata_seturls",ring_QMimeData_setUrls);
	RING_API_REGISTER("qmimedata_text",ring_QMimeData_text);
	RING_API_REGISTER("qmimedata_urls",ring_QMimeData_urls);
	RING_API_REGISTER("qchar_category",ring_QChar_category);
	RING_API_REGISTER("qchar_cell",ring_QChar_cell);
	RING_API_REGISTER("qchar_combiningclass",ring_QChar_combiningClass);
	RING_API_REGISTER("qchar_decomposition",ring_QChar_decomposition);
	RING_API_REGISTER("qchar_decompositiontag",ring_QChar_decompositionTag);
	RING_API_REGISTER("qchar_digitvalue",ring_QChar_digitValue);
	RING_API_REGISTER("qchar_direction",ring_QChar_direction);
	RING_API_REGISTER("qchar_hasmirrored",ring_QChar_hasMirrored);
	RING_API_REGISTER("qchar_isdigit",ring_QChar_isDigit);
	RING_API_REGISTER("qchar_ishighsurrogate",ring_QChar_isHighSurrogate);
	RING_API_REGISTER("qchar_isletter",ring_QChar_isLetter);
	RING_API_REGISTER("qchar_isletterornumber",ring_QChar_isLetterOrNumber);
	RING_API_REGISTER("qchar_islowsurrogate",ring_QChar_isLowSurrogate);
	RING_API_REGISTER("qchar_islower",ring_QChar_isLower);
	RING_API_REGISTER("qchar_ismark",ring_QChar_isMark);
	RING_API_REGISTER("qchar_isnoncharacter",ring_QChar_isNonCharacter);
	RING_API_REGISTER("qchar_isnull",ring_QChar_isNull);
	RING_API_REGISTER("qchar_isnumber",ring_QChar_isNumber);
	RING_API_REGISTER("qchar_isprint",ring_QChar_isPrint);
	RING_API_REGISTER("qchar_ispunct",ring_QChar_isPunct);
	RING_API_REGISTER("qchar_isspace",ring_QChar_isSpace);
	RING_API_REGISTER("qchar_issurrogate",ring_QChar_isSurrogate);
	RING_API_REGISTER("qchar_issymbol",ring_QChar_isSymbol);
	RING_API_REGISTER("qchar_istitlecase",ring_QChar_isTitleCase);
	RING_API_REGISTER("qchar_isupper",ring_QChar_isUpper);
	RING_API_REGISTER("qchar_mirroredchar",ring_QChar_mirroredChar);
	RING_API_REGISTER("qchar_row",ring_QChar_row);
	RING_API_REGISTER("qchar_script",ring_QChar_script);
	RING_API_REGISTER("qchar_tocasefolded",ring_QChar_toCaseFolded);
	RING_API_REGISTER("qchar_tolatin1",ring_QChar_toLatin1);
	RING_API_REGISTER("qchar_tolower",ring_QChar_toLower);
	RING_API_REGISTER("qchar_totitlecase",ring_QChar_toTitleCase);
	RING_API_REGISTER("qchar_toupper",ring_QChar_toUpper);
	RING_API_REGISTER("qchar_unicode",ring_QChar_unicode);
	RING_API_REGISTER("qchar_unicode_2",ring_QChar_unicode_2);
	RING_API_REGISTER("qchar_unicodeversion",ring_QChar_unicodeVersion);
	RING_API_REGISTER("qchar_category_2",ring_QChar_category_2);
	RING_API_REGISTER("qchar_combiningclass_2",ring_QChar_combiningClass_2);
	RING_API_REGISTER("qchar_currentunicodeversion",ring_QChar_currentUnicodeVersion);
	RING_API_REGISTER("qchar_decomposition_2",ring_QChar_decomposition_2);
	RING_API_REGISTER("qchar_decompositiontag_2",ring_QChar_decompositionTag_2);
	RING_API_REGISTER("qchar_digitvalue_2",ring_QChar_digitValue_2);
	RING_API_REGISTER("qchar_direction_2",ring_QChar_direction_2);
	RING_API_REGISTER("qchar_fromlatin1",ring_QChar_fromLatin1);
	RING_API_REGISTER("qchar_hasmirrored_2",ring_QChar_hasMirrored_2);
	RING_API_REGISTER("qchar_highsurrogate",ring_QChar_highSurrogate);
	RING_API_REGISTER("qchar_isdigit_2",ring_QChar_isDigit_2);
	RING_API_REGISTER("qchar_ishighsurrogate_2",ring_QChar_isHighSurrogate_2);
	RING_API_REGISTER("qchar_isletter_2",ring_QChar_isLetter_2);
	RING_API_REGISTER("qchar_isletterornumber_2",ring_QChar_isLetterOrNumber_2);
	RING_API_REGISTER("qchar_islowsurrogate_2",ring_QChar_isLowSurrogate_2);
	RING_API_REGISTER("qchar_islower_2",ring_QChar_isLower_2);
	RING_API_REGISTER("qchar_ismark_2",ring_QChar_isMark_2);
	RING_API_REGISTER("qchar_isnoncharacter_2",ring_QChar_isNonCharacter_2);
	RING_API_REGISTER("qchar_isnumber_2",ring_QChar_isNumber_2);
	RING_API_REGISTER("qchar_isprint_2",ring_QChar_isPrint_2);
	RING_API_REGISTER("qchar_ispunct_2",ring_QChar_isPunct_2);
	RING_API_REGISTER("qchar_isspace_2",ring_QChar_isSpace_2);
	RING_API_REGISTER("qchar_issurrogate_2",ring_QChar_isSurrogate_2);
	RING_API_REGISTER("qchar_issymbol_2",ring_QChar_isSymbol_2);
	RING_API_REGISTER("qchar_istitlecase_2",ring_QChar_isTitleCase_2);
	RING_API_REGISTER("qchar_isupper_2",ring_QChar_isUpper_2);
	RING_API_REGISTER("qchar_lowsurrogate",ring_QChar_lowSurrogate);
	RING_API_REGISTER("qchar_mirroredchar_2",ring_QChar_mirroredChar_2);
	RING_API_REGISTER("qchar_requiressurrogates",ring_QChar_requiresSurrogates);
	RING_API_REGISTER("qchar_script_2",ring_QChar_script_2);
	RING_API_REGISTER("qchar_surrogatetoucs4",ring_QChar_surrogateToUcs4);
	RING_API_REGISTER("qchar_surrogatetoucs4_2",ring_QChar_surrogateToUcs4_2);
	RING_API_REGISTER("qchar_tocasefolded_2",ring_QChar_toCaseFolded_2);
	RING_API_REGISTER("qchar_tolower_2",ring_QChar_toLower_2);
	RING_API_REGISTER("qchar_totitlecase_2",ring_QChar_toTitleCase_2);
	RING_API_REGISTER("qchar_toupper_2",ring_QChar_toUpper_2);
	RING_API_REGISTER("qchar_unicodeversion_2",ring_QChar_unicodeVersion_2);
	RING_API_REGISTER("qchildevent_added",ring_QChildEvent_added);
	RING_API_REGISTER("qchildevent_child",ring_QChildEvent_child);
	RING_API_REGISTER("qchildevent_polished",ring_QChildEvent_polished);
	RING_API_REGISTER("qchildevent_removed",ring_QChildEvent_removed);
	RING_API_REGISTER("qtextstream_atend",ring_QTextStream_atEnd);
	RING_API_REGISTER("qtextstream_autodetectunicode",ring_QTextStream_autoDetectUnicode);
	RING_API_REGISTER("qtextstream_codec",ring_QTextStream_codec);
	RING_API_REGISTER("qtextstream_device",ring_QTextStream_device);
	RING_API_REGISTER("qtextstream_fieldalignment",ring_QTextStream_fieldAlignment);
	RING_API_REGISTER("qtextstream_fieldwidth",ring_QTextStream_fieldWidth);
	RING_API_REGISTER("qtextstream_flush",ring_QTextStream_flush);
	RING_API_REGISTER("qtextstream_generatebyteordermark",ring_QTextStream_generateByteOrderMark);
	RING_API_REGISTER("qtextstream_integerbase",ring_QTextStream_integerBase);
	RING_API_REGISTER("qtextstream_locale",ring_QTextStream_locale);
	RING_API_REGISTER("qtextstream_numberflags",ring_QTextStream_numberFlags);
	RING_API_REGISTER("qtextstream_padchar",ring_QTextStream_padChar);
	RING_API_REGISTER("qtextstream_pos",ring_QTextStream_pos);
	RING_API_REGISTER("qtextstream_read",ring_QTextStream_read);
	RING_API_REGISTER("qtextstream_readall",ring_QTextStream_readAll);
	RING_API_REGISTER("qtextstream_readline",ring_QTextStream_readLine);
	RING_API_REGISTER("qtextstream_realnumbernotation",ring_QTextStream_realNumberNotation);
	RING_API_REGISTER("qtextstream_realnumberprecision",ring_QTextStream_realNumberPrecision);
	RING_API_REGISTER("qtextstream_reset",ring_QTextStream_reset);
	RING_API_REGISTER("qtextstream_resetstatus",ring_QTextStream_resetStatus);
	RING_API_REGISTER("qtextstream_seek",ring_QTextStream_seek);
	RING_API_REGISTER("qtextstream_setautodetectunicode",ring_QTextStream_setAutoDetectUnicode);
	RING_API_REGISTER("qtextstream_setcodec",ring_QTextStream_setCodec);
	RING_API_REGISTER("qtextstream_setcodec_2",ring_QTextStream_setCodec_2);
	RING_API_REGISTER("qtextstream_setdevice",ring_QTextStream_setDevice);
	RING_API_REGISTER("qtextstream_setfieldalignment",ring_QTextStream_setFieldAlignment);
	RING_API_REGISTER("qtextstream_setfieldwidth",ring_QTextStream_setFieldWidth);
	RING_API_REGISTER("qtextstream_setgeneratebyteordermark",ring_QTextStream_setGenerateByteOrderMark);
	RING_API_REGISTER("qtextstream_setintegerbase",ring_QTextStream_setIntegerBase);
	RING_API_REGISTER("qtextstream_setlocale",ring_QTextStream_setLocale);
	RING_API_REGISTER("qtextstream_setnumberflags",ring_QTextStream_setNumberFlags);
	RING_API_REGISTER("qtextstream_setpadchar",ring_QTextStream_setPadChar);
	RING_API_REGISTER("qtextstream_setrealnumbernotation",ring_QTextStream_setRealNumberNotation);
	RING_API_REGISTER("qtextstream_setrealnumberprecision",ring_QTextStream_setRealNumberPrecision);
	RING_API_REGISTER("qtextstream_setstatus",ring_QTextStream_setStatus);
	RING_API_REGISTER("qtextstream_setstring",ring_QTextStream_setString);
	RING_API_REGISTER("qtextstream_skipwhitespace",ring_QTextStream_skipWhiteSpace);
	RING_API_REGISTER("qtextstream_status",ring_QTextStream_status);
	RING_API_REGISTER("qtextstream_string",ring_QTextStream_string);
	RING_API_REGISTER("qlocale_amtext",ring_QLocale_amText);
	RING_API_REGISTER("qlocale_bcp47name",ring_QLocale_bcp47Name);
	RING_API_REGISTER("qlocale_country",ring_QLocale_country);
	RING_API_REGISTER("qlocale_createseparatedlist",ring_QLocale_createSeparatedList);
	RING_API_REGISTER("qlocale_currencysymbol",ring_QLocale_currencySymbol);
	RING_API_REGISTER("qlocale_dateformat",ring_QLocale_dateFormat);
	RING_API_REGISTER("qlocale_datetimeformat",ring_QLocale_dateTimeFormat);
	RING_API_REGISTER("qlocale_dayname",ring_QLocale_dayName);
	RING_API_REGISTER("qlocale_decimalpoint",ring_QLocale_decimalPoint);
	RING_API_REGISTER("qlocale_exponential",ring_QLocale_exponential);
	RING_API_REGISTER("qlocale_firstdayofweek",ring_QLocale_firstDayOfWeek);
	RING_API_REGISTER("qlocale_groupseparator",ring_QLocale_groupSeparator);
	RING_API_REGISTER("qlocale_language",ring_QLocale_language);
	RING_API_REGISTER("qlocale_measurementsystem",ring_QLocale_measurementSystem);
	RING_API_REGISTER("qlocale_monthname",ring_QLocale_monthName);
	RING_API_REGISTER("qlocale_name",ring_QLocale_name);
	RING_API_REGISTER("qlocale_nativecountryname",ring_QLocale_nativeCountryName);
	RING_API_REGISTER("qlocale_nativelanguagename",ring_QLocale_nativeLanguageName);
	RING_API_REGISTER("qlocale_negativesign",ring_QLocale_negativeSign);
	RING_API_REGISTER("qlocale_numberoptions",ring_QLocale_numberOptions);
	RING_API_REGISTER("qlocale_percent",ring_QLocale_percent);
	RING_API_REGISTER("qlocale_pmtext",ring_QLocale_pmText);
	RING_API_REGISTER("qlocale_positivesign",ring_QLocale_positiveSign);
	RING_API_REGISTER("qlocale_quotestring",ring_QLocale_quoteString);
	RING_API_REGISTER("qlocale_quotestring_2",ring_QLocale_quoteString_2);
	RING_API_REGISTER("qlocale_script",ring_QLocale_script);
	RING_API_REGISTER("qlocale_setnumberoptions",ring_QLocale_setNumberOptions);
	RING_API_REGISTER("qlocale_standalonedayname",ring_QLocale_standaloneDayName);
	RING_API_REGISTER("qlocale_standalonemonthname",ring_QLocale_standaloneMonthName);
	RING_API_REGISTER("qlocale_textdirection",ring_QLocale_textDirection);
	RING_API_REGISTER("qlocale_timeformat",ring_QLocale_timeFormat);
	RING_API_REGISTER("qlocale_todouble",ring_QLocale_toDouble);
	RING_API_REGISTER("qlocale_todouble_2",ring_QLocale_toDouble_2);
	RING_API_REGISTER("qlocale_tofloat",ring_QLocale_toFloat);
	RING_API_REGISTER("qlocale_tofloat_2",ring_QLocale_toFloat_2);
	RING_API_REGISTER("qlocale_toint",ring_QLocale_toInt);
	RING_API_REGISTER("qlocale_toint_2",ring_QLocale_toInt_2);
	RING_API_REGISTER("qlocale_tolonglong",ring_QLocale_toLongLong);
	RING_API_REGISTER("qlocale_tolonglong_2",ring_QLocale_toLongLong_2);
	RING_API_REGISTER("qlocale_tolower",ring_QLocale_toLower);
	RING_API_REGISTER("qlocale_toshort",ring_QLocale_toShort);
	RING_API_REGISTER("qlocale_toshort_2",ring_QLocale_toShort_2);
	RING_API_REGISTER("qlocale_tostring",ring_QLocale_toString);
	RING_API_REGISTER("qlocale_tostring_2",ring_QLocale_toString_2);
	RING_API_REGISTER("qlocale_tostring_4",ring_QLocale_toString_4);
	RING_API_REGISTER("qlocale_tostring_5",ring_QLocale_toString_5);
	RING_API_REGISTER("qlocale_tostring_6",ring_QLocale_toString_6);
	RING_API_REGISTER("qlocale_tostring_7",ring_QLocale_toString_7);
	RING_API_REGISTER("qlocale_tostring_8",ring_QLocale_toString_8);
	RING_API_REGISTER("qlocale_tostring_9",ring_QLocale_toString_9);
	RING_API_REGISTER("qlocale_tostring_10",ring_QLocale_toString_10);
	RING_API_REGISTER("qlocale_tostring_11",ring_QLocale_toString_11);
	RING_API_REGISTER("qlocale_tostring_12",ring_QLocale_toString_12);
	RING_API_REGISTER("qlocale_tostring_13",ring_QLocale_toString_13);
	RING_API_REGISTER("qlocale_tostring_14",ring_QLocale_toString_14);
	RING_API_REGISTER("qlocale_tostring_15",ring_QLocale_toString_15);
	RING_API_REGISTER("qlocale_totime",ring_QLocale_toTime);
	RING_API_REGISTER("qlocale_totime_2",ring_QLocale_toTime_2);
	RING_API_REGISTER("qlocale_touint",ring_QLocale_toUInt);
	RING_API_REGISTER("qlocale_touint_2",ring_QLocale_toUInt_2);
	RING_API_REGISTER("qlocale_toulonglong",ring_QLocale_toULongLong);
	RING_API_REGISTER("qlocale_toulonglong_2",ring_QLocale_toULongLong_2);
	RING_API_REGISTER("qlocale_toushort",ring_QLocale_toUShort);
	RING_API_REGISTER("qlocale_toushort_2",ring_QLocale_toUShort_2);
	RING_API_REGISTER("qlocale_toupper",ring_QLocale_toUpper);
	RING_API_REGISTER("qlocale_uilanguages",ring_QLocale_uiLanguages);
	RING_API_REGISTER("qlocale_weekdays",ring_QLocale_weekdays);
	RING_API_REGISTER("qlocale_zerodigit",ring_QLocale_zeroDigit);
	RING_API_REGISTER("qlocale_c",ring_QLocale_c);
	RING_API_REGISTER("qlocale_countrytostring",ring_QLocale_countryToString);
	RING_API_REGISTER("qlocale_languagetostring",ring_QLocale_languageToString);
	RING_API_REGISTER("qlocale_matchinglocales",ring_QLocale_matchingLocales);
	RING_API_REGISTER("qlocale_scripttostring",ring_QLocale_scriptToString);
	RING_API_REGISTER("qlocale_setdefault",ring_QLocale_setDefault);
	RING_API_REGISTER("qlocale_system",ring_QLocale_system);
	RING_API_REGISTER("qthread_eventdispatcher",ring_QThread_eventDispatcher);
	RING_API_REGISTER("qthread_exit",ring_QThread_exit);
	RING_API_REGISTER("qthread_isfinished",ring_QThread_isFinished);
	RING_API_REGISTER("qthread_isinterruptionrequested",ring_QThread_isInterruptionRequested);
	RING_API_REGISTER("qthread_isrunning",ring_QThread_isRunning);
	RING_API_REGISTER("qthread_priority",ring_QThread_priority);
	RING_API_REGISTER("qthread_requestinterruption",ring_QThread_requestInterruption);
	RING_API_REGISTER("qthread_seteventdispatcher",ring_QThread_setEventDispatcher);
	RING_API_REGISTER("qthread_setpriority",ring_QThread_setPriority);
	RING_API_REGISTER("qthread_setstacksize",ring_QThread_setStackSize);
	RING_API_REGISTER("qthread_stacksize",ring_QThread_stackSize);
	RING_API_REGISTER("qthread_wait",ring_QThread_wait);
	RING_API_REGISTER("qthread_quit",ring_QThread_quit);
	RING_API_REGISTER("qthread_start",ring_QThread_start);
	RING_API_REGISTER("qthread_terminate",ring_QThread_terminate);
	RING_API_REGISTER("qthread_currentthread",ring_QThread_currentThread);
	RING_API_REGISTER("qthread_currentthreadid",ring_QThread_currentThreadId);
	RING_API_REGISTER("qthread_idealthreadcount",ring_QThread_idealThreadCount);
	RING_API_REGISTER("qthread_msleep",ring_QThread_msleep);
	RING_API_REGISTER("qthread_sleep",ring_QThread_sleep);
	RING_API_REGISTER("qthread_usleep",ring_QThread_usleep);
	RING_API_REGISTER("qthread_yieldcurrentthread",ring_QThread_yieldCurrentThread);
	RING_API_REGISTER("qthread_setstartedevent",ring_QThread_setStartedEvent);
	RING_API_REGISTER("qthread_setfinishedevent",ring_QThread_setFinishedEvent);
	RING_API_REGISTER("qthread_getstartedevent",ring_QThread_getStartedEvent);
	RING_API_REGISTER("qthread_getfinishedevent",ring_QThread_getFinishedEvent);
	RING_API_REGISTER("qthreadpool_activethreadcount",ring_QThreadPool_activeThreadCount);
	RING_API_REGISTER("qthreadpool_clear",ring_QThreadPool_clear);
	RING_API_REGISTER("qthreadpool_expirytimeout",ring_QThreadPool_expiryTimeout);
	RING_API_REGISTER("qthreadpool_maxthreadcount",ring_QThreadPool_maxThreadCount);
	RING_API_REGISTER("qthreadpool_releasethread",ring_QThreadPool_releaseThread);
	RING_API_REGISTER("qthreadpool_reservethread",ring_QThreadPool_reserveThread);
	RING_API_REGISTER("qthreadpool_setexpirytimeout",ring_QThreadPool_setExpiryTimeout);
	RING_API_REGISTER("qthreadpool_setmaxthreadcount",ring_QThreadPool_setMaxThreadCount);
	RING_API_REGISTER("qthreadpool_start",ring_QThreadPool_start);
	RING_API_REGISTER("qthreadpool_trystart",ring_QThreadPool_tryStart);
	RING_API_REGISTER("qthreadpool_waitfordone",ring_QThreadPool_waitForDone);
	RING_API_REGISTER("qthreadpool_globalinstance",ring_QThreadPool_globalInstance);
	RING_API_REGISTER("qprocess_start_2",ring_QProcess_start_2);
	RING_API_REGISTER("qprocess_arguments",ring_QProcess_arguments);
	RING_API_REGISTER("qprocess_closereadchannel",ring_QProcess_closeReadChannel);
	RING_API_REGISTER("qprocess_closewritechannel",ring_QProcess_closeWriteChannel);
	RING_API_REGISTER("qprocess_error",ring_QProcess_error);
	RING_API_REGISTER("qprocess_exitcode",ring_QProcess_exitCode);
	RING_API_REGISTER("qprocess_exitstatus",ring_QProcess_exitStatus);
	RING_API_REGISTER("qprocess_inputchannelmode",ring_QProcess_inputChannelMode);
	RING_API_REGISTER("qprocess_processchannelmode",ring_QProcess_processChannelMode);
	RING_API_REGISTER("qprocess_processenvironment",ring_QProcess_processEnvironment);
	RING_API_REGISTER("qprocess_program",ring_QProcess_program);
	RING_API_REGISTER("qprocess_readallstandarderror",ring_QProcess_readAllStandardError);
	RING_API_REGISTER("qprocess_readallstandardoutput",ring_QProcess_readAllStandardOutput);
	RING_API_REGISTER("qprocess_readchannel",ring_QProcess_readChannel);
	RING_API_REGISTER("qprocess_setarguments",ring_QProcess_setArguments);
	RING_API_REGISTER("qprocess_setinputchannelmode",ring_QProcess_setInputChannelMode);
	RING_API_REGISTER("qprocess_setprocesschannelmode",ring_QProcess_setProcessChannelMode);
	RING_API_REGISTER("qprocess_setprocessenvironment",ring_QProcess_setProcessEnvironment);
	RING_API_REGISTER("qprocess_setprogram",ring_QProcess_setProgram);
	RING_API_REGISTER("qprocess_setreadchannel",ring_QProcess_setReadChannel);
	RING_API_REGISTER("qprocess_setstandarderrorfile",ring_QProcess_setStandardErrorFile);
	RING_API_REGISTER("qprocess_setstandardinputfile",ring_QProcess_setStandardInputFile);
	RING_API_REGISTER("qprocess_setstandardoutputfile",ring_QProcess_setStandardOutputFile);
	RING_API_REGISTER("qprocess_setstandardoutputprocess",ring_QProcess_setStandardOutputProcess);
	RING_API_REGISTER("qprocess_setworkingdirectory",ring_QProcess_setWorkingDirectory);
	RING_API_REGISTER("qprocess_start",ring_QProcess_start);
	RING_API_REGISTER("qprocess_start_3",ring_QProcess_start_3);
	RING_API_REGISTER("qprocess_state",ring_QProcess_state);
	RING_API_REGISTER("qprocess_waitforfinished",ring_QProcess_waitForFinished);
	RING_API_REGISTER("qprocess_waitforstarted",ring_QProcess_waitForStarted);
	RING_API_REGISTER("qprocess_workingdirectory",ring_QProcess_workingDirectory);
	RING_API_REGISTER("qprocess_kill",ring_QProcess_kill);
	RING_API_REGISTER("qprocess_terminate",ring_QProcess_terminate);
	RING_API_REGISTER("qprocess_setreadyreadstandarderrorevent",ring_QProcess_setreadyReadStandardErrorEvent);
	RING_API_REGISTER("qprocess_setreadyreadstandardoutputevent",ring_QProcess_setreadyReadStandardOutputEvent);
	RING_API_REGISTER("qprocess_getreadyreadstandarderrorevent",ring_QProcess_getreadyReadStandardErrorEvent);
	RING_API_REGISTER("qprocess_getreadyreadstandardoutputevent",ring_QProcess_getreadyReadStandardOutputEvent);
	RING_API_REGISTER("quuid_tostring",ring_QUuid_toString);
	RING_API_REGISTER("qmutex_isrecursive",ring_QMutex_isRecursive);
	RING_API_REGISTER("qmutex_lock",ring_QMutex_lock);
	RING_API_REGISTER("qmutex_unlock",ring_QMutex_unlock);
	RING_API_REGISTER("qmutexlocker_mutex",ring_QMutexLocker_mutex);
	RING_API_REGISTER("qmutexlocker_relock",ring_QMutexLocker_relock);
	RING_API_REGISTER("qmutexlocker_unlock",ring_QMutexLocker_unlock);
	RING_API_REGISTER("qdesktopservices_openurl",ring_QDesktopServices_openUrl);
	RING_API_REGISTER("qdesktopservices_seturlhandler",ring_QDesktopServices_setUrlHandler);
	RING_API_REGISTER("qdesktopservices_unseturlhandler",ring_QDesktopServices_unsetUrlHandler);
	RING_API_REGISTER("qbitmap_clear",ring_QBitmap_clear);
	RING_API_REGISTER("qbitmap_swap",ring_QBitmap_swap);
	RING_API_REGISTER("qbitmap_transformed",ring_QBitmap_transformed);
	RING_API_REGISTER("qbitmap_fromdata",ring_QBitmap_fromData);
	RING_API_REGISTER("qbitmap_fromimage",ring_QBitmap_fromImage);
	RING_API_REGISTER("qpixmap_transformed",ring_QPixmap_transformed);
	RING_API_REGISTER("qpixmap_copy",ring_QPixmap_copy);
	RING_API_REGISTER("qpixmap_scaled",ring_QPixmap_scaled);
	RING_API_REGISTER("qpixmap_width",ring_QPixmap_width);
	RING_API_REGISTER("qpixmap_height",ring_QPixmap_height);
	RING_API_REGISTER("qpixmap_createmaskfromcolor",ring_QPixmap_createMaskFromColor);
	RING_API_REGISTER("qpixmap_mask",ring_QPixmap_mask);
	RING_API_REGISTER("qpixmap_setmask",ring_QPixmap_setMask);
	RING_API_REGISTER("qpixmap_fill",ring_QPixmap_fill);
	RING_API_REGISTER("qpixmap_fromimage",ring_QPixmap_fromImage);
	RING_API_REGISTER("qpixmap_load",ring_QPixmap_load);
	RING_API_REGISTER("qpixmap_cachekey",ring_QPixmap_cacheKey);
	RING_API_REGISTER("qpixmap_convertfromimage",ring_QPixmap_convertFromImage);
	RING_API_REGISTER("qpixmap_copy_2",ring_QPixmap_copy_2);
	RING_API_REGISTER("qpixmap_createheuristicmask",ring_QPixmap_createHeuristicMask);
	RING_API_REGISTER("qpixmap_depth",ring_QPixmap_depth);
	RING_API_REGISTER("qpixmap_detach",ring_QPixmap_detach);
	RING_API_REGISTER("qpixmap_devicepixelratio",ring_QPixmap_devicePixelRatio);
	RING_API_REGISTER("qpixmap_hasalpha",ring_QPixmap_hasAlpha);
	RING_API_REGISTER("qpixmap_hasalphachannel",ring_QPixmap_hasAlphaChannel);
	RING_API_REGISTER("qpixmap_isnull",ring_QPixmap_isNull);
	RING_API_REGISTER("qpixmap_isqbitmap",ring_QPixmap_isQBitmap);
	RING_API_REGISTER("qpixmap_loadfromdata",ring_QPixmap_loadFromData);
	RING_API_REGISTER("qpixmap_loadfromdata_2",ring_QPixmap_loadFromData_2);
	RING_API_REGISTER("qpixmap_rect",ring_QPixmap_rect);
	RING_API_REGISTER("qpixmap_save",ring_QPixmap_save);
	RING_API_REGISTER("qpixmap_save_2",ring_QPixmap_save_2);
	RING_API_REGISTER("qpixmap_scaled_2",ring_QPixmap_scaled_2);
	RING_API_REGISTER("qpixmap_scaledtoheight",ring_QPixmap_scaledToHeight);
	RING_API_REGISTER("qpixmap_scaledtowidth",ring_QPixmap_scaledToWidth);
	RING_API_REGISTER("qpixmap_scroll",ring_QPixmap_scroll);
	RING_API_REGISTER("qpixmap_scroll_2",ring_QPixmap_scroll_2);
	RING_API_REGISTER("qpixmap_setdevicepixelratio",ring_QPixmap_setDevicePixelRatio);
	RING_API_REGISTER("qpixmap_size",ring_QPixmap_size);
	RING_API_REGISTER("qpixmap_swap",ring_QPixmap_swap);
	RING_API_REGISTER("qpixmap_toimage",ring_QPixmap_toImage);
	RING_API_REGISTER("qpixmap_transformed_2",ring_QPixmap_transformed_2);
	RING_API_REGISTER("qpixmap_defaultdepth",ring_QPixmap_defaultDepth);
	RING_API_REGISTER("qpixmap_fromimage_2",ring_QPixmap_fromImage_2);
	RING_API_REGISTER("qpixmap_fromimagereader",ring_QPixmap_fromImageReader);
	RING_API_REGISTER("qpixmap_truematrix",ring_QPixmap_trueMatrix);
	RING_API_REGISTER("qpainter_initfrom",ring_QPainter_initFrom);
	RING_API_REGISTER("qpainter_background",ring_QPainter_background);
	RING_API_REGISTER("qpainter_backgroundmode",ring_QPainter_backgroundMode);
	RING_API_REGISTER("qpainter_begin",ring_QPainter_begin);
	RING_API_REGISTER("qpainter_beginnativepainting",ring_QPainter_beginNativePainting);
	RING_API_REGISTER("qpainter_boundingrect",ring_QPainter_boundingRect);
	RING_API_REGISTER("qpainter_brush",ring_QPainter_brush);
	RING_API_REGISTER("qpainter_brushorigin",ring_QPainter_brushOrigin);
	RING_API_REGISTER("qpainter_clipboundingrect",ring_QPainter_clipBoundingRect);
	RING_API_REGISTER("qpainter_clippath",ring_QPainter_clipPath);
	RING_API_REGISTER("qpainter_clipregion",ring_QPainter_clipRegion);
	RING_API_REGISTER("qpainter_combinedtransform",ring_QPainter_combinedTransform);
	RING_API_REGISTER("qpainter_compositionmode",ring_QPainter_compositionMode);
	RING_API_REGISTER("qpainter_device",ring_QPainter_device);
	RING_API_REGISTER("qpainter_devicetransform",ring_QPainter_deviceTransform);
	RING_API_REGISTER("qpainter_drawarc",ring_QPainter_drawArc);
	RING_API_REGISTER("qpainter_drawchord",ring_QPainter_drawChord);
	RING_API_REGISTER("qpainter_drawellipse",ring_QPainter_drawEllipse);
	RING_API_REGISTER("qpainter_drawglyphrun",ring_QPainter_drawGlyphRun);
	RING_API_REGISTER("qpainter_drawimage",ring_QPainter_drawImage);
	RING_API_REGISTER("qpainter_drawline",ring_QPainter_drawLine);
	RING_API_REGISTER("qpainter_drawlines",ring_QPainter_drawLines);
	RING_API_REGISTER("qpainter_drawpath",ring_QPainter_drawPath);
	RING_API_REGISTER("qpainter_drawpicture",ring_QPainter_drawPicture);
	RING_API_REGISTER("qpainter_drawpie",ring_QPainter_drawPie);
	RING_API_REGISTER("qpainter_drawpixmap",ring_QPainter_drawPixmap);
	RING_API_REGISTER("qpainter_drawpoint",ring_QPainter_drawPoint);
	RING_API_REGISTER("qpainter_drawrect",ring_QPainter_drawRect);
	RING_API_REGISTER("qpainter_drawrects",ring_QPainter_drawRects);
	RING_API_REGISTER("qpainter_drawroundedrect",ring_QPainter_drawRoundedRect);
	RING_API_REGISTER("qpainter_drawstatictext",ring_QPainter_drawStaticText);
	RING_API_REGISTER("qpainter_drawtext",ring_QPainter_drawText);
	RING_API_REGISTER("qpainter_drawtiledpixmap",ring_QPainter_drawTiledPixmap);
	RING_API_REGISTER("qpainter_end",ring_QPainter_end);
	RING_API_REGISTER("qpainter_endnativepainting",ring_QPainter_endNativePainting);
	RING_API_REGISTER("qpainter_eraserect",ring_QPainter_eraseRect);
	RING_API_REGISTER("qpainter_fillpath",ring_QPainter_fillPath);
	RING_API_REGISTER("qpainter_fillrect",ring_QPainter_fillRect);
	RING_API_REGISTER("qpainter_font",ring_QPainter_font);
	RING_API_REGISTER("qpainter_fontinfo",ring_QPainter_fontInfo);
	RING_API_REGISTER("qpainter_hasclipping",ring_QPainter_hasClipping);
	RING_API_REGISTER("qpainter_isactive",ring_QPainter_isActive);
	RING_API_REGISTER("qpainter_layoutdirection",ring_QPainter_layoutDirection);
	RING_API_REGISTER("qpainter_opacity",ring_QPainter_opacity);
	RING_API_REGISTER("qpainter_paintengine",ring_QPainter_paintEngine);
	RING_API_REGISTER("qpainter_pen",ring_QPainter_pen);
	RING_API_REGISTER("qpainter_renderhints",ring_QPainter_renderHints);
	RING_API_REGISTER("qpainter_resettransform",ring_QPainter_resetTransform);
	RING_API_REGISTER("qpainter_restore",ring_QPainter_restore);
	RING_API_REGISTER("qpainter_rotate",ring_QPainter_rotate);
	RING_API_REGISTER("qpainter_save",ring_QPainter_save);
	RING_API_REGISTER("qpainter_scale",ring_QPainter_scale);
	RING_API_REGISTER("qpainter_setbackground",ring_QPainter_setBackground);
	RING_API_REGISTER("qpainter_setbackgroundmode",ring_QPainter_setBackgroundMode);
	RING_API_REGISTER("qpainter_setbrush",ring_QPainter_setBrush);
	RING_API_REGISTER("qpainter_setbrushorigin",ring_QPainter_setBrushOrigin);
	RING_API_REGISTER("qpainter_setclippath",ring_QPainter_setClipPath);
	RING_API_REGISTER("qpainter_setcliprect",ring_QPainter_setClipRect);
	RING_API_REGISTER("qpainter_setclipregion",ring_QPainter_setClipRegion);
	RING_API_REGISTER("qpainter_setclipping",ring_QPainter_setClipping);
	RING_API_REGISTER("qpainter_setcompositionmode",ring_QPainter_setCompositionMode);
	RING_API_REGISTER("qpainter_setfont",ring_QPainter_setFont);
	RING_API_REGISTER("qpainter_setlayoutdirection",ring_QPainter_setLayoutDirection);
	RING_API_REGISTER("qpainter_setopacity",ring_QPainter_setOpacity);
	RING_API_REGISTER("qpainter_setpen",ring_QPainter_setPen);
	RING_API_REGISTER("qpainter_setrenderhint",ring_QPainter_setRenderHint);
	RING_API_REGISTER("qpainter_settransform",ring_QPainter_setTransform);
	RING_API_REGISTER("qpainter_setviewtransformenabled",ring_QPainter_setViewTransformEnabled);
	RING_API_REGISTER("qpainter_setviewport",ring_QPainter_setViewport);
	RING_API_REGISTER("qpainter_setwindow",ring_QPainter_setWindow);
	RING_API_REGISTER("qpainter_setworldmatrixenabled",ring_QPainter_setWorldMatrixEnabled);
	RING_API_REGISTER("qpainter_setworldtransform",ring_QPainter_setWorldTransform);
	RING_API_REGISTER("qpainter_shear",ring_QPainter_shear);
	RING_API_REGISTER("qpainter_strokepath",ring_QPainter_strokePath);
	RING_API_REGISTER("qpainter_testrenderhint",ring_QPainter_testRenderHint);
	RING_API_REGISTER("qpainter_transform",ring_QPainter_transform);
	RING_API_REGISTER("qpainter_translate",ring_QPainter_translate);
	RING_API_REGISTER("qpainter_viewtransformenabled",ring_QPainter_viewTransformEnabled);
	RING_API_REGISTER("qpainter_viewport",ring_QPainter_viewport);
	RING_API_REGISTER("qpainter_window",ring_QPainter_window);
	RING_API_REGISTER("qpainter_worldmatrixenabled",ring_QPainter_worldMatrixEnabled);
	RING_API_REGISTER("qpainter_worldtransform",ring_QPainter_worldTransform);
	RING_API_REGISTER("qpainter_drawpolygon",ring_QPainter_drawPolygon);
	RING_API_REGISTER("qpainter_drawconvexpolygon",ring_QPainter_drawConvexPolygon);
	RING_API_REGISTER("qpainter_drawpoints",ring_QPainter_drawPoints);
	RING_API_REGISTER("qpainter_drawpolyline",ring_QPainter_drawPolyline);
	RING_API_REGISTER("qpainter_drawhsvflist",ring_QPainter_drawHSVFList);
	RING_API_REGISTER("qpainter_drawrgbflist",ring_QPainter_drawRGBFList);
	RING_API_REGISTER("qpicture_boundingrect",ring_QPicture_boundingRect);
	RING_API_REGISTER("qpicture_data",ring_QPicture_data);
	RING_API_REGISTER("qpicture_isnull",ring_QPicture_isNull);
	RING_API_REGISTER("qpicture_load",ring_QPicture_load);
	RING_API_REGISTER("qpicture_play",ring_QPicture_play);
	RING_API_REGISTER("qpicture_save",ring_QPicture_save);
	RING_API_REGISTER("qpicture_setboundingrect",ring_QPicture_setBoundingRect);
	RING_API_REGISTER("qpicture_size",ring_QPicture_size);
	RING_API_REGISTER("qpicture_swap",ring_QPicture_swap);
	RING_API_REGISTER("qpen_brush",ring_QPen_brush);
	RING_API_REGISTER("qpen_capstyle",ring_QPen_capStyle);
	RING_API_REGISTER("qpen_color",ring_QPen_color);
	RING_API_REGISTER("qpen_dashoffset",ring_QPen_dashOffset);
	RING_API_REGISTER("qpen_iscosmetic",ring_QPen_isCosmetic);
	RING_API_REGISTER("qpen_issolid",ring_QPen_isSolid);
	RING_API_REGISTER("qpen_joinstyle",ring_QPen_joinStyle);
	RING_API_REGISTER("qpen_miterlimit",ring_QPen_miterLimit);
	RING_API_REGISTER("qpen_setbrush",ring_QPen_setBrush);
	RING_API_REGISTER("qpen_setcapstyle",ring_QPen_setCapStyle);
	RING_API_REGISTER("qpen_setcolor",ring_QPen_setColor);
	RING_API_REGISTER("qpen_setcosmetic",ring_QPen_setCosmetic);
	RING_API_REGISTER("qpen_setdashoffset",ring_QPen_setDashOffset);
	RING_API_REGISTER("qpen_setjoinstyle",ring_QPen_setJoinStyle);
	RING_API_REGISTER("qpen_setmiterlimit",ring_QPen_setMiterLimit);
	RING_API_REGISTER("qpen_setstyle",ring_QPen_setStyle);
	RING_API_REGISTER("qpen_setwidth",ring_QPen_setWidth);
	RING_API_REGISTER("qpen_setwidthf",ring_QPen_setWidthF);
	RING_API_REGISTER("qpen_style",ring_QPen_style);
	RING_API_REGISTER("qpen_swap",ring_QPen_swap);
	RING_API_REGISTER("qpen_width",ring_QPen_width);
	RING_API_REGISTER("qpen_widthf",ring_QPen_widthF);
	RING_API_REGISTER("qcolor_alpha",ring_QColor_alpha);
	RING_API_REGISTER("qcolor_alphaf",ring_QColor_alphaF);
	RING_API_REGISTER("qcolor_black",ring_QColor_black);
	RING_API_REGISTER("qcolor_blackf",ring_QColor_blackF);
	RING_API_REGISTER("qcolor_blue",ring_QColor_blue);
	RING_API_REGISTER("qcolor_bluef",ring_QColor_blueF);
	RING_API_REGISTER("qcolor_convertto",ring_QColor_convertTo);
	RING_API_REGISTER("qcolor_cyan",ring_QColor_cyan);
	RING_API_REGISTER("qcolor_cyanf",ring_QColor_cyanF);
	RING_API_REGISTER("qcolor_darker",ring_QColor_darker);
	RING_API_REGISTER("qcolor_getcmyk",ring_QColor_getCmyk);
	RING_API_REGISTER("qcolor_getcmykf",ring_QColor_getCmykF);
	RING_API_REGISTER("qcolor_gethsl",ring_QColor_getHsl);
	RING_API_REGISTER("qcolor_gethslf",ring_QColor_getHslF);
	RING_API_REGISTER("qcolor_gethsv",ring_QColor_getHsv);
	RING_API_REGISTER("qcolor_gethsvf",ring_QColor_getHsvF);
	RING_API_REGISTER("qcolor_getrgb",ring_QColor_getRgb);
	RING_API_REGISTER("qcolor_getrgbf",ring_QColor_getRgbF);
	RING_API_REGISTER("qcolor_green",ring_QColor_green);
	RING_API_REGISTER("qcolor_greenf",ring_QColor_greenF);
	RING_API_REGISTER("qcolor_hslhue",ring_QColor_hslHue);
	RING_API_REGISTER("qcolor_hslhuef",ring_QColor_hslHueF);
	RING_API_REGISTER("qcolor_hslsaturation",ring_QColor_hslSaturation);
	RING_API_REGISTER("qcolor_hslsaturationf",ring_QColor_hslSaturationF);
	RING_API_REGISTER("qcolor_hsvhue",ring_QColor_hsvHue);
	RING_API_REGISTER("qcolor_hsvhuef",ring_QColor_hsvHueF);
	RING_API_REGISTER("qcolor_hsvsaturation",ring_QColor_hsvSaturation);
	RING_API_REGISTER("qcolor_hsvsaturationf",ring_QColor_hsvSaturationF);
	RING_API_REGISTER("qcolor_hue",ring_QColor_hue);
	RING_API_REGISTER("qcolor_huef",ring_QColor_hueF);
	RING_API_REGISTER("qcolor_isvalid",ring_QColor_isValid);
	RING_API_REGISTER("qcolor_lighter",ring_QColor_lighter);
	RING_API_REGISTER("qcolor_lightness",ring_QColor_lightness);
	RING_API_REGISTER("qcolor_lightnessf",ring_QColor_lightnessF);
	RING_API_REGISTER("qcolor_magenta",ring_QColor_magenta);
	RING_API_REGISTER("qcolor_magentaf",ring_QColor_magentaF);
	RING_API_REGISTER("qcolor_name",ring_QColor_name);
	RING_API_REGISTER("qcolor_red",ring_QColor_red);
	RING_API_REGISTER("qcolor_redf",ring_QColor_redF);
	RING_API_REGISTER("qcolor_rgb",ring_QColor_rgb);
	RING_API_REGISTER("qcolor_rgba",ring_QColor_rgba);
	RING_API_REGISTER("qcolor_saturation",ring_QColor_saturation);
	RING_API_REGISTER("qcolor_saturationf",ring_QColor_saturationF);
	RING_API_REGISTER("qcolor_setalpha",ring_QColor_setAlpha);
	RING_API_REGISTER("qcolor_setalphaf",ring_QColor_setAlphaF);
	RING_API_REGISTER("qcolor_setblue",ring_QColor_setBlue);
	RING_API_REGISTER("qcolor_setbluef",ring_QColor_setBlueF);
	RING_API_REGISTER("qcolor_setcmyk",ring_QColor_setCmyk);
	RING_API_REGISTER("qcolor_setcmykf",ring_QColor_setCmykF);
	RING_API_REGISTER("qcolor_setgreen",ring_QColor_setGreen);
	RING_API_REGISTER("qcolor_setgreenf",ring_QColor_setGreenF);
	RING_API_REGISTER("qcolor_sethsl",ring_QColor_setHsl);
	RING_API_REGISTER("qcolor_sethslf",ring_QColor_setHslF);
	RING_API_REGISTER("qcolor_sethsv",ring_QColor_setHsv);
	RING_API_REGISTER("qcolor_sethsvf",ring_QColor_setHsvF);
	RING_API_REGISTER("qcolor_setnamedcolor",ring_QColor_setNamedColor);
	RING_API_REGISTER("qcolor_setred",ring_QColor_setRed);
	RING_API_REGISTER("qcolor_setredf",ring_QColor_setRedF);
	RING_API_REGISTER("qcolor_setrgb",ring_QColor_setRgb);
	RING_API_REGISTER("qcolor_setrgbf",ring_QColor_setRgbF);
	RING_API_REGISTER("qcolor_setrgba",ring_QColor_setRgba);
	RING_API_REGISTER("qcolor_spec",ring_QColor_spec);
	RING_API_REGISTER("qcolor_tocmyk",ring_QColor_toCmyk);
	RING_API_REGISTER("qcolor_tohsl",ring_QColor_toHsl);
	RING_API_REGISTER("qcolor_tohsv",ring_QColor_toHsv);
	RING_API_REGISTER("qcolor_torgb",ring_QColor_toRgb);
	RING_API_REGISTER("qcolor_value",ring_QColor_value);
	RING_API_REGISTER("qcolor_valuef",ring_QColor_valueF);
	RING_API_REGISTER("qcolor_yellow",ring_QColor_yellow);
	RING_API_REGISTER("qcolor_yellowf",ring_QColor_yellowF);
	RING_API_REGISTER("qcolor_colornames",ring_QColor_colorNames);
	RING_API_REGISTER("qcolor_fromcmyk",ring_QColor_fromCmyk);
	RING_API_REGISTER("qcolor_fromcmykf",ring_QColor_fromCmykF);
	RING_API_REGISTER("qcolor_fromhsl",ring_QColor_fromHsl);
	RING_API_REGISTER("qcolor_fromhslf",ring_QColor_fromHslF);
	RING_API_REGISTER("qcolor_fromhsv",ring_QColor_fromHsv);
	RING_API_REGISTER("qcolor_fromhsvf",ring_QColor_fromHsvF);
	RING_API_REGISTER("qcolor_fromrgb",ring_QColor_fromRgb);
	RING_API_REGISTER("qcolor_fromrgbf",ring_QColor_fromRgbF);
	RING_API_REGISTER("qcolor_fromrgba",ring_QColor_fromRgba);
	RING_API_REGISTER("qcolor_isvalidcolor",ring_QColor_isValidColor);
	RING_API_REGISTER("qfont_setrawmode",ring_QFont_setRawMode);
	RING_API_REGISTER("qfont_setrawname",ring_QFont_setRawName);
	RING_API_REGISTER("qfont_rawmode",ring_QFont_rawMode);
	RING_API_REGISTER("qfont_rawname",ring_QFont_rawName);
	RING_API_REGISTER("qfont_lastresortfamily",ring_QFont_lastResortFamily);
	RING_API_REGISTER("qfont_lastresortfont",ring_QFont_lastResortFont);
	RING_API_REGISTER("qfont_bold",ring_QFont_bold);
	RING_API_REGISTER("qfont_capitalization",ring_QFont_capitalization);
	RING_API_REGISTER("qfont_defaultfamily",ring_QFont_defaultFamily);
	RING_API_REGISTER("qfont_exactmatch",ring_QFont_exactMatch);
	RING_API_REGISTER("qfont_family",ring_QFont_family);
	RING_API_REGISTER("qfont_fixedpitch",ring_QFont_fixedPitch);
	RING_API_REGISTER("qfont_fromstring",ring_QFont_fromString);
	RING_API_REGISTER("qfont_hintingpreference",ring_QFont_hintingPreference);
	RING_API_REGISTER("qfont_iscopyof",ring_QFont_isCopyOf);
	RING_API_REGISTER("qfont_italic",ring_QFont_italic);
	RING_API_REGISTER("qfont_kerning",ring_QFont_kerning);
	RING_API_REGISTER("qfont_key",ring_QFont_key);
	RING_API_REGISTER("qfont_letterspacing",ring_QFont_letterSpacing);
	RING_API_REGISTER("qfont_letterspacingtype",ring_QFont_letterSpacingType);
	RING_API_REGISTER("qfont_overline",ring_QFont_overline);
	RING_API_REGISTER("qfont_pixelsize",ring_QFont_pixelSize);
	RING_API_REGISTER("qfont_pointsize",ring_QFont_pointSize);
	RING_API_REGISTER("qfont_pointsizef",ring_QFont_pointSizeF);
	RING_API_REGISTER("qfont_resolve",ring_QFont_resolve);
	RING_API_REGISTER("qfont_setbold",ring_QFont_setBold);
	RING_API_REGISTER("qfont_setcapitalization",ring_QFont_setCapitalization);
	RING_API_REGISTER("qfont_setfamily",ring_QFont_setFamily);
	RING_API_REGISTER("qfont_setfixedpitch",ring_QFont_setFixedPitch);
	RING_API_REGISTER("qfont_sethintingpreference",ring_QFont_setHintingPreference);
	RING_API_REGISTER("qfont_setitalic",ring_QFont_setItalic);
	RING_API_REGISTER("qfont_setkerning",ring_QFont_setKerning);
	RING_API_REGISTER("qfont_setletterspacing",ring_QFont_setLetterSpacing);
	RING_API_REGISTER("qfont_setoverline",ring_QFont_setOverline);
	RING_API_REGISTER("qfont_setpixelsize",ring_QFont_setPixelSize);
	RING_API_REGISTER("qfont_setpointsize",ring_QFont_setPointSize);
	RING_API_REGISTER("qfont_setpointsizef",ring_QFont_setPointSizeF);
	RING_API_REGISTER("qfont_setstretch",ring_QFont_setStretch);
	RING_API_REGISTER("qfont_setstrikeout",ring_QFont_setStrikeOut);
	RING_API_REGISTER("qfont_setstyle",ring_QFont_setStyle);
	RING_API_REGISTER("qfont_setstylehint",ring_QFont_setStyleHint);
	RING_API_REGISTER("qfont_setstylename",ring_QFont_setStyleName);
	RING_API_REGISTER("qfont_setstylestrategy",ring_QFont_setStyleStrategy);
	RING_API_REGISTER("qfont_setunderline",ring_QFont_setUnderline);
	RING_API_REGISTER("qfont_setweight",ring_QFont_setWeight);
	RING_API_REGISTER("qfont_setwordspacing",ring_QFont_setWordSpacing);
	RING_API_REGISTER("qfont_stretch",ring_QFont_stretch);
	RING_API_REGISTER("qfont_strikeout",ring_QFont_strikeOut);
	RING_API_REGISTER("qfont_style",ring_QFont_style);
	RING_API_REGISTER("qfont_stylehint",ring_QFont_styleHint);
	RING_API_REGISTER("qfont_stylename",ring_QFont_styleName);
	RING_API_REGISTER("qfont_stylestrategy",ring_QFont_styleStrategy);
	RING_API_REGISTER("qfont_tostring",ring_QFont_toString);
	RING_API_REGISTER("qfont_underline",ring_QFont_underline);
	RING_API_REGISTER("qfont_weight",ring_QFont_weight);
	RING_API_REGISTER("qfont_wordspacing",ring_QFont_wordSpacing);
	RING_API_REGISTER("qfont_insertsubstitution",ring_QFont_insertSubstitution);
	RING_API_REGISTER("qfont_insertsubstitutions",ring_QFont_insertSubstitutions);
	RING_API_REGISTER("qfont_substitute",ring_QFont_substitute);
	RING_API_REGISTER("qfont_substitutes",ring_QFont_substitutes);
	RING_API_REGISTER("qfont_substitutions",ring_QFont_substitutions);
	RING_API_REGISTER("qbrush_matrix",ring_QBrush_matrix);
	RING_API_REGISTER("qbrush_setmatrix",ring_QBrush_setMatrix);
	RING_API_REGISTER("qbrush_color",ring_QBrush_color);
	RING_API_REGISTER("qbrush_gradient",ring_QBrush_gradient);
	RING_API_REGISTER("qbrush_isopaque",ring_QBrush_isOpaque);
	RING_API_REGISTER("qbrush_setcolor",ring_QBrush_setColor);
	RING_API_REGISTER("qbrush_setstyle",ring_QBrush_setStyle);
	RING_API_REGISTER("qbrush_settexture",ring_QBrush_setTexture);
	RING_API_REGISTER("qbrush_settextureimage",ring_QBrush_setTextureImage);
	RING_API_REGISTER("qbrush_settransform",ring_QBrush_setTransform);
	RING_API_REGISTER("qbrush_style",ring_QBrush_style);
	RING_API_REGISTER("qbrush_swap",ring_QBrush_swap);
	RING_API_REGISTER("qbrush_texture",ring_QBrush_texture);
	RING_API_REGISTER("qbrush_textureimage",ring_QBrush_textureImage);
	RING_API_REGISTER("qbrush_transform",ring_QBrush_transform);
	RING_API_REGISTER("qtextcursor_anchor",ring_QTextCursor_anchor);
	RING_API_REGISTER("qtextcursor_atblockend",ring_QTextCursor_atBlockEnd);
	RING_API_REGISTER("qtextcursor_atblockstart",ring_QTextCursor_atBlockStart);
	RING_API_REGISTER("qtextcursor_atend",ring_QTextCursor_atEnd);
	RING_API_REGISTER("qtextcursor_atstart",ring_QTextCursor_atStart);
	RING_API_REGISTER("qtextcursor_begineditblock",ring_QTextCursor_beginEditBlock);
	RING_API_REGISTER("qtextcursor_block",ring_QTextCursor_block);
	RING_API_REGISTER("qtextcursor_blockcharformat",ring_QTextCursor_blockCharFormat);
	RING_API_REGISTER("qtextcursor_blockformat",ring_QTextCursor_blockFormat);
	RING_API_REGISTER("qtextcursor_blocknumber",ring_QTextCursor_blockNumber);
	RING_API_REGISTER("qtextcursor_charformat",ring_QTextCursor_charFormat);
	RING_API_REGISTER("qtextcursor_clearselection",ring_QTextCursor_clearSelection);
	RING_API_REGISTER("qtextcursor_columnnumber",ring_QTextCursor_columnNumber);
	RING_API_REGISTER("qtextcursor_createlist",ring_QTextCursor_createList);
	RING_API_REGISTER("qtextcursor_currentframe",ring_QTextCursor_currentFrame);
	RING_API_REGISTER("qtextcursor_currentlist",ring_QTextCursor_currentList);
	RING_API_REGISTER("qtextcursor_currenttable",ring_QTextCursor_currentTable);
	RING_API_REGISTER("qtextcursor_deletechar",ring_QTextCursor_deleteChar);
	RING_API_REGISTER("qtextcursor_deletepreviouschar",ring_QTextCursor_deletePreviousChar);
	RING_API_REGISTER("qtextcursor_document",ring_QTextCursor_document);
	RING_API_REGISTER("qtextcursor_endeditblock",ring_QTextCursor_endEditBlock);
	RING_API_REGISTER("qtextcursor_hascomplexselection",ring_QTextCursor_hasComplexSelection);
	RING_API_REGISTER("qtextcursor_hasselection",ring_QTextCursor_hasSelection);
	RING_API_REGISTER("qtextcursor_insertblock",ring_QTextCursor_insertBlock);
	RING_API_REGISTER("qtextcursor_insertfragment",ring_QTextCursor_insertFragment);
	RING_API_REGISTER("qtextcursor_insertframe",ring_QTextCursor_insertFrame);
	RING_API_REGISTER("qtextcursor_inserthtml",ring_QTextCursor_insertHtml);
	RING_API_REGISTER("qtextcursor_insertimage",ring_QTextCursor_insertImage);
	RING_API_REGISTER("qtextcursor_insertlist",ring_QTextCursor_insertList);
	RING_API_REGISTER("qtextcursor_inserttable",ring_QTextCursor_insertTable);
	RING_API_REGISTER("qtextcursor_inserttext",ring_QTextCursor_insertText);
	RING_API_REGISTER("qtextcursor_inserttext_2",ring_QTextCursor_insertText_2);
	RING_API_REGISTER("qtextcursor_iscopyof",ring_QTextCursor_isCopyOf);
	RING_API_REGISTER("qtextcursor_isnull",ring_QTextCursor_isNull);
	RING_API_REGISTER("qtextcursor_joinpreviouseditblock",ring_QTextCursor_joinPreviousEditBlock);
	RING_API_REGISTER("qtextcursor_keeppositiononinsert",ring_QTextCursor_keepPositionOnInsert);
	RING_API_REGISTER("qtextcursor_mergeblockcharformat",ring_QTextCursor_mergeBlockCharFormat);
	RING_API_REGISTER("qtextcursor_mergeblockformat",ring_QTextCursor_mergeBlockFormat);
	RING_API_REGISTER("qtextcursor_mergecharformat",ring_QTextCursor_mergeCharFormat);
	RING_API_REGISTER("qtextcursor_moveposition",ring_QTextCursor_movePosition);
	RING_API_REGISTER("qtextcursor_position",ring_QTextCursor_position);
	RING_API_REGISTER("qtextcursor_positioninblock",ring_QTextCursor_positionInBlock);
	RING_API_REGISTER("qtextcursor_removeselectedtext",ring_QTextCursor_removeSelectedText);
	RING_API_REGISTER("qtextcursor_select",ring_QTextCursor_select);
	RING_API_REGISTER("qtextcursor_selectedtablecells",ring_QTextCursor_selectedTableCells);
	RING_API_REGISTER("qtextcursor_selectedtext",ring_QTextCursor_selectedText);
	RING_API_REGISTER("qtextcursor_selection",ring_QTextCursor_selection);
	RING_API_REGISTER("qtextcursor_selectionend",ring_QTextCursor_selectionEnd);
	RING_API_REGISTER("qtextcursor_selectionstart",ring_QTextCursor_selectionStart);
	RING_API_REGISTER("qtextcursor_setblockcharformat",ring_QTextCursor_setBlockCharFormat);
	RING_API_REGISTER("qtextcursor_setblockformat",ring_QTextCursor_setBlockFormat);
	RING_API_REGISTER("qtextcursor_setcharformat",ring_QTextCursor_setCharFormat);
	RING_API_REGISTER("qtextcursor_setkeeppositiononinsert",ring_QTextCursor_setKeepPositionOnInsert);
	RING_API_REGISTER("qtextcursor_setposition",ring_QTextCursor_setPosition);
	RING_API_REGISTER("qtextcursor_setverticalmovementx",ring_QTextCursor_setVerticalMovementX);
	RING_API_REGISTER("qtextcursor_setvisualnavigation",ring_QTextCursor_setVisualNavigation);
	RING_API_REGISTER("qtextcursor_verticalmovementx",ring_QTextCursor_verticalMovementX);
	RING_API_REGISTER("qtextcursor_visualnavigation",ring_QTextCursor_visualNavigation);
	RING_API_REGISTER("qtextdocument_addresource",ring_QTextDocument_addResource);
	RING_API_REGISTER("qtextdocument_adjustsize",ring_QTextDocument_adjustSize);
	RING_API_REGISTER("qtextdocument_allformats",ring_QTextDocument_allFormats);
	RING_API_REGISTER("qtextdocument_availableredosteps",ring_QTextDocument_availableRedoSteps);
	RING_API_REGISTER("qtextdocument_availableundosteps",ring_QTextDocument_availableUndoSteps);
	RING_API_REGISTER("qtextdocument_begin",ring_QTextDocument_begin);
	RING_API_REGISTER("qtextdocument_blockcount",ring_QTextDocument_blockCount);
	RING_API_REGISTER("qtextdocument_characterat",ring_QTextDocument_characterAt);
	RING_API_REGISTER("qtextdocument_charactercount",ring_QTextDocument_characterCount);
	RING_API_REGISTER("qtextdocument_clearundoredostacks",ring_QTextDocument_clearUndoRedoStacks);
	RING_API_REGISTER("qtextdocument_clone",ring_QTextDocument_clone);
	RING_API_REGISTER("qtextdocument_defaultcursormovestyle",ring_QTextDocument_defaultCursorMoveStyle);
	RING_API_REGISTER("qtextdocument_defaultfont",ring_QTextDocument_defaultFont);
	RING_API_REGISTER("qtextdocument_defaultstylesheet",ring_QTextDocument_defaultStyleSheet);
	RING_API_REGISTER("qtextdocument_defaulttextoption",ring_QTextDocument_defaultTextOption);
	RING_API_REGISTER("qtextdocument_documentlayout",ring_QTextDocument_documentLayout);
	RING_API_REGISTER("qtextdocument_documentmargin",ring_QTextDocument_documentMargin);
	RING_API_REGISTER("qtextdocument_drawcontents",ring_QTextDocument_drawContents);
	RING_API_REGISTER("qtextdocument_end",ring_QTextDocument_end);
	RING_API_REGISTER("qtextdocument_find",ring_QTextDocument_find);
	RING_API_REGISTER("qtextdocument_findblock",ring_QTextDocument_findBlock);
	RING_API_REGISTER("qtextdocument_findblockbylinenumber",ring_QTextDocument_findBlockByLineNumber);
	RING_API_REGISTER("qtextdocument_findblockbynumber",ring_QTextDocument_findBlockByNumber);
	RING_API_REGISTER("qtextdocument_firstblock",ring_QTextDocument_firstBlock);
	RING_API_REGISTER("qtextdocument_idealwidth",ring_QTextDocument_idealWidth);
	RING_API_REGISTER("qtextdocument_indentwidth",ring_QTextDocument_indentWidth);
	RING_API_REGISTER("qtextdocument_isempty",ring_QTextDocument_isEmpty);
	RING_API_REGISTER("qtextdocument_ismodified",ring_QTextDocument_isModified);
	RING_API_REGISTER("qtextdocument_isredoavailable",ring_QTextDocument_isRedoAvailable);
	RING_API_REGISTER("qtextdocument_isundoavailable",ring_QTextDocument_isUndoAvailable);
	RING_API_REGISTER("qtextdocument_isundoredoenabled",ring_QTextDocument_isUndoRedoEnabled);
	RING_API_REGISTER("qtextdocument_lastblock",ring_QTextDocument_lastBlock);
	RING_API_REGISTER("qtextdocument_linecount",ring_QTextDocument_lineCount);
	RING_API_REGISTER("qtextdocument_markcontentsdirty",ring_QTextDocument_markContentsDirty);
	RING_API_REGISTER("qtextdocument_maximumblockcount",ring_QTextDocument_maximumBlockCount);
	RING_API_REGISTER("qtextdocument_metainformation",ring_QTextDocument_metaInformation);
	RING_API_REGISTER("qtextdocument_object",ring_QTextDocument_object);
	RING_API_REGISTER("qtextdocument_objectforformat",ring_QTextDocument_objectForFormat);
	RING_API_REGISTER("qtextdocument_pagecount",ring_QTextDocument_pageCount);
	RING_API_REGISTER("qtextdocument_pagesize",ring_QTextDocument_pageSize);
	RING_API_REGISTER("qtextdocument_redo",ring_QTextDocument_redo);
	RING_API_REGISTER("qtextdocument_resource",ring_QTextDocument_resource);
	RING_API_REGISTER("qtextdocument_revision",ring_QTextDocument_revision);
	RING_API_REGISTER("qtextdocument_rootframe",ring_QTextDocument_rootFrame);
	RING_API_REGISTER("qtextdocument_setdefaultcursormovestyle",ring_QTextDocument_setDefaultCursorMoveStyle);
	RING_API_REGISTER("qtextdocument_setdefaultfont",ring_QTextDocument_setDefaultFont);
	RING_API_REGISTER("qtextdocument_setdefaultstylesheet",ring_QTextDocument_setDefaultStyleSheet);
	RING_API_REGISTER("qtextdocument_setdefaulttextoption",ring_QTextDocument_setDefaultTextOption);
	RING_API_REGISTER("qtextdocument_setdocumentlayout",ring_QTextDocument_setDocumentLayout);
	RING_API_REGISTER("qtextdocument_setdocumentmargin",ring_QTextDocument_setDocumentMargin);
	RING_API_REGISTER("qtextdocument_sethtml",ring_QTextDocument_setHtml);
	RING_API_REGISTER("qtextdocument_setindentwidth",ring_QTextDocument_setIndentWidth);
	RING_API_REGISTER("qtextdocument_setmaximumblockcount",ring_QTextDocument_setMaximumBlockCount);
	RING_API_REGISTER("qtextdocument_setmetainformation",ring_QTextDocument_setMetaInformation);
	RING_API_REGISTER("qtextdocument_setpagesize",ring_QTextDocument_setPageSize);
	RING_API_REGISTER("qtextdocument_setplaintext",ring_QTextDocument_setPlainText);
	RING_API_REGISTER("qtextdocument_settextwidth",ring_QTextDocument_setTextWidth);
	RING_API_REGISTER("qtextdocument_setundoredoenabled",ring_QTextDocument_setUndoRedoEnabled);
	RING_API_REGISTER("qtextdocument_setusedesignmetrics",ring_QTextDocument_setUseDesignMetrics);
	RING_API_REGISTER("qtextdocument_size",ring_QTextDocument_size);
	RING_API_REGISTER("qtextdocument_textwidth",ring_QTextDocument_textWidth);
	RING_API_REGISTER("qtextdocument_tohtml",ring_QTextDocument_toHtml);
	RING_API_REGISTER("qtextdocument_toplaintext",ring_QTextDocument_toPlainText);
	RING_API_REGISTER("qtextdocument_undo",ring_QTextDocument_undo);
	RING_API_REGISTER("qtextdocument_usedesignmetrics",ring_QTextDocument_useDesignMetrics);
	RING_API_REGISTER("qtextdocument_setmodified",ring_QTextDocument_setModified);
	RING_API_REGISTER("qtextblock_blockformat",ring_QTextBlock_blockFormat);
	RING_API_REGISTER("qtextblock_blockformatindex",ring_QTextBlock_blockFormatIndex);
	RING_API_REGISTER("qtextblock_blocknumber",ring_QTextBlock_blockNumber);
	RING_API_REGISTER("qtextblock_charformat",ring_QTextBlock_charFormat);
	RING_API_REGISTER("qtextblock_charformatindex",ring_QTextBlock_charFormatIndex);
	RING_API_REGISTER("qtextblock_clearlayout",ring_QTextBlock_clearLayout);
	RING_API_REGISTER("qtextblock_contains",ring_QTextBlock_contains);
	RING_API_REGISTER("qtextblock_document",ring_QTextBlock_document);
	RING_API_REGISTER("qtextblock_firstlinenumber",ring_QTextBlock_firstLineNumber);
	RING_API_REGISTER("qtextblock_isvalid",ring_QTextBlock_isValid);
	RING_API_REGISTER("qtextblock_isvisible",ring_QTextBlock_isVisible);
	RING_API_REGISTER("qtextblock_layout",ring_QTextBlock_layout);
	RING_API_REGISTER("qtextblock_length",ring_QTextBlock_length);
	RING_API_REGISTER("qtextblock_linecount",ring_QTextBlock_lineCount);
	RING_API_REGISTER("qtextblock_next",ring_QTextBlock_next);
	RING_API_REGISTER("qtextblock_position",ring_QTextBlock_position);
	RING_API_REGISTER("qtextblock_previous",ring_QTextBlock_previous);
	RING_API_REGISTER("qtextblock_revision",ring_QTextBlock_revision);
	RING_API_REGISTER("qtextblock_setlinecount",ring_QTextBlock_setLineCount);
	RING_API_REGISTER("qtextblock_setrevision",ring_QTextBlock_setRevision);
	RING_API_REGISTER("qtextblock_setuserdata",ring_QTextBlock_setUserData);
	RING_API_REGISTER("qtextblock_setuserstate",ring_QTextBlock_setUserState);
	RING_API_REGISTER("qtextblock_setvisible",ring_QTextBlock_setVisible);
	RING_API_REGISTER("qtextblock_text",ring_QTextBlock_text);
	RING_API_REGISTER("qtextblock_textdirection",ring_QTextBlock_textDirection);
	RING_API_REGISTER("qtextblock_textlist",ring_QTextBlock_textList);
	RING_API_REGISTER("qtextblock_userdata",ring_QTextBlock_userData);
	RING_API_REGISTER("qtextblock_userstate",ring_QTextBlock_userState);
	RING_API_REGISTER("qpainterpath_addellipse",ring_QPainterPath_addEllipse);
	RING_API_REGISTER("qpainterpath_addpath",ring_QPainterPath_addPath);
	RING_API_REGISTER("qpainterpath_addpolygon",ring_QPainterPath_addPolygon);
	RING_API_REGISTER("qpainterpath_addrect",ring_QPainterPath_addRect);
	RING_API_REGISTER("qpainterpath_addregion",ring_QPainterPath_addRegion);
	RING_API_REGISTER("qpainterpath_addroundedrect",ring_QPainterPath_addRoundedRect);
	RING_API_REGISTER("qpainterpath_addtext",ring_QPainterPath_addText);
	RING_API_REGISTER("qpainterpath_angleatpercent",ring_QPainterPath_angleAtPercent);
	RING_API_REGISTER("qpainterpath_arcmoveto",ring_QPainterPath_arcMoveTo);
	RING_API_REGISTER("qpainterpath_arcto",ring_QPainterPath_arcTo);
	RING_API_REGISTER("qpainterpath_boundingrect",ring_QPainterPath_boundingRect);
	RING_API_REGISTER("qpainterpath_closesubpath",ring_QPainterPath_closeSubpath);
	RING_API_REGISTER("qpainterpath_connectpath",ring_QPainterPath_connectPath);
	RING_API_REGISTER("qpainterpath_contains",ring_QPainterPath_contains);
	RING_API_REGISTER("qpainterpath_controlpointrect",ring_QPainterPath_controlPointRect);
	RING_API_REGISTER("qpainterpath_cubicto",ring_QPainterPath_cubicTo);
	RING_API_REGISTER("qpainterpath_currentposition",ring_QPainterPath_currentPosition);
	RING_API_REGISTER("qpainterpath_elementat",ring_QPainterPath_elementAt);
	RING_API_REGISTER("qpainterpath_elementcount",ring_QPainterPath_elementCount);
	RING_API_REGISTER("qpainterpath_fillrule",ring_QPainterPath_fillRule);
	RING_API_REGISTER("qpainterpath_intersected",ring_QPainterPath_intersected);
	RING_API_REGISTER("qpainterpath_intersects",ring_QPainterPath_intersects);
	RING_API_REGISTER("qpainterpath_isempty",ring_QPainterPath_isEmpty);
	RING_API_REGISTER("qpainterpath_length",ring_QPainterPath_length);
	RING_API_REGISTER("qpainterpath_lineto",ring_QPainterPath_lineTo);
	RING_API_REGISTER("qpainterpath_moveto",ring_QPainterPath_moveTo);
	RING_API_REGISTER("qpainterpath_percentatlength",ring_QPainterPath_percentAtLength);
	RING_API_REGISTER("qpainterpath_pointatpercent",ring_QPainterPath_pointAtPercent);
	RING_API_REGISTER("qpainterpath_quadto",ring_QPainterPath_quadTo);
	RING_API_REGISTER("qpainterpath_setelementpositionat",ring_QPainterPath_setElementPositionAt);
	RING_API_REGISTER("qpainterpath_setfillrule",ring_QPainterPath_setFillRule);
	RING_API_REGISTER("qpainterpath_simplified",ring_QPainterPath_simplified);
	RING_API_REGISTER("qpainterpath_slopeatpercent",ring_QPainterPath_slopeAtPercent);
	RING_API_REGISTER("qpainterpath_subtracted",ring_QPainterPath_subtracted);
	RING_API_REGISTER("qpainterpath_swap",ring_QPainterPath_swap);
	RING_API_REGISTER("qpainterpath_tofillpolygon",ring_QPainterPath_toFillPolygon);
	RING_API_REGISTER("qpainterpath_toreversed",ring_QPainterPath_toReversed);
	RING_API_REGISTER("qpainterpath_translate",ring_QPainterPath_translate);
	RING_API_REGISTER("qpainterpath_translated",ring_QPainterPath_translated);
	RING_API_REGISTER("qpainterpath_united",ring_QPainterPath_united);
	RING_API_REGISTER("qimage_bytecount",ring_QImage_byteCount);
	RING_API_REGISTER("qimage_allgray",ring_QImage_allGray);
	RING_API_REGISTER("qimage_bitplanecount",ring_QImage_bitPlaneCount);
	RING_API_REGISTER("qimage_bits",ring_QImage_bits);
	RING_API_REGISTER("qimage_bytesperline",ring_QImage_bytesPerLine);
	RING_API_REGISTER("qimage_cachekey",ring_QImage_cacheKey);
	RING_API_REGISTER("qimage_color",ring_QImage_color);
	RING_API_REGISTER("qimage_colorcount",ring_QImage_colorCount);
	RING_API_REGISTER("qimage_constbits",ring_QImage_constBits);
	RING_API_REGISTER("qimage_constscanline",ring_QImage_constScanLine);
	RING_API_REGISTER("qimage_converttoformat",ring_QImage_convertToFormat);
	RING_API_REGISTER("qimage_copy",ring_QImage_copy);
	RING_API_REGISTER("qimage_createalphamask",ring_QImage_createAlphaMask);
	RING_API_REGISTER("qimage_createheuristicmask",ring_QImage_createHeuristicMask);
	RING_API_REGISTER("qimage_createmaskfromcolor",ring_QImage_createMaskFromColor);
	RING_API_REGISTER("qimage_depth",ring_QImage_depth);
	RING_API_REGISTER("qimage_dotspermeterx",ring_QImage_dotsPerMeterX);
	RING_API_REGISTER("qimage_dotspermetery",ring_QImage_dotsPerMeterY);
	RING_API_REGISTER("qimage_fill",ring_QImage_fill);
	RING_API_REGISTER("qimage_format",ring_QImage_format);
	RING_API_REGISTER("qimage_hasalphachannel",ring_QImage_hasAlphaChannel);
	RING_API_REGISTER("qimage_height",ring_QImage_height);
	RING_API_REGISTER("qimage_invertpixels",ring_QImage_invertPixels);
	RING_API_REGISTER("qimage_isgrayscale",ring_QImage_isGrayscale);
	RING_API_REGISTER("qimage_isnull",ring_QImage_isNull);
	RING_API_REGISTER("qimage_load",ring_QImage_load);
	RING_API_REGISTER("qimage_loadfromdata",ring_QImage_loadFromData);
	RING_API_REGISTER("qimage_mirrored",ring_QImage_mirrored);
	RING_API_REGISTER("qimage_offset",ring_QImage_offset);
	RING_API_REGISTER("qimage_pixel",ring_QImage_pixel);
	RING_API_REGISTER("qimage_pixelindex",ring_QImage_pixelIndex);
	RING_API_REGISTER("qimage_rect",ring_QImage_rect);
	RING_API_REGISTER("qimage_rgbswapped",ring_QImage_rgbSwapped);
	RING_API_REGISTER("qimage_save",ring_QImage_save);
	RING_API_REGISTER("qimage_scaled",ring_QImage_scaled);
	RING_API_REGISTER("qimage_scaledtoheight",ring_QImage_scaledToHeight);
	RING_API_REGISTER("qimage_scaledtowidth",ring_QImage_scaledToWidth);
	RING_API_REGISTER("qimage_scanline",ring_QImage_scanLine);
	RING_API_REGISTER("qimage_setcolor",ring_QImage_setColor);
	RING_API_REGISTER("qimage_setcolorcount",ring_QImage_setColorCount);
	RING_API_REGISTER("qimage_setdotspermeterx",ring_QImage_setDotsPerMeterX);
	RING_API_REGISTER("qimage_setdotspermetery",ring_QImage_setDotsPerMeterY);
	RING_API_REGISTER("qimage_setoffset",ring_QImage_setOffset);
	RING_API_REGISTER("qimage_setpixel",ring_QImage_setPixel);
	RING_API_REGISTER("qimage_settext",ring_QImage_setText);
	RING_API_REGISTER("qimage_size",ring_QImage_size);
	RING_API_REGISTER("qimage_swap",ring_QImage_swap);
	RING_API_REGISTER("qimage_text",ring_QImage_text);
	RING_API_REGISTER("qimage_textkeys",ring_QImage_textKeys);
	RING_API_REGISTER("qimage_valid",ring_QImage_valid);
	RING_API_REGISTER("qimage_width",ring_QImage_width);
	RING_API_REGISTER("qtextcharformat_anchorhref",ring_QTextCharFormat_anchorHref);
	RING_API_REGISTER("qtextcharformat_anchornames",ring_QTextCharFormat_anchorNames);
	RING_API_REGISTER("qtextcharformat_font",ring_QTextCharFormat_font);
	RING_API_REGISTER("qtextcharformat_fontcapitalization",ring_QTextCharFormat_fontCapitalization);
	RING_API_REGISTER("qtextcharformat_fontfamily",ring_QTextCharFormat_fontFamily);
	RING_API_REGISTER("qtextcharformat_fontfixedpitch",ring_QTextCharFormat_fontFixedPitch);
	RING_API_REGISTER("qtextcharformat_fonthintingpreference",ring_QTextCharFormat_fontHintingPreference);
	RING_API_REGISTER("qtextcharformat_fontitalic",ring_QTextCharFormat_fontItalic);
	RING_API_REGISTER("qtextcharformat_fontkerning",ring_QTextCharFormat_fontKerning);
	RING_API_REGISTER("qtextcharformat_fontletterspacing",ring_QTextCharFormat_fontLetterSpacing);
	RING_API_REGISTER("qtextcharformat_fontletterspacingtype",ring_QTextCharFormat_fontLetterSpacingType);
	RING_API_REGISTER("qtextcharformat_fontoverline",ring_QTextCharFormat_fontOverline);
	RING_API_REGISTER("qtextcharformat_fontpointsize",ring_QTextCharFormat_fontPointSize);
	RING_API_REGISTER("qtextcharformat_fontstretch",ring_QTextCharFormat_fontStretch);
	RING_API_REGISTER("qtextcharformat_fontstrikeout",ring_QTextCharFormat_fontStrikeOut);
	RING_API_REGISTER("qtextcharformat_fontstylehint",ring_QTextCharFormat_fontStyleHint);
	RING_API_REGISTER("qtextcharformat_fontstylestrategy",ring_QTextCharFormat_fontStyleStrategy);
	RING_API_REGISTER("qtextcharformat_fontunderline",ring_QTextCharFormat_fontUnderline);
	RING_API_REGISTER("qtextcharformat_fontweight",ring_QTextCharFormat_fontWeight);
	RING_API_REGISTER("qtextcharformat_fontwordspacing",ring_QTextCharFormat_fontWordSpacing);
	RING_API_REGISTER("qtextcharformat_isanchor",ring_QTextCharFormat_isAnchor);
	RING_API_REGISTER("qtextcharformat_isvalid",ring_QTextCharFormat_isValid);
	RING_API_REGISTER("qtextcharformat_setanchor",ring_QTextCharFormat_setAnchor);
	RING_API_REGISTER("qtextcharformat_setanchorhref",ring_QTextCharFormat_setAnchorHref);
	RING_API_REGISTER("qtextcharformat_setanchornames",ring_QTextCharFormat_setAnchorNames);
	RING_API_REGISTER("qtextcharformat_setfont_2",ring_QTextCharFormat_setFont_2);
	RING_API_REGISTER("qtextcharformat_setfontcapitalization",ring_QTextCharFormat_setFontCapitalization);
	RING_API_REGISTER("qtextcharformat_setfontfamily",ring_QTextCharFormat_setFontFamily);
	RING_API_REGISTER("qtextcharformat_setfontfixedpitch",ring_QTextCharFormat_setFontFixedPitch);
	RING_API_REGISTER("qtextcharformat_setfonthintingpreference",ring_QTextCharFormat_setFontHintingPreference);
	RING_API_REGISTER("qtextcharformat_setfontitalic",ring_QTextCharFormat_setFontItalic);
	RING_API_REGISTER("qtextcharformat_setfontkerning",ring_QTextCharFormat_setFontKerning);
	RING_API_REGISTER("qtextcharformat_setfontletterspacing",ring_QTextCharFormat_setFontLetterSpacing);
	RING_API_REGISTER("qtextcharformat_setfontletterspacingtype",ring_QTextCharFormat_setFontLetterSpacingType);
	RING_API_REGISTER("qtextcharformat_setfontoverline",ring_QTextCharFormat_setFontOverline);
	RING_API_REGISTER("qtextcharformat_setfontpointsize",ring_QTextCharFormat_setFontPointSize);
	RING_API_REGISTER("qtextcharformat_setfontstretch",ring_QTextCharFormat_setFontStretch);
	RING_API_REGISTER("qtextcharformat_setfontstrikeout",ring_QTextCharFormat_setFontStrikeOut);
	RING_API_REGISTER("qtextcharformat_setfontstylehint",ring_QTextCharFormat_setFontStyleHint);
	RING_API_REGISTER("qtextcharformat_setfontstylestrategy",ring_QTextCharFormat_setFontStyleStrategy);
	RING_API_REGISTER("qtextcharformat_setfontunderline",ring_QTextCharFormat_setFontUnderline);
	RING_API_REGISTER("qtextcharformat_setfontweight",ring_QTextCharFormat_setFontWeight);
	RING_API_REGISTER("qtextcharformat_setfontwordspacing",ring_QTextCharFormat_setFontWordSpacing);
	RING_API_REGISTER("qtextcharformat_settextoutline",ring_QTextCharFormat_setTextOutline);
	RING_API_REGISTER("qtextcharformat_settooltip",ring_QTextCharFormat_setToolTip);
	RING_API_REGISTER("qtextcharformat_setunderlinecolor",ring_QTextCharFormat_setUnderlineColor);
	RING_API_REGISTER("qtextcharformat_setunderlinestyle",ring_QTextCharFormat_setUnderlineStyle);
	RING_API_REGISTER("qtextcharformat_setverticalalignment",ring_QTextCharFormat_setVerticalAlignment);
	RING_API_REGISTER("qtextcharformat_textoutline",ring_QTextCharFormat_textOutline);
	RING_API_REGISTER("qtextcharformat_tooltip",ring_QTextCharFormat_toolTip);
	RING_API_REGISTER("qtextcharformat_underlinecolor",ring_QTextCharFormat_underlineColor);
	RING_API_REGISTER("qtextcharformat_underlinestyle",ring_QTextCharFormat_underlineStyle);
	RING_API_REGISTER("qtextcharformat_verticalalignment",ring_QTextCharFormat_verticalAlignment);
	RING_API_REGISTER("qfontmetrics_width",ring_QFontMetrics_width);
	RING_API_REGISTER("qfontmetrics_width_2",ring_QFontMetrics_width_2);
	RING_API_REGISTER("qfontmetrics_ascent",ring_QFontMetrics_ascent);
	RING_API_REGISTER("qfontmetrics_averagecharwidth",ring_QFontMetrics_averageCharWidth);
	RING_API_REGISTER("qfontmetrics_boundingrect",ring_QFontMetrics_boundingRect);
	RING_API_REGISTER("qfontmetrics_boundingrect_2",ring_QFontMetrics_boundingRect_2);
	RING_API_REGISTER("qfontmetrics_boundingrect_3",ring_QFontMetrics_boundingRect_3);
	RING_API_REGISTER("qfontmetrics_boundingrect_4",ring_QFontMetrics_boundingRect_4);
	RING_API_REGISTER("qfontmetrics_descent",ring_QFontMetrics_descent);
	RING_API_REGISTER("qfontmetrics_elidedtext",ring_QFontMetrics_elidedText);
	RING_API_REGISTER("qfontmetrics_height",ring_QFontMetrics_height);
	RING_API_REGISTER("qfontmetrics_infont",ring_QFontMetrics_inFont);
	RING_API_REGISTER("qfontmetrics_infontucs4",ring_QFontMetrics_inFontUcs4);
	RING_API_REGISTER("qfontmetrics_leading",ring_QFontMetrics_leading);
	RING_API_REGISTER("qfontmetrics_leftbearing",ring_QFontMetrics_leftBearing);
	RING_API_REGISTER("qfontmetrics_linespacing",ring_QFontMetrics_lineSpacing);
	RING_API_REGISTER("qfontmetrics_linewidth",ring_QFontMetrics_lineWidth);
	RING_API_REGISTER("qfontmetrics_maxwidth",ring_QFontMetrics_maxWidth);
	RING_API_REGISTER("qfontmetrics_minleftbearing",ring_QFontMetrics_minLeftBearing);
	RING_API_REGISTER("qfontmetrics_minrightbearing",ring_QFontMetrics_minRightBearing);
	RING_API_REGISTER("qfontmetrics_overlinepos",ring_QFontMetrics_overlinePos);
	RING_API_REGISTER("qfontmetrics_rightbearing",ring_QFontMetrics_rightBearing);
	RING_API_REGISTER("qfontmetrics_size",ring_QFontMetrics_size);
	RING_API_REGISTER("qfontmetrics_strikeoutpos",ring_QFontMetrics_strikeOutPos);
	RING_API_REGISTER("qfontmetrics_tightboundingrect",ring_QFontMetrics_tightBoundingRect);
	RING_API_REGISTER("qfontmetrics_underlinepos",ring_QFontMetrics_underlinePos);
	RING_API_REGISTER("qfontmetrics_xheight",ring_QFontMetrics_xHeight);
	RING_API_REGISTER("qfontmetrics_horizontaladvance",ring_QFontMetrics_horizontalAdvance);
	RING_API_REGISTER("qfontmetrics_horizontaladvance_2",ring_QFontMetrics_horizontalAdvance_2);
	RING_API_REGISTER("qlineargradient_finalstop",ring_QLinearGradient_finalStop);
	RING_API_REGISTER("qlineargradient_setfinalstop",ring_QLinearGradient_setFinalStop);
	RING_API_REGISTER("qlineargradient_setfinalstop_2",ring_QLinearGradient_setFinalStop_2);
	RING_API_REGISTER("qlineargradient_setstart",ring_QLinearGradient_setStart);
	RING_API_REGISTER("qlineargradient_setstart_2",ring_QLinearGradient_setStart_2);
	RING_API_REGISTER("qlineargradient_start",ring_QLinearGradient_start);
	RING_API_REGISTER("qgradient_coordinatemode",ring_QGradient_coordinateMode);
	RING_API_REGISTER("qgradient_setcolorat",ring_QGradient_setColorAt);
	RING_API_REGISTER("qgradient_setcoordinatemode",ring_QGradient_setCoordinateMode);
	RING_API_REGISTER("qgradient_setspread",ring_QGradient_setSpread);
	RING_API_REGISTER("qgradient_setstops",ring_QGradient_setStops);
	RING_API_REGISTER("qgradient_spread",ring_QGradient_spread);
	RING_API_REGISTER("qgradient_stops",ring_QGradient_stops);
	RING_API_REGISTER("qgradient_type",ring_QGradient_type);
	RING_API_REGISTER("qcursor_bitmap",ring_QCursor_bitmap);
	RING_API_REGISTER("qcursor_mask",ring_QCursor_mask);
	RING_API_REGISTER("qcursor_hotspot",ring_QCursor_hotSpot);
	RING_API_REGISTER("qcursor_pixmap",ring_QCursor_pixmap);
	RING_API_REGISTER("qcursor_setshape",ring_QCursor_setShape);
	RING_API_REGISTER("qcursor_shape",ring_QCursor_shape);
	RING_API_REGISTER("qcursor_pos",ring_QCursor_pos);
	RING_API_REGISTER("qcursor_pos_2",ring_QCursor_pos_2);
	RING_API_REGISTER("qcursor_setpos",ring_QCursor_setPos);
	RING_API_REGISTER("qcursor_setpos_2",ring_QCursor_setPos_2);
	RING_API_REGISTER("qcursor_setpos_3",ring_QCursor_setPos_3);
	RING_API_REGISTER("qcursor_setpos_4",ring_QCursor_setPos_4);
	RING_API_REGISTER("qscreen_anglebetween",ring_QScreen_angleBetween);
	RING_API_REGISTER("qscreen_availablegeometry",ring_QScreen_availableGeometry);
	RING_API_REGISTER("qscreen_availablesize",ring_QScreen_availableSize);
	RING_API_REGISTER("qscreen_availablevirtualgeometry",ring_QScreen_availableVirtualGeometry);
	RING_API_REGISTER("qscreen_availablevirtualsize",ring_QScreen_availableVirtualSize);
	RING_API_REGISTER("qscreen_depth",ring_QScreen_depth);
	RING_API_REGISTER("qscreen_devicepixelratio",ring_QScreen_devicePixelRatio);
	RING_API_REGISTER("qscreen_geometry",ring_QScreen_geometry);
	RING_API_REGISTER("qscreen_grabwindow",ring_QScreen_grabWindow);
	RING_API_REGISTER("qscreen_grabwindow_2",ring_QScreen_grabWindow_2);
	RING_API_REGISTER("qscreen_handle",ring_QScreen_handle);
	RING_API_REGISTER("qscreen_islandscape",ring_QScreen_isLandscape);
	RING_API_REGISTER("qscreen_isportrait",ring_QScreen_isPortrait);
	RING_API_REGISTER("qscreen_logicaldotsperinch",ring_QScreen_logicalDotsPerInch);
	RING_API_REGISTER("qscreen_logicaldotsperinchx",ring_QScreen_logicalDotsPerInchX);
	RING_API_REGISTER("qscreen_logicaldotsperinchy",ring_QScreen_logicalDotsPerInchY);
	RING_API_REGISTER("qscreen_mapbetween",ring_QScreen_mapBetween);
	RING_API_REGISTER("qscreen_name",ring_QScreen_name);
	RING_API_REGISTER("qscreen_nativeorientation",ring_QScreen_nativeOrientation);
	RING_API_REGISTER("qscreen_orientation",ring_QScreen_orientation);
	RING_API_REGISTER("qscreen_orientationupdatemask",ring_QScreen_orientationUpdateMask);
	RING_API_REGISTER("qscreen_physicaldotsperinch",ring_QScreen_physicalDotsPerInch);
	RING_API_REGISTER("qscreen_physicaldotsperinchx",ring_QScreen_physicalDotsPerInchX);
	RING_API_REGISTER("qscreen_physicaldotsperinchy",ring_QScreen_physicalDotsPerInchY);
	RING_API_REGISTER("qscreen_physicalsize",ring_QScreen_physicalSize);
	RING_API_REGISTER("qscreen_primaryorientation",ring_QScreen_primaryOrientation);
	RING_API_REGISTER("qscreen_refreshrate",ring_QScreen_refreshRate);
	RING_API_REGISTER("qscreen_setorientationupdatemask",ring_QScreen_setOrientationUpdateMask);
	RING_API_REGISTER("qscreen_size",ring_QScreen_size);
	RING_API_REGISTER("qscreen_transformbetween",ring_QScreen_transformBetween);
	RING_API_REGISTER("qwindow_basesize",ring_QWindow_baseSize);
	RING_API_REGISTER("qwindow_contentorientation",ring_QWindow_contentOrientation);
	RING_API_REGISTER("qwindow_create",ring_QWindow_create);
	RING_API_REGISTER("qwindow_cursor",ring_QWindow_cursor);
	RING_API_REGISTER("qwindow_destroy",ring_QWindow_destroy);
	RING_API_REGISTER("qwindow_devicepixelratio",ring_QWindow_devicePixelRatio);
	RING_API_REGISTER("qwindow_filepath",ring_QWindow_filePath);
	RING_API_REGISTER("qwindow_flags",ring_QWindow_flags);
	RING_API_REGISTER("qwindow_focusobject",ring_QWindow_focusObject);
	RING_API_REGISTER("qwindow_framegeometry",ring_QWindow_frameGeometry);
	RING_API_REGISTER("qwindow_framemargins",ring_QWindow_frameMargins);
	RING_API_REGISTER("qwindow_frameposition",ring_QWindow_framePosition);
	RING_API_REGISTER("qwindow_geometry",ring_QWindow_geometry);
	RING_API_REGISTER("qwindow_height",ring_QWindow_height);
	RING_API_REGISTER("qwindow_icon",ring_QWindow_icon);
	RING_API_REGISTER("qwindow_isactive",ring_QWindow_isActive);
	RING_API_REGISTER("qwindow_isancestorof",ring_QWindow_isAncestorOf);
	RING_API_REGISTER("qwindow_isexposed",ring_QWindow_isExposed);
	RING_API_REGISTER("qwindow_ismodal",ring_QWindow_isModal);
	RING_API_REGISTER("qwindow_istoplevel",ring_QWindow_isTopLevel);
	RING_API_REGISTER("qwindow_isvisible",ring_QWindow_isVisible);
	RING_API_REGISTER("qwindow_mapfromglobal",ring_QWindow_mapFromGlobal);
	RING_API_REGISTER("qwindow_maptoglobal",ring_QWindow_mapToGlobal);
	RING_API_REGISTER("qwindow_mask",ring_QWindow_mask);
	RING_API_REGISTER("qwindow_maximumheight",ring_QWindow_maximumHeight);
	RING_API_REGISTER("qwindow_maximumsize",ring_QWindow_maximumSize);
	RING_API_REGISTER("qwindow_maximumwidth",ring_QWindow_maximumWidth);
	RING_API_REGISTER("qwindow_minimumheight",ring_QWindow_minimumHeight);
	RING_API_REGISTER("qwindow_minimumsize",ring_QWindow_minimumSize);
	RING_API_REGISTER("qwindow_minimumwidth",ring_QWindow_minimumWidth);
	RING_API_REGISTER("qwindow_modality",ring_QWindow_modality);
	RING_API_REGISTER("qwindow_opacity",ring_QWindow_opacity);
	RING_API_REGISTER("qwindow_position",ring_QWindow_position);
	RING_API_REGISTER("qwindow_reportcontentorientationchange",ring_QWindow_reportContentOrientationChange);
	RING_API_REGISTER("qwindow_requestedformat",ring_QWindow_requestedFormat);
	RING_API_REGISTER("qwindow_resize",ring_QWindow_resize);
	RING_API_REGISTER("qwindow_resize_2",ring_QWindow_resize_2);
	RING_API_REGISTER("qwindow_screen",ring_QWindow_screen);
	RING_API_REGISTER("qwindow_setbasesize",ring_QWindow_setBaseSize);
	RING_API_REGISTER("qwindow_setcursor",ring_QWindow_setCursor);
	RING_API_REGISTER("qwindow_setfilepath",ring_QWindow_setFilePath);
	RING_API_REGISTER("qwindow_setflags",ring_QWindow_setFlags);
	RING_API_REGISTER("qwindow_setformat",ring_QWindow_setFormat);
	RING_API_REGISTER("qwindow_setframeposition",ring_QWindow_setFramePosition);
	RING_API_REGISTER("qwindow_setgeometry",ring_QWindow_setGeometry);
	RING_API_REGISTER("qwindow_setgeometry_2",ring_QWindow_setGeometry_2);
	RING_API_REGISTER("qwindow_seticon",ring_QWindow_setIcon);
	RING_API_REGISTER("qwindow_setkeyboardgrabenabled",ring_QWindow_setKeyboardGrabEnabled);
	RING_API_REGISTER("qwindow_setmask",ring_QWindow_setMask);
	RING_API_REGISTER("qwindow_setmaximumsize",ring_QWindow_setMaximumSize);
	RING_API_REGISTER("qwindow_setminimumsize",ring_QWindow_setMinimumSize);
	RING_API_REGISTER("qwindow_setmodality",ring_QWindow_setModality);
	RING_API_REGISTER("qwindow_setmousegrabenabled",ring_QWindow_setMouseGrabEnabled);
	RING_API_REGISTER("qwindow_setopacity",ring_QWindow_setOpacity);
	RING_API_REGISTER("qwindow_setparent",ring_QWindow_setParent);
	RING_API_REGISTER("qwindow_setposition",ring_QWindow_setPosition);
	RING_API_REGISTER("qwindow_setposition_2",ring_QWindow_setPosition_2);
	RING_API_REGISTER("qwindow_setscreen",ring_QWindow_setScreen);
	RING_API_REGISTER("qwindow_setsizeincrement",ring_QWindow_setSizeIncrement);
	RING_API_REGISTER("qwindow_settransientparent",ring_QWindow_setTransientParent);
	RING_API_REGISTER("qwindow_setvisibility",ring_QWindow_setVisibility);
	RING_API_REGISTER("qwindow_setwindowstate",ring_QWindow_setWindowState);
	RING_API_REGISTER("qwindow_sizeincrement",ring_QWindow_sizeIncrement);
	RING_API_REGISTER("qwindow_title",ring_QWindow_title);
	RING_API_REGISTER("qwindow_transientparent",ring_QWindow_transientParent);
	RING_API_REGISTER("qwindow_type",ring_QWindow_type);
	RING_API_REGISTER("qwindow_unsetcursor",ring_QWindow_unsetCursor);
	RING_API_REGISTER("qwindow_visibility",ring_QWindow_visibility);
	RING_API_REGISTER("qwindow_width",ring_QWindow_width);
	RING_API_REGISTER("qwindow_winid",ring_QWindow_winId);
	RING_API_REGISTER("qwindow_windowstate",ring_QWindow_windowState);
	RING_API_REGISTER("qwindow_x",ring_QWindow_x);
	RING_API_REGISTER("qwindow_y",ring_QWindow_y);
	RING_API_REGISTER("qwindow_alert",ring_QWindow_alert);
	RING_API_REGISTER("qwindow_close",ring_QWindow_close);
	RING_API_REGISTER("qwindow_hide",ring_QWindow_hide);
	RING_API_REGISTER("qwindow_lower",ring_QWindow_lower);
	RING_API_REGISTER("qwindow_raise",ring_QWindow_raise);
	RING_API_REGISTER("qwindow_requestactivate",ring_QWindow_requestActivate);
	RING_API_REGISTER("qwindow_setheight",ring_QWindow_setHeight);
	RING_API_REGISTER("qwindow_setmaximumheight",ring_QWindow_setMaximumHeight);
	RING_API_REGISTER("qwindow_setmaximumwidth",ring_QWindow_setMaximumWidth);
	RING_API_REGISTER("qwindow_setminimumheight",ring_QWindow_setMinimumHeight);
	RING_API_REGISTER("qwindow_setminimumwidth",ring_QWindow_setMinimumWidth);
	RING_API_REGISTER("qwindow_settitle",ring_QWindow_setTitle);
	RING_API_REGISTER("qwindow_setvisible",ring_QWindow_setVisible);
	RING_API_REGISTER("qwindow_setwidth",ring_QWindow_setWidth);
	RING_API_REGISTER("qwindow_setx",ring_QWindow_setX);
	RING_API_REGISTER("qwindow_sety",ring_QWindow_setY);
	RING_API_REGISTER("qwindow_show",ring_QWindow_show);
	RING_API_REGISTER("qwindow_showfullscreen",ring_QWindow_showFullScreen);
	RING_API_REGISTER("qwindow_showmaximized",ring_QWindow_showMaximized);
	RING_API_REGISTER("qwindow_showminimized",ring_QWindow_showMinimized);
	RING_API_REGISTER("qwindow_shownormal",ring_QWindow_showNormal);
	RING_API_REGISTER("qwindow_fromwinid",ring_QWindow_fromWinId);
	RING_API_REGISTER("qwindow_setactivechangedevent",ring_QWindow_setactiveChangedEvent);
	RING_API_REGISTER("qwindow_setcontentorientationchangedevent",ring_QWindow_setcontentOrientationChangedEvent);
	RING_API_REGISTER("qwindow_setfocusobjectchangedevent",ring_QWindow_setfocusObjectChangedEvent);
	RING_API_REGISTER("qwindow_setheightchangedevent",ring_QWindow_setheightChangedEvent);
	RING_API_REGISTER("qwindow_setmaximumheightchangedevent",ring_QWindow_setmaximumHeightChangedEvent);
	RING_API_REGISTER("qwindow_setmaximumwidthchangedevent",ring_QWindow_setmaximumWidthChangedEvent);
	RING_API_REGISTER("qwindow_setminimumheightchangedevent",ring_QWindow_setminimumHeightChangedEvent);
	RING_API_REGISTER("qwindow_setminimumwidthchangedevent",ring_QWindow_setminimumWidthChangedEvent);
	RING_API_REGISTER("qwindow_setmodalitychangedevent",ring_QWindow_setmodalityChangedEvent);
	RING_API_REGISTER("qwindow_setopacitychangedevent",ring_QWindow_setopacityChangedEvent);
	RING_API_REGISTER("qwindow_setscreenchangedevent",ring_QWindow_setscreenChangedEvent);
	RING_API_REGISTER("qwindow_setvisibilitychangedevent",ring_QWindow_setvisibilityChangedEvent);
	RING_API_REGISTER("qwindow_setvisiblechangedevent",ring_QWindow_setvisibleChangedEvent);
	RING_API_REGISTER("qwindow_setwidthchangedevent",ring_QWindow_setwidthChangedEvent);
	RING_API_REGISTER("qwindow_setwindowstatechangedevent",ring_QWindow_setwindowStateChangedEvent);
	RING_API_REGISTER("qwindow_setwindowtitlechangedevent",ring_QWindow_setwindowTitleChangedEvent);
	RING_API_REGISTER("qwindow_setxchangedevent",ring_QWindow_setxChangedEvent);
	RING_API_REGISTER("qwindow_setychangedevent",ring_QWindow_setyChangedEvent);
	RING_API_REGISTER("qwindow_getactivechangedevent",ring_QWindow_getactiveChangedEvent);
	RING_API_REGISTER("qwindow_getcontentorientationchangedevent",ring_QWindow_getcontentOrientationChangedEvent);
	RING_API_REGISTER("qwindow_getfocusobjectchangedevent",ring_QWindow_getfocusObjectChangedEvent);
	RING_API_REGISTER("qwindow_getheightchangedevent",ring_QWindow_getheightChangedEvent);
	RING_API_REGISTER("qwindow_getmaximumheightchangedevent",ring_QWindow_getmaximumHeightChangedEvent);
	RING_API_REGISTER("qwindow_getmaximumwidthchangedevent",ring_QWindow_getmaximumWidthChangedEvent);
	RING_API_REGISTER("qwindow_getminimumheightchangedevent",ring_QWindow_getminimumHeightChangedEvent);
	RING_API_REGISTER("qwindow_getminimumwidthchangedevent",ring_QWindow_getminimumWidthChangedEvent);
	RING_API_REGISTER("qwindow_getmodalitychangedevent",ring_QWindow_getmodalityChangedEvent);
	RING_API_REGISTER("qwindow_getopacitychangedevent",ring_QWindow_getopacityChangedEvent);
	RING_API_REGISTER("qwindow_getscreenchangedevent",ring_QWindow_getscreenChangedEvent);
	RING_API_REGISTER("qwindow_getvisibilitychangedevent",ring_QWindow_getvisibilityChangedEvent);
	RING_API_REGISTER("qwindow_getvisiblechangedevent",ring_QWindow_getvisibleChangedEvent);
	RING_API_REGISTER("qwindow_getwidthchangedevent",ring_QWindow_getwidthChangedEvent);
	RING_API_REGISTER("qwindow_getwindowstatechangedevent",ring_QWindow_getwindowStateChangedEvent);
	RING_API_REGISTER("qwindow_getwindowtitlechangedevent",ring_QWindow_getwindowTitleChangedEvent);
	RING_API_REGISTER("qwindow_getxchangedevent",ring_QWindow_getxChangedEvent);
	RING_API_REGISTER("qwindow_getychangedevent",ring_QWindow_getyChangedEvent);
	RING_API_REGISTER("qguiapplication_devicepixelratio",ring_QGuiApplication_devicePixelRatio);
	RING_API_REGISTER("qguiapplication_issavingsession",ring_QGuiApplication_isSavingSession);
	RING_API_REGISTER("qguiapplication_issessionrestored",ring_QGuiApplication_isSessionRestored);
	RING_API_REGISTER("qguiapplication_sessionid",ring_QGuiApplication_sessionId);
	RING_API_REGISTER("qguiapplication_sessionkey",ring_QGuiApplication_sessionKey);
	RING_API_REGISTER("qguiapplication_allwindows",ring_QGuiApplication_allWindows);
	RING_API_REGISTER("qguiapplication_applicationdisplayname",ring_QGuiApplication_applicationDisplayName);
	RING_API_REGISTER("qguiapplication_applicationstate",ring_QGuiApplication_applicationState);
	RING_API_REGISTER("qguiapplication_changeoverridecursor",ring_QGuiApplication_changeOverrideCursor);
	RING_API_REGISTER("qguiapplication_clipboard",ring_QGuiApplication_clipboard);
	RING_API_REGISTER("qguiapplication_desktopsettingsaware",ring_QGuiApplication_desktopSettingsAware);
	RING_API_REGISTER("qguiapplication_exec",ring_QGuiApplication_exec);
	RING_API_REGISTER("qguiapplication_focusobject",ring_QGuiApplication_focusObject);
	RING_API_REGISTER("qguiapplication_focuswindow",ring_QGuiApplication_focusWindow);
	RING_API_REGISTER("qguiapplication_font",ring_QGuiApplication_font);
	RING_API_REGISTER("qguiapplication_inputmethod",ring_QGuiApplication_inputMethod);
	RING_API_REGISTER("qguiapplication_islefttoright",ring_QGuiApplication_isLeftToRight);
	RING_API_REGISTER("qguiapplication_isrighttoleft",ring_QGuiApplication_isRightToLeft);
	RING_API_REGISTER("qguiapplication_keyboardmodifiers",ring_QGuiApplication_keyboardModifiers);
	RING_API_REGISTER("qguiapplication_layoutdirection",ring_QGuiApplication_layoutDirection);
	RING_API_REGISTER("qguiapplication_modalwindow",ring_QGuiApplication_modalWindow);
	RING_API_REGISTER("qguiapplication_mousebuttons",ring_QGuiApplication_mouseButtons);
	RING_API_REGISTER("qguiapplication_overridecursor",ring_QGuiApplication_overrideCursor);
	RING_API_REGISTER("qguiapplication_palette",ring_QGuiApplication_palette);
	RING_API_REGISTER("qguiapplication_platformname",ring_QGuiApplication_platformName);
	RING_API_REGISTER("qguiapplication_platformnativeinterface",ring_QGuiApplication_platformNativeInterface);
	RING_API_REGISTER("qguiapplication_primaryscreen",ring_QGuiApplication_primaryScreen);
	RING_API_REGISTER("qguiapplication_querykeyboardmodifiers",ring_QGuiApplication_queryKeyboardModifiers);
	RING_API_REGISTER("qguiapplication_quitonlastwindowclosed",ring_QGuiApplication_quitOnLastWindowClosed);
	RING_API_REGISTER("qguiapplication_restoreoverridecursor",ring_QGuiApplication_restoreOverrideCursor);
	RING_API_REGISTER("qguiapplication_screens",ring_QGuiApplication_screens);
	RING_API_REGISTER("qguiapplication_setapplicationdisplayname",ring_QGuiApplication_setApplicationDisplayName);
	RING_API_REGISTER("qguiapplication_setdesktopsettingsaware",ring_QGuiApplication_setDesktopSettingsAware);
	RING_API_REGISTER("qguiapplication_setfont",ring_QGuiApplication_setFont);
	RING_API_REGISTER("qguiapplication_setlayoutdirection",ring_QGuiApplication_setLayoutDirection);
	RING_API_REGISTER("qguiapplication_setoverridecursor",ring_QGuiApplication_setOverrideCursor);
	RING_API_REGISTER("qguiapplication_setpalette",ring_QGuiApplication_setPalette);
	RING_API_REGISTER("qguiapplication_setquitonlastwindowclosed",ring_QGuiApplication_setQuitOnLastWindowClosed);
	RING_API_REGISTER("qguiapplication_stylehints",ring_QGuiApplication_styleHints);
	RING_API_REGISTER("qguiapplication_sync",ring_QGuiApplication_sync);
	RING_API_REGISTER("qguiapplication_toplevelat",ring_QGuiApplication_topLevelAt);
	RING_API_REGISTER("qguiapplication_toplevelwindows",ring_QGuiApplication_topLevelWindows);
	RING_API_REGISTER("qguiapplication_setapplicationdisplaynamechangedevent",ring_QGuiApplication_setapplicationDisplayNameChangedEvent);
	RING_API_REGISTER("qguiapplication_setapplicationstatechangedevent",ring_QGuiApplication_setapplicationStateChangedEvent);
	RING_API_REGISTER("qguiapplication_setcommitdatarequestevent",ring_QGuiApplication_setcommitDataRequestEvent);
	RING_API_REGISTER("qguiapplication_setfocusobjectchangedevent",ring_QGuiApplication_setfocusObjectChangedEvent);
	RING_API_REGISTER("qguiapplication_setfocuswindowchangedevent",ring_QGuiApplication_setfocusWindowChangedEvent);
	RING_API_REGISTER("qguiapplication_setfontdatabasechangedevent",ring_QGuiApplication_setfontDatabaseChangedEvent);
	RING_API_REGISTER("qguiapplication_setlastwindowclosedevent",ring_QGuiApplication_setlastWindowClosedEvent);
	RING_API_REGISTER("qguiapplication_setlayoutdirectionchangedevent",ring_QGuiApplication_setlayoutDirectionChangedEvent);
	RING_API_REGISTER("qguiapplication_setpalettechangedevent",ring_QGuiApplication_setpaletteChangedEvent);
	RING_API_REGISTER("qguiapplication_setprimaryscreenchangedevent",ring_QGuiApplication_setprimaryScreenChangedEvent);
	RING_API_REGISTER("qguiapplication_setsavestaterequestevent",ring_QGuiApplication_setsaveStateRequestEvent);
	RING_API_REGISTER("qguiapplication_setscreenaddedevent",ring_QGuiApplication_setscreenAddedEvent);
	RING_API_REGISTER("qguiapplication_setscreenremovedevent",ring_QGuiApplication_setscreenRemovedEvent);
	RING_API_REGISTER("qguiapplication_getapplicationdisplaynamechangedevent",ring_QGuiApplication_getapplicationDisplayNameChangedEvent);
	RING_API_REGISTER("qguiapplication_getapplicationstatechangedevent",ring_QGuiApplication_getapplicationStateChangedEvent);
	RING_API_REGISTER("qguiapplication_getcommitdatarequestevent",ring_QGuiApplication_getcommitDataRequestEvent);
	RING_API_REGISTER("qguiapplication_getfocusobjectchangedevent",ring_QGuiApplication_getfocusObjectChangedEvent);
	RING_API_REGISTER("qguiapplication_getfocuswindowchangedevent",ring_QGuiApplication_getfocusWindowChangedEvent);
	RING_API_REGISTER("qguiapplication_getfontdatabasechangedevent",ring_QGuiApplication_getfontDatabaseChangedEvent);
	RING_API_REGISTER("qguiapplication_getlastwindowclosedevent",ring_QGuiApplication_getlastWindowClosedEvent);
	RING_API_REGISTER("qguiapplication_getlayoutdirectionchangedevent",ring_QGuiApplication_getlayoutDirectionChangedEvent);
	RING_API_REGISTER("qguiapplication_getpalettechangedevent",ring_QGuiApplication_getpaletteChangedEvent);
	RING_API_REGISTER("qguiapplication_getprimaryscreenchangedevent",ring_QGuiApplication_getprimaryScreenChangedEvent);
	RING_API_REGISTER("qguiapplication_getsavestaterequestevent",ring_QGuiApplication_getsaveStateRequestEvent);
	RING_API_REGISTER("qguiapplication_getscreenaddedevent",ring_QGuiApplication_getscreenAddedEvent);
	RING_API_REGISTER("qguiapplication_getscreenremovedevent",ring_QGuiApplication_getscreenRemovedEvent);
	RING_API_REGISTER("qregion_rects",ring_QRegion_rects);
	RING_API_REGISTER("qregion_boundingrect",ring_QRegion_boundingRect);
	RING_API_REGISTER("qregion_contains",ring_QRegion_contains);
	RING_API_REGISTER("qregion_contains_2",ring_QRegion_contains_2);
	RING_API_REGISTER("qregion_intersected",ring_QRegion_intersected);
	RING_API_REGISTER("qregion_intersected_2",ring_QRegion_intersected_2);
	RING_API_REGISTER("qregion_intersects",ring_QRegion_intersects);
	RING_API_REGISTER("qregion_intersects_2",ring_QRegion_intersects_2);
	RING_API_REGISTER("qregion_isempty",ring_QRegion_isEmpty);
	RING_API_REGISTER("qregion_isnull",ring_QRegion_isNull);
	RING_API_REGISTER("qregion_rectcount",ring_QRegion_rectCount);
	RING_API_REGISTER("qregion_setrects",ring_QRegion_setRects);
	RING_API_REGISTER("qregion_subtracted",ring_QRegion_subtracted);
	RING_API_REGISTER("qregion_swap",ring_QRegion_swap);
	RING_API_REGISTER("qregion_translate",ring_QRegion_translate);
	RING_API_REGISTER("qregion_translate_2",ring_QRegion_translate_2);
	RING_API_REGISTER("qregion_translated",ring_QRegion_translated);
	RING_API_REGISTER("qregion_translated_2",ring_QRegion_translated_2);
	RING_API_REGISTER("qregion_united",ring_QRegion_united);
	RING_API_REGISTER("qregion_united_2",ring_QRegion_united_2);
	RING_API_REGISTER("qregion_xored",ring_QRegion_xored);
	RING_API_REGISTER("qvector2d_distancetoline",ring_QVector2D_distanceToLine);
	RING_API_REGISTER("qvector2d_distancetopoint",ring_QVector2D_distanceToPoint);
	RING_API_REGISTER("qvector2d_isnull",ring_QVector2D_isNull);
	RING_API_REGISTER("qvector2d_length",ring_QVector2D_length);
	RING_API_REGISTER("qvector2d_lengthsquared",ring_QVector2D_lengthSquared);
	RING_API_REGISTER("qvector2d_normalize",ring_QVector2D_normalize);
	RING_API_REGISTER("qvector2d_normalized",ring_QVector2D_normalized);
	RING_API_REGISTER("qvector2d_setx",ring_QVector2D_setX);
	RING_API_REGISTER("qvector2d_sety",ring_QVector2D_setY);
	RING_API_REGISTER("qvector2d_topoint",ring_QVector2D_toPoint);
	RING_API_REGISTER("qvector2d_topointf",ring_QVector2D_toPointF);
	RING_API_REGISTER("qvector2d_tovector3d",ring_QVector2D_toVector3D);
	RING_API_REGISTER("qvector2d_tovector4d",ring_QVector2D_toVector4D);
	RING_API_REGISTER("qvector2d_x",ring_QVector2D_x);
	RING_API_REGISTER("qvector2d_y",ring_QVector2D_y);
	RING_API_REGISTER("qvector2d_dotproduct",ring_QVector2D_dotProduct);
	RING_API_REGISTER("qvector3d_distancetoline",ring_QVector3D_distanceToLine);
	RING_API_REGISTER("qvector3d_distancetoplane",ring_QVector3D_distanceToPlane);
	RING_API_REGISTER("qvector3d_distancetoplane_2",ring_QVector3D_distanceToPlane_2);
	RING_API_REGISTER("qvector3d_distancetopoint",ring_QVector3D_distanceToPoint);
	RING_API_REGISTER("qvector3d_isnull",ring_QVector3D_isNull);
	RING_API_REGISTER("qvector3d_length",ring_QVector3D_length);
	RING_API_REGISTER("qvector3d_lengthsquared",ring_QVector3D_lengthSquared);
	RING_API_REGISTER("qvector3d_normalize",ring_QVector3D_normalize);
	RING_API_REGISTER("qvector3d_normalized",ring_QVector3D_normalized);
	RING_API_REGISTER("qvector3d_project",ring_QVector3D_project);
	RING_API_REGISTER("qvector3d_setx",ring_QVector3D_setX);
	RING_API_REGISTER("qvector3d_sety",ring_QVector3D_setY);
	RING_API_REGISTER("qvector3d_setz",ring_QVector3D_setZ);
	RING_API_REGISTER("qvector3d_topoint",ring_QVector3D_toPoint);
	RING_API_REGISTER("qvector3d_topointf",ring_QVector3D_toPointF);
	RING_API_REGISTER("qvector3d_tovector2d",ring_QVector3D_toVector2D);
	RING_API_REGISTER("qvector3d_tovector4d",ring_QVector3D_toVector4D);
	RING_API_REGISTER("qvector3d_unproject",ring_QVector3D_unproject);
	RING_API_REGISTER("qvector3d_x",ring_QVector3D_x);
	RING_API_REGISTER("qvector3d_y",ring_QVector3D_y);
	RING_API_REGISTER("qvector3d_z",ring_QVector3D_z);
	RING_API_REGISTER("qvector3d_crossproduct",ring_QVector3D_crossProduct);
	RING_API_REGISTER("qvector3d_dotproduct",ring_QVector3D_dotProduct);
	RING_API_REGISTER("qvector3d_normal",ring_QVector3D_normal);
	RING_API_REGISTER("qvector3d_normal_2",ring_QVector3D_normal_2);
	RING_API_REGISTER("qvector4d_isnull",ring_QVector4D_isNull);
	RING_API_REGISTER("qvector4d_length",ring_QVector4D_length);
	RING_API_REGISTER("qvector4d_lengthsquared",ring_QVector4D_lengthSquared);
	RING_API_REGISTER("qvector4d_normalize",ring_QVector4D_normalize);
	RING_API_REGISTER("qvector4d_normalized",ring_QVector4D_normalized);
	RING_API_REGISTER("qvector4d_setw",ring_QVector4D_setW);
	RING_API_REGISTER("qvector4d_setx",ring_QVector4D_setX);
	RING_API_REGISTER("qvector4d_sety",ring_QVector4D_setY);
	RING_API_REGISTER("qvector4d_setz",ring_QVector4D_setZ);
	RING_API_REGISTER("qvector4d_topoint",ring_QVector4D_toPoint);
	RING_API_REGISTER("qvector4d_topointf",ring_QVector4D_toPointF);
	RING_API_REGISTER("qvector4d_tovector2d",ring_QVector4D_toVector2D);
	RING_API_REGISTER("qvector4d_tovector2daffine",ring_QVector4D_toVector2DAffine);
	RING_API_REGISTER("qvector4d_tovector3d",ring_QVector4D_toVector3D);
	RING_API_REGISTER("qvector4d_tovector3daffine",ring_QVector4D_toVector3DAffine);
	RING_API_REGISTER("qvector4d_w",ring_QVector4D_w);
	RING_API_REGISTER("qvector4d_x",ring_QVector4D_x);
	RING_API_REGISTER("qvector4d_y",ring_QVector4D_y);
	RING_API_REGISTER("qvector4d_z",ring_QVector4D_z);
	RING_API_REGISTER("qvector4d_dotproduct",ring_QVector4D_dotProduct);
	RING_API_REGISTER("qquaternion_isidentity",ring_QQuaternion_isIdentity);
	RING_API_REGISTER("qquaternion_isnull",ring_QQuaternion_isNull);
	RING_API_REGISTER("qquaternion_length",ring_QQuaternion_length);
	RING_API_REGISTER("qquaternion_lengthsquared",ring_QQuaternion_lengthSquared);
	RING_API_REGISTER("qquaternion_normalize",ring_QQuaternion_normalize);
	RING_API_REGISTER("qquaternion_normalized",ring_QQuaternion_normalized);
	RING_API_REGISTER("qquaternion_rotatedvector",ring_QQuaternion_rotatedVector);
	RING_API_REGISTER("qquaternion_scalar",ring_QQuaternion_scalar);
	RING_API_REGISTER("qquaternion_setscalar",ring_QQuaternion_setScalar);
	RING_API_REGISTER("qquaternion_setvector",ring_QQuaternion_setVector);
	RING_API_REGISTER("qquaternion_setvector_2",ring_QQuaternion_setVector_2);
	RING_API_REGISTER("qquaternion_setx",ring_QQuaternion_setX);
	RING_API_REGISTER("qquaternion_sety",ring_QQuaternion_setY);
	RING_API_REGISTER("qquaternion_setz",ring_QQuaternion_setZ);
	RING_API_REGISTER("qquaternion_tovector4d",ring_QQuaternion_toVector4D);
	RING_API_REGISTER("qquaternion_vector",ring_QQuaternion_vector);
	RING_API_REGISTER("qquaternion_x",ring_QQuaternion_x);
	RING_API_REGISTER("qquaternion_y",ring_QQuaternion_y);
	RING_API_REGISTER("qquaternion_z",ring_QQuaternion_z);
	RING_API_REGISTER("qquaternion_fromaxisandangle",ring_QQuaternion_fromAxisAndAngle);
	RING_API_REGISTER("qquaternion_fromaxisandangle_2",ring_QQuaternion_fromAxisAndAngle_2);
	RING_API_REGISTER("qquaternion_nlerp",ring_QQuaternion_nlerp);
	RING_API_REGISTER("qquaternion_slerp",ring_QQuaternion_slerp);
	RING_API_REGISTER("qmatrix4x4_toaffine",ring_QMatrix4x4_toAffine);
	RING_API_REGISTER("qmatrix4x4_column",ring_QMatrix4x4_column);
	RING_API_REGISTER("qmatrix4x4_constdata",ring_QMatrix4x4_constData);
	RING_API_REGISTER("qmatrix4x4_data",ring_QMatrix4x4_data);
	RING_API_REGISTER("qmatrix4x4_data_2",ring_QMatrix4x4_data_2);
	RING_API_REGISTER("qmatrix4x4_determinant",ring_QMatrix4x4_determinant);
	RING_API_REGISTER("qmatrix4x4_fill",ring_QMatrix4x4_fill);
	RING_API_REGISTER("qmatrix4x4_flipcoordinates",ring_QMatrix4x4_flipCoordinates);
	RING_API_REGISTER("qmatrix4x4_frustum",ring_QMatrix4x4_frustum);
	RING_API_REGISTER("qmatrix4x4_inverted",ring_QMatrix4x4_inverted);
	RING_API_REGISTER("qmatrix4x4_isidentity",ring_QMatrix4x4_isIdentity);
	RING_API_REGISTER("qmatrix4x4_lookat",ring_QMatrix4x4_lookAt);
	RING_API_REGISTER("qmatrix4x4_map",ring_QMatrix4x4_map);
	RING_API_REGISTER("qmatrix4x4_map_2",ring_QMatrix4x4_map_2);
	RING_API_REGISTER("qmatrix4x4_map_3",ring_QMatrix4x4_map_3);
	RING_API_REGISTER("qmatrix4x4_map_4",ring_QMatrix4x4_map_4);
	RING_API_REGISTER("qmatrix4x4_maprect",ring_QMatrix4x4_mapRect);
	RING_API_REGISTER("qmatrix4x4_maprect_2",ring_QMatrix4x4_mapRect_2);
	RING_API_REGISTER("qmatrix4x4_mapvector",ring_QMatrix4x4_mapVector);
	RING_API_REGISTER("qmatrix4x4_normalmatrix",ring_QMatrix4x4_normalMatrix);
	RING_API_REGISTER("qmatrix4x4_optimize",ring_QMatrix4x4_optimize);
	RING_API_REGISTER("qmatrix4x4_ortho",ring_QMatrix4x4_ortho);
	RING_API_REGISTER("qmatrix4x4_ortho_2",ring_QMatrix4x4_ortho_2);
	RING_API_REGISTER("qmatrix4x4_ortho_3",ring_QMatrix4x4_ortho_3);
	RING_API_REGISTER("qmatrix4x4_perspective",ring_QMatrix4x4_perspective);
	RING_API_REGISTER("qmatrix4x4_rotate",ring_QMatrix4x4_rotate);
	RING_API_REGISTER("qmatrix4x4_rotate_2",ring_QMatrix4x4_rotate_2);
	RING_API_REGISTER("qmatrix4x4_rotate_3",ring_QMatrix4x4_rotate_3);
	RING_API_REGISTER("qmatrix4x4_row",ring_QMatrix4x4_row);
	RING_API_REGISTER("qmatrix4x4_scale",ring_QMatrix4x4_scale);
	RING_API_REGISTER("qmatrix4x4_scale_2",ring_QMatrix4x4_scale_2);
	RING_API_REGISTER("qmatrix4x4_scale_3",ring_QMatrix4x4_scale_3);
	RING_API_REGISTER("qmatrix4x4_scale_4",ring_QMatrix4x4_scale_4);
	RING_API_REGISTER("qmatrix4x4_setcolumn",ring_QMatrix4x4_setColumn);
	RING_API_REGISTER("qmatrix4x4_setrow",ring_QMatrix4x4_setRow);
	RING_API_REGISTER("qmatrix4x4_settoidentity",ring_QMatrix4x4_setToIdentity);
	RING_API_REGISTER("qmatrix4x4_totransform",ring_QMatrix4x4_toTransform);
	RING_API_REGISTER("qmatrix4x4_totransform_2",ring_QMatrix4x4_toTransform_2);
	RING_API_REGISTER("qmatrix4x4_translate",ring_QMatrix4x4_translate);
	RING_API_REGISTER("qmatrix4x4_translate_2",ring_QMatrix4x4_translate_2);
	RING_API_REGISTER("qmatrix4x4_translate_3",ring_QMatrix4x4_translate_3);
	RING_API_REGISTER("qmatrix4x4_transposed",ring_QMatrix4x4_transposed);
	RING_API_REGISTER("qdrag_defaultaction",ring_QDrag_defaultAction);
	RING_API_REGISTER("qdrag_dragcursor",ring_QDrag_dragCursor);
	RING_API_REGISTER("qdrag_exec",ring_QDrag_exec);
	RING_API_REGISTER("qdrag_exec_2",ring_QDrag_exec_2);
	RING_API_REGISTER("qdrag_hotspot",ring_QDrag_hotSpot);
	RING_API_REGISTER("qdrag_mimedata",ring_QDrag_mimeData);
	RING_API_REGISTER("qdrag_pixmap",ring_QDrag_pixmap);
	RING_API_REGISTER("qdrag_setdragcursor",ring_QDrag_setDragCursor);
	RING_API_REGISTER("qdrag_sethotspot",ring_QDrag_setHotSpot);
	RING_API_REGISTER("qdrag_setmimedata",ring_QDrag_setMimeData);
	RING_API_REGISTER("qdrag_setpixmap",ring_QDrag_setPixmap);
	RING_API_REGISTER("qdrag_source",ring_QDrag_source);
	RING_API_REGISTER("qdrag_supportedactions",ring_QDrag_supportedActions);
	RING_API_REGISTER("qdrag_target",ring_QDrag_target);
	RING_API_REGISTER("qdrag_setactionchangedevent",ring_QDrag_setactionChangedEvent);
	RING_API_REGISTER("qdrag_settargetchangedevent",ring_QDrag_settargetChangedEvent);
	RING_API_REGISTER("qdrag_getactionchangedevent",ring_QDrag_getactionChangedEvent);
	RING_API_REGISTER("qdrag_gettargetchangedevent",ring_QDrag_gettargetChangedEvent);
	RING_API_REGISTER("qdropevent_acceptproposedaction",ring_QDropEvent_acceptProposedAction);
	RING_API_REGISTER("qdropevent_dropaction",ring_QDropEvent_dropAction);
	RING_API_REGISTER("qdropevent_keyboardmodifiers",ring_QDropEvent_keyboardModifiers);
	RING_API_REGISTER("qdropevent_mimedata",ring_QDropEvent_mimeData);
	RING_API_REGISTER("qdropevent_mousebuttons",ring_QDropEvent_mouseButtons);
	RING_API_REGISTER("qdropevent_pos",ring_QDropEvent_pos);
	RING_API_REGISTER("qdropevent_posf",ring_QDropEvent_posF);
	RING_API_REGISTER("qdropevent_possibleactions",ring_QDropEvent_possibleActions);
	RING_API_REGISTER("qdropevent_proposedaction",ring_QDropEvent_proposedAction);
	RING_API_REGISTER("qdropevent_setdropaction",ring_QDropEvent_setDropAction);
	RING_API_REGISTER("qdropevent_source",ring_QDropEvent_source);
	RING_API_REGISTER("qdragmoveevent_accept",ring_QDragMoveEvent_accept);
	RING_API_REGISTER("qdragmoveevent_accept_2",ring_QDragMoveEvent_accept_2);
	RING_API_REGISTER("qdragmoveevent_answerrect",ring_QDragMoveEvent_answerRect);
	RING_API_REGISTER("qdragmoveevent_ignore",ring_QDragMoveEvent_ignore);
	RING_API_REGISTER("qdragmoveevent_ignore_2",ring_QDragMoveEvent_ignore_2);
	RING_API_REGISTER("qclipboard_clear",ring_QClipboard_clear);
	RING_API_REGISTER("qclipboard_image",ring_QClipboard_image);
	RING_API_REGISTER("qclipboard_mimedata",ring_QClipboard_mimeData);
	RING_API_REGISTER("qclipboard_ownsclipboard",ring_QClipboard_ownsClipboard);
	RING_API_REGISTER("qclipboard_ownsfindbuffer",ring_QClipboard_ownsFindBuffer);
	RING_API_REGISTER("qclipboard_ownsselection",ring_QClipboard_ownsSelection);
	RING_API_REGISTER("qclipboard_pixmap",ring_QClipboard_pixmap);
	RING_API_REGISTER("qclipboard_setimage",ring_QClipboard_setImage);
	RING_API_REGISTER("qclipboard_setmimedata",ring_QClipboard_setMimeData);
	RING_API_REGISTER("qclipboard_setpixmap",ring_QClipboard_setPixmap);
	RING_API_REGISTER("qclipboard_settext",ring_QClipboard_setText);
	RING_API_REGISTER("qclipboard_supportsfindbuffer",ring_QClipboard_supportsFindBuffer);
	RING_API_REGISTER("qclipboard_supportsselection",ring_QClipboard_supportsSelection);
	RING_API_REGISTER("qclipboard_text",ring_QClipboard_text);
	RING_API_REGISTER("qmovie_backgroundcolor",ring_QMovie_backgroundColor);
	RING_API_REGISTER("qmovie_cachemode",ring_QMovie_cacheMode);
	RING_API_REGISTER("qmovie_currentframenumber",ring_QMovie_currentFrameNumber);
	RING_API_REGISTER("qmovie_currentimage",ring_QMovie_currentImage);
	RING_API_REGISTER("qmovie_currentpixmap",ring_QMovie_currentPixmap);
	RING_API_REGISTER("qmovie_device",ring_QMovie_device);
	RING_API_REGISTER("qmovie_filename",ring_QMovie_fileName);
	RING_API_REGISTER("qmovie_format",ring_QMovie_format);
	RING_API_REGISTER("qmovie_framecount",ring_QMovie_frameCount);
	RING_API_REGISTER("qmovie_framerect",ring_QMovie_frameRect);
	RING_API_REGISTER("qmovie_isvalid",ring_QMovie_isValid);
	RING_API_REGISTER("qmovie_jumptoframe",ring_QMovie_jumpToFrame);
	RING_API_REGISTER("qmovie_loopcount",ring_QMovie_loopCount);
	RING_API_REGISTER("qmovie_nextframedelay",ring_QMovie_nextFrameDelay);
	RING_API_REGISTER("qmovie_scaledsize",ring_QMovie_scaledSize);
	RING_API_REGISTER("qmovie_setbackgroundcolor",ring_QMovie_setBackgroundColor);
	RING_API_REGISTER("qmovie_setcachemode",ring_QMovie_setCacheMode);
	RING_API_REGISTER("qmovie_setdevice",ring_QMovie_setDevice);
	RING_API_REGISTER("qmovie_setfilename",ring_QMovie_setFileName);
	RING_API_REGISTER("qmovie_setformat",ring_QMovie_setFormat);
	RING_API_REGISTER("qmovie_setscaledsize",ring_QMovie_setScaledSize);
	RING_API_REGISTER("qmovie_speed",ring_QMovie_speed);
	RING_API_REGISTER("qmovie_state",ring_QMovie_state);
	RING_API_REGISTER("qmovie_jumptonextframe",ring_QMovie_jumpToNextFrame);
	RING_API_REGISTER("qmovie_setpaused",ring_QMovie_setPaused);
	RING_API_REGISTER("qmovie_setspeed",ring_QMovie_setSpeed);
	RING_API_REGISTER("qmovie_start",ring_QMovie_start);
	RING_API_REGISTER("qmovie_stop",ring_QMovie_stop);
	RING_API_REGISTER("qmovie_seterrorevent",ring_QMovie_seterrorEvent);
	RING_API_REGISTER("qmovie_setfinishedevent",ring_QMovie_setfinishedEvent);
	RING_API_REGISTER("qmovie_setframechangedevent",ring_QMovie_setframeChangedEvent);
	RING_API_REGISTER("qmovie_setresizedevent",ring_QMovie_setresizedEvent);
	RING_API_REGISTER("qmovie_setstartedevent",ring_QMovie_setstartedEvent);
	RING_API_REGISTER("qmovie_setstatechangedevent",ring_QMovie_setstateChangedEvent);
	RING_API_REGISTER("qmovie_setupdatedevent",ring_QMovie_setupdatedEvent);
	RING_API_REGISTER("qmovie_geterrorevent",ring_QMovie_geterrorEvent);
	RING_API_REGISTER("qmovie_getfinishedevent",ring_QMovie_getfinishedEvent);
	RING_API_REGISTER("qmovie_getframechangedevent",ring_QMovie_getframeChangedEvent);
	RING_API_REGISTER("qmovie_getresizedevent",ring_QMovie_getresizedEvent);
	RING_API_REGISTER("qmovie_getstartedevent",ring_QMovie_getstartedEvent);
	RING_API_REGISTER("qmovie_getstatechangedevent",ring_QMovie_getstateChangedEvent);
	RING_API_REGISTER("qmovie_getupdatedevent",ring_QMovie_getupdatedEvent);
	RING_API_REGISTER("qapp_exec",ring_QApp_exec);
	RING_API_REGISTER("qapp_quit",ring_QApp_quit);
	RING_API_REGISTER("qapp_processevents",ring_QApp_processEvents);
	RING_API_REGISTER("qapp_stylewindows",ring_QApp_styleWindows);
	RING_API_REGISTER("qapp_stylewindowsvista",ring_QApp_styleWindowsVista);
	RING_API_REGISTER("qapp_stylefusion",ring_QApp_styleFusion);
	RING_API_REGISTER("qapp_stylefusionblack",ring_QApp_styleFusionBlack);
	RING_API_REGISTER("qapp_stylefusioncustom",ring_QApp_styleFusionCustom);
	RING_API_REGISTER("qapp_closeallwindows",ring_QApp_closeAllWindows);
	RING_API_REGISTER("qapp_keyboardmodifiers",ring_QApp_keyboardModifiers);
	RING_API_REGISTER("qapp_clipboard",ring_QApp_clipboard);
	RING_API_REGISTER("qapp_style",ring_QApp_style);
	RING_API_REGISTER("qapp_aboutqt",ring_QApp_aboutQt);
	RING_API_REGISTER("qapp_activemodalwidget",ring_QApp_activeModalWidget);
	RING_API_REGISTER("qapp_activepopupwidget",ring_QApp_activePopupWidget);
	RING_API_REGISTER("qapp_activewindow",ring_QApp_activeWindow);
	RING_API_REGISTER("qapp_focuswidget",ring_QApp_focusWidget);
	RING_API_REGISTER("qapp_titlebarheight",ring_QApp_titlebarHeight);
	RING_API_REGISTER("qwidget_getcontentsmargins",ring_QWidget_getContentsMargins);
	RING_API_REGISTER("qwidget_acceptdrops",ring_QWidget_acceptDrops);
	RING_API_REGISTER("qwidget_accessibledescription",ring_QWidget_accessibleDescription);
	RING_API_REGISTER("qwidget_accessiblename",ring_QWidget_accessibleName);
	RING_API_REGISTER("qwidget_activatewindow",ring_QWidget_activateWindow);
	RING_API_REGISTER("qwidget_addaction",ring_QWidget_addAction);
	RING_API_REGISTER("qwidget_adjustsize",ring_QWidget_adjustSize);
	RING_API_REGISTER("qwidget_autofillbackground",ring_QWidget_autoFillBackground);
	RING_API_REGISTER("qwidget_backgroundrole",ring_QWidget_backgroundRole);
	RING_API_REGISTER("qwidget_basesize",ring_QWidget_baseSize);
	RING_API_REGISTER("qwidget_childat",ring_QWidget_childAt);
	RING_API_REGISTER("qwidget_childrenrect",ring_QWidget_childrenRect);
	RING_API_REGISTER("qwidget_childrenregion",ring_QWidget_childrenRegion);
	RING_API_REGISTER("qwidget_clearfocus",ring_QWidget_clearFocus);
	RING_API_REGISTER("qwidget_clearmask",ring_QWidget_clearMask);
	RING_API_REGISTER("qwidget_contentsmargins",ring_QWidget_contentsMargins);
	RING_API_REGISTER("qwidget_contentsrect",ring_QWidget_contentsRect);
	RING_API_REGISTER("qwidget_contextmenupolicy",ring_QWidget_contextMenuPolicy);
	RING_API_REGISTER("qwidget_cursor",ring_QWidget_cursor);
	RING_API_REGISTER("qwidget_effectivewinid",ring_QWidget_effectiveWinId);
	RING_API_REGISTER("qwidget_ensurepolished",ring_QWidget_ensurePolished);
	RING_API_REGISTER("qwidget_focuspolicy",ring_QWidget_focusPolicy);
	RING_API_REGISTER("qwidget_focusproxy",ring_QWidget_focusProxy);
	RING_API_REGISTER("qwidget_focuswidget",ring_QWidget_focusWidget);
	RING_API_REGISTER("qwidget_font",ring_QWidget_font);
	RING_API_REGISTER("qwidget_fontinfo",ring_QWidget_fontInfo);
	RING_API_REGISTER("qwidget_foregroundrole",ring_QWidget_foregroundRole);
	RING_API_REGISTER("qwidget_framegeometry",ring_QWidget_frameGeometry);
	RING_API_REGISTER("qwidget_framesize",ring_QWidget_frameSize);
	RING_API_REGISTER("qwidget_geometry",ring_QWidget_geometry);
	RING_API_REGISTER("qwidget_grab",ring_QWidget_grab);
	RING_API_REGISTER("qwidget_grabgesture",ring_QWidget_grabGesture);
	RING_API_REGISTER("qwidget_grabkeyboard",ring_QWidget_grabKeyboard);
	RING_API_REGISTER("qwidget_grabmouse",ring_QWidget_grabMouse);
	RING_API_REGISTER("qwidget_grabshortcut",ring_QWidget_grabShortcut);
	RING_API_REGISTER("qwidget_graphicseffect",ring_QWidget_graphicsEffect);
	RING_API_REGISTER("qwidget_graphicsproxywidget",ring_QWidget_graphicsProxyWidget);
	RING_API_REGISTER("qwidget_hasfocus",ring_QWidget_hasFocus);
	RING_API_REGISTER("qwidget_hasmousetracking",ring_QWidget_hasMouseTracking);
	RING_API_REGISTER("qwidget_height",ring_QWidget_height);
	RING_API_REGISTER("qwidget_heightforwidth",ring_QWidget_heightForWidth);
	RING_API_REGISTER("qwidget_inputmethodhints",ring_QWidget_inputMethodHints);
	RING_API_REGISTER("qwidget_inputmethodquery",ring_QWidget_inputMethodQuery);
	RING_API_REGISTER("qwidget_insertaction",ring_QWidget_insertAction);
	RING_API_REGISTER("qwidget_isactivewindow",ring_QWidget_isActiveWindow);
	RING_API_REGISTER("qwidget_isancestorof",ring_QWidget_isAncestorOf);
	RING_API_REGISTER("qwidget_isenabled",ring_QWidget_isEnabled);
	RING_API_REGISTER("qwidget_isenabledto",ring_QWidget_isEnabledTo);
	RING_API_REGISTER("qwidget_isfullscreen",ring_QWidget_isFullScreen);
	RING_API_REGISTER("qwidget_ishidden",ring_QWidget_isHidden);
	RING_API_REGISTER("qwidget_ismaximized",ring_QWidget_isMaximized);
	RING_API_REGISTER("qwidget_isminimized",ring_QWidget_isMinimized);
	RING_API_REGISTER("qwidget_ismodal",ring_QWidget_isModal);
	RING_API_REGISTER("qwidget_isvisible",ring_QWidget_isVisible);
	RING_API_REGISTER("qwidget_isvisibleto",ring_QWidget_isVisibleTo);
	RING_API_REGISTER("qwidget_iswindow",ring_QWidget_isWindow);
	RING_API_REGISTER("qwidget_iswindowmodified",ring_QWidget_isWindowModified);
	RING_API_REGISTER("qwidget_layout",ring_QWidget_layout);
	RING_API_REGISTER("qwidget_layoutdirection",ring_QWidget_layoutDirection);
	RING_API_REGISTER("qwidget_locale",ring_QWidget_locale);
	RING_API_REGISTER("qwidget_mapfrom",ring_QWidget_mapFrom);
	RING_API_REGISTER("qwidget_mapfromglobal",ring_QWidget_mapFromGlobal);
	RING_API_REGISTER("qwidget_mapfromparent",ring_QWidget_mapFromParent);
	RING_API_REGISTER("qwidget_mapto",ring_QWidget_mapTo);
	RING_API_REGISTER("qwidget_maptoglobal",ring_QWidget_mapToGlobal);
	RING_API_REGISTER("qwidget_maptoparent",ring_QWidget_mapToParent);
	RING_API_REGISTER("qwidget_mask",ring_QWidget_mask);
	RING_API_REGISTER("qwidget_maximumheight",ring_QWidget_maximumHeight);
	RING_API_REGISTER("qwidget_maximumsize",ring_QWidget_maximumSize);
	RING_API_REGISTER("qwidget_maximumwidth",ring_QWidget_maximumWidth);
	RING_API_REGISTER("qwidget_minimumheight",ring_QWidget_minimumHeight);
	RING_API_REGISTER("qwidget_minimumsize",ring_QWidget_minimumSize);
	RING_API_REGISTER("qwidget_minimumwidth",ring_QWidget_minimumWidth);
	RING_API_REGISTER("qwidget_move",ring_QWidget_move);
	RING_API_REGISTER("qwidget_nativeparentwidget",ring_QWidget_nativeParentWidget);
	RING_API_REGISTER("qwidget_nextinfocuschain",ring_QWidget_nextInFocusChain);
	RING_API_REGISTER("qwidget_normalgeometry",ring_QWidget_normalGeometry);
	RING_API_REGISTER("qwidget_overridewindowflags",ring_QWidget_overrideWindowFlags);
	RING_API_REGISTER("qwidget_palette",ring_QWidget_palette);
	RING_API_REGISTER("qwidget_parentwidget",ring_QWidget_parentWidget);
	RING_API_REGISTER("qwidget_pos",ring_QWidget_pos);
	RING_API_REGISTER("qwidget_previousinfocuschain",ring_QWidget_previousInFocusChain);
	RING_API_REGISTER("qwidget_rect",ring_QWidget_rect);
	RING_API_REGISTER("qwidget_releasekeyboard",ring_QWidget_releaseKeyboard);
	RING_API_REGISTER("qwidget_releasemouse",ring_QWidget_releaseMouse);
	RING_API_REGISTER("qwidget_releaseshortcut",ring_QWidget_releaseShortcut);
	RING_API_REGISTER("qwidget_removeaction",ring_QWidget_removeAction);
	RING_API_REGISTER("qwidget_render",ring_QWidget_render);
	RING_API_REGISTER("qwidget_repaint",ring_QWidget_repaint);
	RING_API_REGISTER("qwidget_resize",ring_QWidget_resize);
	RING_API_REGISTER("qwidget_restoregeometry",ring_QWidget_restoreGeometry);
	RING_API_REGISTER("qwidget_savegeometry",ring_QWidget_saveGeometry);
	RING_API_REGISTER("qwidget_scroll",ring_QWidget_scroll);
	RING_API_REGISTER("qwidget_setacceptdrops",ring_QWidget_setAcceptDrops);
	RING_API_REGISTER("qwidget_setaccessibledescription",ring_QWidget_setAccessibleDescription);
	RING_API_REGISTER("qwidget_setaccessiblename",ring_QWidget_setAccessibleName);
	RING_API_REGISTER("qwidget_setattribute",ring_QWidget_setAttribute);
	RING_API_REGISTER("qwidget_setautofillbackground",ring_QWidget_setAutoFillBackground);
	RING_API_REGISTER("qwidget_setbackgroundrole",ring_QWidget_setBackgroundRole);
	RING_API_REGISTER("qwidget_setbasesize",ring_QWidget_setBaseSize);
	RING_API_REGISTER("qwidget_setcontentsmargins",ring_QWidget_setContentsMargins);
	RING_API_REGISTER("qwidget_setcontextmenupolicy",ring_QWidget_setContextMenuPolicy);
	RING_API_REGISTER("qwidget_setcursor",ring_QWidget_setCursor);
	RING_API_REGISTER("qwidget_setfixedheight",ring_QWidget_setFixedHeight);
	RING_API_REGISTER("qwidget_setfixedsize",ring_QWidget_setFixedSize);
	RING_API_REGISTER("qwidget_setfixedwidth",ring_QWidget_setFixedWidth);
	RING_API_REGISTER("qwidget_setfocus",ring_QWidget_setFocus);
	RING_API_REGISTER("qwidget_setfocuspolicy",ring_QWidget_setFocusPolicy);
	RING_API_REGISTER("qwidget_setfocusproxy",ring_QWidget_setFocusProxy);
	RING_API_REGISTER("qwidget_setfont",ring_QWidget_setFont);
	RING_API_REGISTER("qwidget_setforegroundrole",ring_QWidget_setForegroundRole);
	RING_API_REGISTER("qwidget_setgeometry",ring_QWidget_setGeometry);
	RING_API_REGISTER("qwidget_setgraphicseffect",ring_QWidget_setGraphicsEffect);
	RING_API_REGISTER("qwidget_setinputmethodhints",ring_QWidget_setInputMethodHints);
	RING_API_REGISTER("qwidget_setlayout",ring_QWidget_setLayout);
	RING_API_REGISTER("qwidget_setlayoutdirection",ring_QWidget_setLayoutDirection);
	RING_API_REGISTER("qwidget_setlocale",ring_QWidget_setLocale);
	RING_API_REGISTER("qwidget_setmask",ring_QWidget_setMask);
	RING_API_REGISTER("qwidget_setmaximumheight",ring_QWidget_setMaximumHeight);
	RING_API_REGISTER("qwidget_setmaximumsize",ring_QWidget_setMaximumSize);
	RING_API_REGISTER("qwidget_setmaximumwidth",ring_QWidget_setMaximumWidth);
	RING_API_REGISTER("qwidget_setminimumheight",ring_QWidget_setMinimumHeight);
	RING_API_REGISTER("qwidget_setminimumsize",ring_QWidget_setMinimumSize);
	RING_API_REGISTER("qwidget_setminimumwidth",ring_QWidget_setMinimumWidth);
	RING_API_REGISTER("qwidget_setmousetracking",ring_QWidget_setMouseTracking);
	RING_API_REGISTER("qwidget_setpalette",ring_QWidget_setPalette);
	RING_API_REGISTER("qwidget_setparent",ring_QWidget_setParent);
	RING_API_REGISTER("qwidget_setshortcutautorepeat",ring_QWidget_setShortcutAutoRepeat);
	RING_API_REGISTER("qwidget_setshortcutenabled",ring_QWidget_setShortcutEnabled);
	RING_API_REGISTER("qwidget_setsizeincrement",ring_QWidget_setSizeIncrement);
	RING_API_REGISTER("qwidget_setsizepolicy",ring_QWidget_setSizePolicy);
	RING_API_REGISTER("qwidget_setstatustip",ring_QWidget_setStatusTip);
	RING_API_REGISTER("qwidget_setstyle",ring_QWidget_setStyle);
	RING_API_REGISTER("qwidget_settooltip",ring_QWidget_setToolTip);
	RING_API_REGISTER("qwidget_setupdatesenabled",ring_QWidget_setUpdatesEnabled);
	RING_API_REGISTER("qwidget_setwhatsthis",ring_QWidget_setWhatsThis);
	RING_API_REGISTER("qwidget_setwindowfilepath",ring_QWidget_setWindowFilePath);
	RING_API_REGISTER("qwidget_setwindowflags",ring_QWidget_setWindowFlags);
	RING_API_REGISTER("qwidget_setwindowicon",ring_QWidget_setWindowIcon);
	RING_API_REGISTER("qwidget_setwindowicontext",ring_QWidget_setWindowIconText);
	RING_API_REGISTER("qwidget_setwindowmodality",ring_QWidget_setWindowModality);
	RING_API_REGISTER("qwidget_setwindowopacity",ring_QWidget_setWindowOpacity);
	RING_API_REGISTER("qwidget_setwindowrole",ring_QWidget_setWindowRole);
	RING_API_REGISTER("qwidget_setwindowstate",ring_QWidget_setWindowState);
	RING_API_REGISTER("qwidget_size",ring_QWidget_size);
	RING_API_REGISTER("qwidget_sizeincrement",ring_QWidget_sizeIncrement);
	RING_API_REGISTER("qwidget_sizepolicy",ring_QWidget_sizePolicy);
	RING_API_REGISTER("qwidget_stackunder",ring_QWidget_stackUnder);
	RING_API_REGISTER("qwidget_statustip",ring_QWidget_statusTip);
	RING_API_REGISTER("qwidget_style",ring_QWidget_style);
	RING_API_REGISTER("qwidget_stylesheet",ring_QWidget_styleSheet);
	RING_API_REGISTER("qwidget_testattribute",ring_QWidget_testAttribute);
	RING_API_REGISTER("qwidget_tooltip",ring_QWidget_toolTip);
	RING_API_REGISTER("qwidget_undermouse",ring_QWidget_underMouse);
	RING_API_REGISTER("qwidget_ungrabgesture",ring_QWidget_ungrabGesture);
	RING_API_REGISTER("qwidget_unsetcursor",ring_QWidget_unsetCursor);
	RING_API_REGISTER("qwidget_unsetlayoutdirection",ring_QWidget_unsetLayoutDirection);
	RING_API_REGISTER("qwidget_unsetlocale",ring_QWidget_unsetLocale);
	RING_API_REGISTER("qwidget_update",ring_QWidget_update);
	RING_API_REGISTER("qwidget_updategeometry",ring_QWidget_updateGeometry);
	RING_API_REGISTER("qwidget_updatesenabled",ring_QWidget_updatesEnabled);
	RING_API_REGISTER("qwidget_visibleregion",ring_QWidget_visibleRegion);
	RING_API_REGISTER("qwidget_whatsthis",ring_QWidget_whatsThis);
	RING_API_REGISTER("qwidget_width",ring_QWidget_width);
	RING_API_REGISTER("qwidget_winid",ring_QWidget_winId);
	RING_API_REGISTER("qwidget_window",ring_QWidget_window);
	RING_API_REGISTER("qwidget_windowfilepath",ring_QWidget_windowFilePath);
	RING_API_REGISTER("qwidget_windowflags",ring_QWidget_windowFlags);
	RING_API_REGISTER("qwidget_windowhandle",ring_QWidget_windowHandle);
	RING_API_REGISTER("qwidget_windowicon",ring_QWidget_windowIcon);
	RING_API_REGISTER("qwidget_windowicontext",ring_QWidget_windowIconText);
	RING_API_REGISTER("qwidget_windowmodality",ring_QWidget_windowModality);
	RING_API_REGISTER("qwidget_windowopacity",ring_QWidget_windowOpacity);
	RING_API_REGISTER("qwidget_windowrole",ring_QWidget_windowRole);
	RING_API_REGISTER("qwidget_windowstate",ring_QWidget_windowState);
	RING_API_REGISTER("qwidget_windowtitle",ring_QWidget_windowTitle);
	RING_API_REGISTER("qwidget_windowtype",ring_QWidget_windowType);
	RING_API_REGISTER("qwidget_x",ring_QWidget_x);
	RING_API_REGISTER("qwidget_y",ring_QWidget_y);
	RING_API_REGISTER("qwidget_close",ring_QWidget_close);
	RING_API_REGISTER("qwidget_hide",ring_QWidget_hide);
	RING_API_REGISTER("qwidget_lower",ring_QWidget_lower);
	RING_API_REGISTER("qwidget_raise",ring_QWidget_raise);
	RING_API_REGISTER("qwidget_setdisabled",ring_QWidget_setDisabled);
	RING_API_REGISTER("qwidget_setenabled",ring_QWidget_setEnabled);
	RING_API_REGISTER("qwidget_sethidden",ring_QWidget_setHidden);
	RING_API_REGISTER("qwidget_setstylesheet",ring_QWidget_setStyleSheet);
	RING_API_REGISTER("qwidget_setwindowmodified",ring_QWidget_setWindowModified);
	RING_API_REGISTER("qwidget_setwindowtitle",ring_QWidget_setWindowTitle);
	RING_API_REGISTER("qwidget_show",ring_QWidget_show);
	RING_API_REGISTER("qwidget_showfullscreen",ring_QWidget_showFullScreen);
	RING_API_REGISTER("qwidget_showmaximized",ring_QWidget_showMaximized);
	RING_API_REGISTER("qwidget_showminimized",ring_QWidget_showMinimized);
	RING_API_REGISTER("qwidget_shownormal",ring_QWidget_showNormal);
	RING_API_REGISTER("qwidget_find",ring_QWidget_find);
	RING_API_REGISTER("qwidget_keyboardgrabber",ring_QWidget_keyboardGrabber);
	RING_API_REGISTER("qwidget_mousegrabber",ring_QWidget_mouseGrabber);
	RING_API_REGISTER("qwidget_settaborder",ring_QWidget_setTabOrder);
	RING_API_REGISTER("qwidget_createwindowcontainer",ring_QWidget_createWindowContainer);
	RING_API_REGISTER("qlabel_picture",ring_QLabel_picture);
	RING_API_REGISTER("qlabel_pixmap",ring_QLabel_pixmap);
	RING_API_REGISTER("qlabel_alignment",ring_QLabel_alignment);
	RING_API_REGISTER("qlabel_buddy",ring_QLabel_buddy);
	RING_API_REGISTER("qlabel_hasscaledcontents",ring_QLabel_hasScaledContents);
	RING_API_REGISTER("qlabel_hasselectedtext",ring_QLabel_hasSelectedText);
	RING_API_REGISTER("qlabel_indent",ring_QLabel_indent);
	RING_API_REGISTER("qlabel_margin",ring_QLabel_margin);
	RING_API_REGISTER("qlabel_movie",ring_QLabel_movie);
	RING_API_REGISTER("qlabel_openexternallinks",ring_QLabel_openExternalLinks);
	RING_API_REGISTER("qlabel_selectedtext",ring_QLabel_selectedText);
	RING_API_REGISTER("qlabel_selectionstart",ring_QLabel_selectionStart);
	RING_API_REGISTER("qlabel_setalignment",ring_QLabel_setAlignment);
	RING_API_REGISTER("qlabel_setbuddy",ring_QLabel_setBuddy);
	RING_API_REGISTER("qlabel_setindent",ring_QLabel_setIndent);
	RING_API_REGISTER("qlabel_setmargin",ring_QLabel_setMargin);
	RING_API_REGISTER("qlabel_setopenexternallinks",ring_QLabel_setOpenExternalLinks);
	RING_API_REGISTER("qlabel_setscaledcontents",ring_QLabel_setScaledContents);
	RING_API_REGISTER("qlabel_setselection",ring_QLabel_setSelection);
	RING_API_REGISTER("qlabel_settextformat",ring_QLabel_setTextFormat);
	RING_API_REGISTER("qlabel_settextinteractionflags",ring_QLabel_setTextInteractionFlags);
	RING_API_REGISTER("qlabel_setwordwrap",ring_QLabel_setWordWrap);
	RING_API_REGISTER("qlabel_text",ring_QLabel_text);
	RING_API_REGISTER("qlabel_textformat",ring_QLabel_textFormat);
	RING_API_REGISTER("qlabel_textinteractionflags",ring_QLabel_textInteractionFlags);
	RING_API_REGISTER("qlabel_wordwrap",ring_QLabel_wordWrap);
	RING_API_REGISTER("qlabel_clear",ring_QLabel_clear);
	RING_API_REGISTER("qlabel_setmovie",ring_QLabel_setMovie);
	RING_API_REGISTER("qlabel_setnum",ring_QLabel_setNum);
	RING_API_REGISTER("qlabel_setpicture",ring_QLabel_setPicture);
	RING_API_REGISTER("qlabel_setpixmap",ring_QLabel_setPixmap);
	RING_API_REGISTER("qlabel_settext",ring_QLabel_setText);
	RING_API_REGISTER("qpushbutton_settext",ring_QPushButton_setText);
	RING_API_REGISTER("qpushbutton_setclickevent",ring_QPushButton_setClickEvent);
	RING_API_REGISTER("qpushbutton_seticon",ring_QPushButton_setIcon);
	RING_API_REGISTER("qpushbutton_seticonsize",ring_QPushButton_setIconSize);
	RING_API_REGISTER("qpushbutton_getclickevent",ring_QPushButton_getClickEvent);
	RING_API_REGISTER("qlineedit_gettextmargins",ring_QLineEdit_getTextMargins);
	RING_API_REGISTER("qlineedit_alignment",ring_QLineEdit_alignment);
	RING_API_REGISTER("qlineedit_backspace",ring_QLineEdit_backspace);
	RING_API_REGISTER("qlineedit_completer",ring_QLineEdit_completer);
	RING_API_REGISTER("qlineedit_createstandardcontextmenu",ring_QLineEdit_createStandardContextMenu);
	RING_API_REGISTER("qlineedit_cursorbackward",ring_QLineEdit_cursorBackward);
	RING_API_REGISTER("qlineedit_cursorforward",ring_QLineEdit_cursorForward);
	RING_API_REGISTER("qlineedit_cursormovestyle",ring_QLineEdit_cursorMoveStyle);
	RING_API_REGISTER("qlineedit_cursorposition",ring_QLineEdit_cursorPosition);
	RING_API_REGISTER("qlineedit_cursorpositionat",ring_QLineEdit_cursorPositionAt);
	RING_API_REGISTER("qlineedit_cursorwordbackward",ring_QLineEdit_cursorWordBackward);
	RING_API_REGISTER("qlineedit_cursorwordforward",ring_QLineEdit_cursorWordForward);
	RING_API_REGISTER("qlineedit_del",ring_QLineEdit_del);
	RING_API_REGISTER("qlineedit_deselect",ring_QLineEdit_deselect);
	RING_API_REGISTER("qlineedit_displaytext",ring_QLineEdit_displayText);
	RING_API_REGISTER("qlineedit_dragenabled",ring_QLineEdit_dragEnabled);
	RING_API_REGISTER("qlineedit_echomode",ring_QLineEdit_echoMode);
	RING_API_REGISTER("qlineedit_end",ring_QLineEdit_end);
	RING_API_REGISTER("qlineedit_hasacceptableinput",ring_QLineEdit_hasAcceptableInput);
	RING_API_REGISTER("qlineedit_hasframe",ring_QLineEdit_hasFrame);
	RING_API_REGISTER("qlineedit_hasselectedtext",ring_QLineEdit_hasSelectedText);
	RING_API_REGISTER("qlineedit_home",ring_QLineEdit_home);
	RING_API_REGISTER("qlineedit_inputmask",ring_QLineEdit_inputMask);
	RING_API_REGISTER("qlineedit_insert",ring_QLineEdit_insert);
	RING_API_REGISTER("qlineedit_ismodified",ring_QLineEdit_isModified);
	RING_API_REGISTER("qlineedit_isreadonly",ring_QLineEdit_isReadOnly);
	RING_API_REGISTER("qlineedit_isredoavailable",ring_QLineEdit_isRedoAvailable);
	RING_API_REGISTER("qlineedit_isundoavailable",ring_QLineEdit_isUndoAvailable);
	RING_API_REGISTER("qlineedit_maxlength",ring_QLineEdit_maxLength);
	RING_API_REGISTER("qlineedit_placeholdertext",ring_QLineEdit_placeholderText);
	RING_API_REGISTER("qlineedit_selectedtext",ring_QLineEdit_selectedText);
	RING_API_REGISTER("qlineedit_selectionstart",ring_QLineEdit_selectionStart);
	RING_API_REGISTER("qlineedit_setalignment",ring_QLineEdit_setAlignment);
	RING_API_REGISTER("qlineedit_setcompleter",ring_QLineEdit_setCompleter);
	RING_API_REGISTER("qlineedit_setcursormovestyle",ring_QLineEdit_setCursorMoveStyle);
	RING_API_REGISTER("qlineedit_setcursorposition",ring_QLineEdit_setCursorPosition);
	RING_API_REGISTER("qlineedit_setdragenabled",ring_QLineEdit_setDragEnabled);
	RING_API_REGISTER("qlineedit_setechomode",ring_QLineEdit_setEchoMode);
	RING_API_REGISTER("qlineedit_setframe",ring_QLineEdit_setFrame);
	RING_API_REGISTER("qlineedit_setinputmask",ring_QLineEdit_setInputMask);
	RING_API_REGISTER("qlineedit_setmaxlength",ring_QLineEdit_setMaxLength);
	RING_API_REGISTER("qlineedit_setmodified",ring_QLineEdit_setModified);
	RING_API_REGISTER("qlineedit_setplaceholdertext",ring_QLineEdit_setPlaceholderText);
	RING_API_REGISTER("qlineedit_setreadonly",ring_QLineEdit_setReadOnly);
	RING_API_REGISTER("qlineedit_setselection",ring_QLineEdit_setSelection);
	RING_API_REGISTER("qlineedit_settextmargins",ring_QLineEdit_setTextMargins);
	RING_API_REGISTER("qlineedit_setvalidator",ring_QLineEdit_setValidator);
	RING_API_REGISTER("qlineedit_text",ring_QLineEdit_text);
	RING_API_REGISTER("qlineedit_textmargins",ring_QLineEdit_textMargins);
	RING_API_REGISTER("qlineedit_validator",ring_QLineEdit_validator);
	RING_API_REGISTER("qlineedit_clear",ring_QLineEdit_clear);
	RING_API_REGISTER("qlineedit_copy",ring_QLineEdit_copy);
	RING_API_REGISTER("qlineedit_cut",ring_QLineEdit_cut);
	RING_API_REGISTER("qlineedit_paste",ring_QLineEdit_paste);
	RING_API_REGISTER("qlineedit_redo",ring_QLineEdit_redo);
	RING_API_REGISTER("qlineedit_selectall",ring_QLineEdit_selectAll);
	RING_API_REGISTER("qlineedit_settext",ring_QLineEdit_setText);
	RING_API_REGISTER("qlineedit_undo",ring_QLineEdit_undo);
	RING_API_REGISTER("qlineedit_settextchangedevent",ring_QLineEdit_setTextChangedEvent);
	RING_API_REGISTER("qlineedit_setcursorpositionchangedevent",ring_QLineEdit_setcursorPositionChangedEvent);
	RING_API_REGISTER("qlineedit_seteditingfinishedevent",ring_QLineEdit_seteditingFinishedEvent);
	RING_API_REGISTER("qlineedit_setreturnpressedevent",ring_QLineEdit_setreturnPressedEvent);
	RING_API_REGISTER("qlineedit_setselectionchangedevent",ring_QLineEdit_setselectionChangedEvent);
	RING_API_REGISTER("qlineedit_settexteditedevent",ring_QLineEdit_settextEditedEvent);
	RING_API_REGISTER("qlineedit_gettextchangedevent",ring_QLineEdit_getTextChangedEvent);
	RING_API_REGISTER("qlineedit_getcursorpositionchangedevent",ring_QLineEdit_getcursorPositionChangedEvent);
	RING_API_REGISTER("qlineedit_geteditingfinishedevent",ring_QLineEdit_geteditingFinishedEvent);
	RING_API_REGISTER("qlineedit_getreturnpressedevent",ring_QLineEdit_getreturnPressedEvent);
	RING_API_REGISTER("qlineedit_getselectionchangedevent",ring_QLineEdit_getselectionChangedEvent);
	RING_API_REGISTER("qlineedit_gettexteditedevent",ring_QLineEdit_gettextEditedEvent);
	RING_API_REGISTER("qvboxlayout_addwidget",ring_QVBoxLayout_addWidget);
	RING_API_REGISTER("qvboxlayout_addlayout",ring_QVBoxLayout_addLayout);
	RING_API_REGISTER("qhboxlayout_addwidget",ring_QHBoxLayout_addWidget);
	RING_API_REGISTER("qhboxlayout_addlayout",ring_QHBoxLayout_addLayout);
	RING_API_REGISTER("qtextedit_settabstopwidth",ring_QTextEdit_setTabStopWidth);
	RING_API_REGISTER("qtextedit_tabstopwidth",ring_QTextEdit_tabStopWidth);
	RING_API_REGISTER("qtextedit_settabstopdistance",ring_QTextEdit_setTabStopDistance);
	RING_API_REGISTER("qtextedit_tabstopdistance",ring_QTextEdit_tabStopDistance);
	RING_API_REGISTER("qtextedit_acceptrichtext",ring_QTextEdit_acceptRichText);
	RING_API_REGISTER("qtextedit_alignment",ring_QTextEdit_alignment);
	RING_API_REGISTER("qtextedit_anchorat",ring_QTextEdit_anchorAt);
	RING_API_REGISTER("qtextedit_canpaste",ring_QTextEdit_canPaste);
	RING_API_REGISTER("qtextedit_currentcharformat",ring_QTextEdit_currentCharFormat);
	RING_API_REGISTER("qtextedit_currentfont",ring_QTextEdit_currentFont);
	RING_API_REGISTER("qtextedit_cursorforposition",ring_QTextEdit_cursorForPosition);
	RING_API_REGISTER("qtextedit_cursorrect",ring_QTextEdit_cursorRect);
	RING_API_REGISTER("qtextedit_cursorwidth",ring_QTextEdit_cursorWidth);
	RING_API_REGISTER("qtextedit_document",ring_QTextEdit_document);
	RING_API_REGISTER("qtextedit_documenttitle",ring_QTextEdit_documentTitle);
	RING_API_REGISTER("qtextedit_ensurecursorvisible",ring_QTextEdit_ensureCursorVisible);
	RING_API_REGISTER("qtextedit_find",ring_QTextEdit_find);
	RING_API_REGISTER("qtextedit_fontfamily",ring_QTextEdit_fontFamily);
	RING_API_REGISTER("qtextedit_fontitalic",ring_QTextEdit_fontItalic);
	RING_API_REGISTER("qtextedit_fontpointsize",ring_QTextEdit_fontPointSize);
	RING_API_REGISTER("qtextedit_fontunderline",ring_QTextEdit_fontUnderline);
	RING_API_REGISTER("qtextedit_fontweight",ring_QTextEdit_fontWeight);
	RING_API_REGISTER("qtextedit_isreadonly",ring_QTextEdit_isReadOnly);
	RING_API_REGISTER("qtextedit_isundoredoenabled",ring_QTextEdit_isUndoRedoEnabled);
	RING_API_REGISTER("qtextedit_linewrapcolumnorwidth",ring_QTextEdit_lineWrapColumnOrWidth);
	RING_API_REGISTER("qtextedit_loadresource",ring_QTextEdit_loadResource);
	RING_API_REGISTER("qtextedit_mergecurrentcharformat",ring_QTextEdit_mergeCurrentCharFormat);
	RING_API_REGISTER("qtextedit_movecursor",ring_QTextEdit_moveCursor);
	RING_API_REGISTER("qtextedit_overwritemode",ring_QTextEdit_overwriteMode);
	RING_API_REGISTER("qtextedit_setacceptrichtext",ring_QTextEdit_setAcceptRichText);
	RING_API_REGISTER("qtextedit_setcurrentcharformat",ring_QTextEdit_setCurrentCharFormat);
	RING_API_REGISTER("qtextedit_setcursorwidth",ring_QTextEdit_setCursorWidth);
	RING_API_REGISTER("qtextedit_setdocument",ring_QTextEdit_setDocument);
	RING_API_REGISTER("qtextedit_setdocumenttitle",ring_QTextEdit_setDocumentTitle);
	RING_API_REGISTER("qtextedit_setlinewrapcolumnorwidth",ring_QTextEdit_setLineWrapColumnOrWidth);
	RING_API_REGISTER("qtextedit_setlinewrapmode",ring_QTextEdit_setLineWrapMode);
	RING_API_REGISTER("qtextedit_setoverwritemode",ring_QTextEdit_setOverwriteMode);
	RING_API_REGISTER("qtextedit_setreadonly",ring_QTextEdit_setReadOnly);
	RING_API_REGISTER("qtextedit_settabchangesfocus",ring_QTextEdit_setTabChangesFocus);
	RING_API_REGISTER("qtextedit_settextcursor",ring_QTextEdit_setTextCursor);
	RING_API_REGISTER("qtextedit_settextinteractionflags",ring_QTextEdit_setTextInteractionFlags);
	RING_API_REGISTER("qtextedit_setundoredoenabled",ring_QTextEdit_setUndoRedoEnabled);
	RING_API_REGISTER("qtextedit_setwordwrapmode",ring_QTextEdit_setWordWrapMode);
	RING_API_REGISTER("qtextedit_tabchangesfocus",ring_QTextEdit_tabChangesFocus);
	RING_API_REGISTER("qtextedit_textbackgroundcolor",ring_QTextEdit_textBackgroundColor);
	RING_API_REGISTER("qtextedit_textcolor",ring_QTextEdit_textColor);
	RING_API_REGISTER("qtextedit_textcursor",ring_QTextEdit_textCursor);
	RING_API_REGISTER("qtextedit_textinteractionflags",ring_QTextEdit_textInteractionFlags);
	RING_API_REGISTER("qtextedit_tohtml",ring_QTextEdit_toHtml);
	RING_API_REGISTER("qtextedit_toplaintext",ring_QTextEdit_toPlainText);
	RING_API_REGISTER("qtextedit_wordwrapmode",ring_QTextEdit_wordWrapMode);
	RING_API_REGISTER("qtextedit_append",ring_QTextEdit_append);
	RING_API_REGISTER("qtextedit_clear",ring_QTextEdit_clear);
	RING_API_REGISTER("qtextedit_copy",ring_QTextEdit_copy);
	RING_API_REGISTER("qtextedit_cut",ring_QTextEdit_cut);
	RING_API_REGISTER("qtextedit_inserthtml",ring_QTextEdit_insertHtml);
	RING_API_REGISTER("qtextedit_insertplaintext",ring_QTextEdit_insertPlainText);
	RING_API_REGISTER("qtextedit_paste",ring_QTextEdit_paste);
	RING_API_REGISTER("qtextedit_redo",ring_QTextEdit_redo);
	RING_API_REGISTER("qtextedit_scrolltoanchor",ring_QTextEdit_scrollToAnchor);
	RING_API_REGISTER("qtextedit_selectall",ring_QTextEdit_selectAll);
	RING_API_REGISTER("qtextedit_setalignment",ring_QTextEdit_setAlignment);
	RING_API_REGISTER("qtextedit_setcurrentfont",ring_QTextEdit_setCurrentFont);
	RING_API_REGISTER("qtextedit_setfontfamily",ring_QTextEdit_setFontFamily);
	RING_API_REGISTER("qtextedit_setfontitalic",ring_QTextEdit_setFontItalic);
	RING_API_REGISTER("qtextedit_setfontpointsize",ring_QTextEdit_setFontPointSize);
	RING_API_REGISTER("qtextedit_setfontunderline",ring_QTextEdit_setFontUnderline);
	RING_API_REGISTER("qtextedit_setfontweight",ring_QTextEdit_setFontWeight);
	RING_API_REGISTER("qtextedit_sethtml",ring_QTextEdit_setHtml);
	RING_API_REGISTER("qtextedit_setplaintext",ring_QTextEdit_setPlainText);
	RING_API_REGISTER("qtextedit_settext",ring_QTextEdit_setText);
	RING_API_REGISTER("qtextedit_settextbackgroundcolor",ring_QTextEdit_setTextBackgroundColor);
	RING_API_REGISTER("qtextedit_settextcolor",ring_QTextEdit_setTextColor);
	RING_API_REGISTER("qtextedit_undo",ring_QTextEdit_undo);
	RING_API_REGISTER("qtextedit_zoomin",ring_QTextEdit_zoomIn);
	RING_API_REGISTER("qtextedit_zoomout",ring_QTextEdit_zoomOut);
	RING_API_REGISTER("qtextedit_setcopyavailableevent",ring_QTextEdit_setcopyAvailableEvent);
	RING_API_REGISTER("qtextedit_setcurrentcharformatchangedevent",ring_QTextEdit_setcurrentCharFormatChangedEvent);
	RING_API_REGISTER("qtextedit_setcursorpositionchangedevent",ring_QTextEdit_setcursorPositionChangedEvent);
	RING_API_REGISTER("qtextedit_setredoavailableevent",ring_QTextEdit_setredoAvailableEvent);
	RING_API_REGISTER("qtextedit_setselectionchangedevent",ring_QTextEdit_setselectionChangedEvent);
	RING_API_REGISTER("qtextedit_settextchangedevent",ring_QTextEdit_settextChangedEvent);
	RING_API_REGISTER("qtextedit_setundoavailableevent",ring_QTextEdit_setundoAvailableEvent);
	RING_API_REGISTER("qtextedit_getcopyavailableevent",ring_QTextEdit_getcopyAvailableEvent);
	RING_API_REGISTER("qtextedit_getcurrentcharformatchangedevent",ring_QTextEdit_getcurrentCharFormatChangedEvent);
	RING_API_REGISTER("qtextedit_getcursorpositionchangedevent",ring_QTextEdit_getcursorPositionChangedEvent);
	RING_API_REGISTER("qtextedit_getredoavailableevent",ring_QTextEdit_getredoAvailableEvent);
	RING_API_REGISTER("qtextedit_getselectionchangedevent",ring_QTextEdit_getselectionChangedEvent);
	RING_API_REGISTER("qtextedit_gettextchangedevent",ring_QTextEdit_gettextChangedEvent);
	RING_API_REGISTER("qtextedit_getundoavailableevent",ring_QTextEdit_getundoAvailableEvent);
	RING_API_REGISTER("qtextedit_cyanline",ring_QTextEdit_cyanline);
	RING_API_REGISTER("qtextedit_setactivelinecolor",ring_QTextEdit_setactivelinecolor);
	RING_API_REGISTER("qlistwidget_additem",ring_QListWidget_addItem);
	RING_API_REGISTER("qlistwidget_count",ring_QListWidget_count);
	RING_API_REGISTER("qlistwidget_currentrow",ring_QListWidget_currentRow);
	RING_API_REGISTER("qlistwidget_edititem",ring_QListWidget_editItem);
	RING_API_REGISTER("qlistwidget_insertitem",ring_QListWidget_insertItem);
	RING_API_REGISTER("qlistwidget_issortingenabled",ring_QListWidget_isSortingEnabled);
	RING_API_REGISTER("qlistwidget_item",ring_QListWidget_item);
	RING_API_REGISTER("qlistwidget_itemat",ring_QListWidget_itemAt);
	RING_API_REGISTER("qlistwidget_itemwidget",ring_QListWidget_itemWidget);
	RING_API_REGISTER("qlistwidget_openpersistenteditor",ring_QListWidget_openPersistentEditor);
	RING_API_REGISTER("qlistwidget_removeitemwidget",ring_QListWidget_removeItemWidget);
	RING_API_REGISTER("qlistwidget_row",ring_QListWidget_row);
	RING_API_REGISTER("qlistwidget_setcurrentitem",ring_QListWidget_setCurrentItem);
	RING_API_REGISTER("qlistwidget_setcurrentrow",ring_QListWidget_setCurrentRow);
	RING_API_REGISTER("qlistwidget_setitemwidget",ring_QListWidget_setItemWidget);
	RING_API_REGISTER("qlistwidget_setsortingenabled",ring_QListWidget_setSortingEnabled);
	RING_API_REGISTER("qlistwidget_sortitems",ring_QListWidget_sortItems);
	RING_API_REGISTER("qlistwidget_takeitem",ring_QListWidget_takeItem);
	RING_API_REGISTER("qlistwidget_visualitemrect",ring_QListWidget_visualItemRect);
	RING_API_REGISTER("qlistwidget_clear",ring_QListWidget_clear);
	RING_API_REGISTER("qlistwidget_scrolltoitem",ring_QListWidget_scrollToItem);
	RING_API_REGISTER("qlistwidget_setcurrentitemchangedevent",ring_QListWidget_setcurrentItemChangedEvent);
	RING_API_REGISTER("qlistwidget_setcurrentrowchangedevent",ring_QListWidget_setcurrentRowChangedEvent);
	RING_API_REGISTER("qlistwidget_setcurrenttextchangedevent",ring_QListWidget_setcurrentTextChangedEvent);
	RING_API_REGISTER("qlistwidget_setitemactivatedevent",ring_QListWidget_setitemActivatedEvent);
	RING_API_REGISTER("qlistwidget_setitemchangedevent",ring_QListWidget_setitemChangedEvent);
	RING_API_REGISTER("qlistwidget_setitemclickedevent",ring_QListWidget_setitemClickedEvent);
	RING_API_REGISTER("qlistwidget_setitemdoubleclickedevent",ring_QListWidget_setitemDoubleClickedEvent);
	RING_API_REGISTER("qlistwidget_setitementeredevent",ring_QListWidget_setitemEnteredEvent);
	RING_API_REGISTER("qlistwidget_setitempressedevent",ring_QListWidget_setitemPressedEvent);
	RING_API_REGISTER("qlistwidget_setitemselectionchangedevent",ring_QListWidget_setitemSelectionChangedEvent);
	RING_API_REGISTER("qlistwidget_getcurrentitemchangedevent",ring_QListWidget_getcurrentItemChangedEvent);
	RING_API_REGISTER("qlistwidget_getcurrentrowchangedevent",ring_QListWidget_getcurrentRowChangedEvent);
	RING_API_REGISTER("qlistwidget_getcurrenttextchangedevent",ring_QListWidget_getcurrentTextChangedEvent);
	RING_API_REGISTER("qlistwidget_getitemactivatedevent",ring_QListWidget_getitemActivatedEvent);
	RING_API_REGISTER("qlistwidget_getitemchangedevent",ring_QListWidget_getitemChangedEvent);
	RING_API_REGISTER("qlistwidget_getitemclickedevent",ring_QListWidget_getitemClickedEvent);
	RING_API_REGISTER("qlistwidget_getitemdoubleclickedevent",ring_QListWidget_getitemDoubleClickedEvent);
	RING_API_REGISTER("qlistwidget_getitementeredevent",ring_QListWidget_getitemEnteredEvent);
	RING_API_REGISTER("qlistwidget_getitempressedevent",ring_QListWidget_getitemPressedEvent);
	RING_API_REGISTER("qlistwidget_getitemselectionchangedevent",ring_QListWidget_getitemSelectionChangedEvent);
	RING_API_REGISTER("qtreeview_allcolumnsshowfocus",ring_QTreeView_allColumnsShowFocus);
	RING_API_REGISTER("qtreeview_autoexpanddelay",ring_QTreeView_autoExpandDelay);
	RING_API_REGISTER("qtreeview_columnat",ring_QTreeView_columnAt);
	RING_API_REGISTER("qtreeview_columnviewportposition",ring_QTreeView_columnViewportPosition);
	RING_API_REGISTER("qtreeview_columnwidth",ring_QTreeView_columnWidth);
	RING_API_REGISTER("qtreeview_expandsondoubleclick",ring_QTreeView_expandsOnDoubleClick);
	RING_API_REGISTER("qtreeview_header",ring_QTreeView_header);
	RING_API_REGISTER("qtreeview_indentation",ring_QTreeView_indentation);
	RING_API_REGISTER("qtreeview_indexabove",ring_QTreeView_indexAbove);
	RING_API_REGISTER("qtreeview_indexbelow",ring_QTreeView_indexBelow);
	RING_API_REGISTER("qtreeview_isanimated",ring_QTreeView_isAnimated);
	RING_API_REGISTER("qtreeview_iscolumnhidden",ring_QTreeView_isColumnHidden);
	RING_API_REGISTER("qtreeview_isexpanded",ring_QTreeView_isExpanded);
	RING_API_REGISTER("qtreeview_isfirstcolumnspanned",ring_QTreeView_isFirstColumnSpanned);
	RING_API_REGISTER("qtreeview_isheaderhidden",ring_QTreeView_isHeaderHidden);
	RING_API_REGISTER("qtreeview_isrowhidden",ring_QTreeView_isRowHidden);
	RING_API_REGISTER("qtreeview_issortingenabled",ring_QTreeView_isSortingEnabled);
	RING_API_REGISTER("qtreeview_itemsexpandable",ring_QTreeView_itemsExpandable);
	RING_API_REGISTER("qtreeview_rootisdecorated",ring_QTreeView_rootIsDecorated);
	RING_API_REGISTER("qtreeview_setallcolumnsshowfocus",ring_QTreeView_setAllColumnsShowFocus);
	RING_API_REGISTER("qtreeview_setanimated",ring_QTreeView_setAnimated);
	RING_API_REGISTER("qtreeview_setautoexpanddelay",ring_QTreeView_setAutoExpandDelay);
	RING_API_REGISTER("qtreeview_setcolumnhidden",ring_QTreeView_setColumnHidden);
	RING_API_REGISTER("qtreeview_setcolumnwidth",ring_QTreeView_setColumnWidth);
	RING_API_REGISTER("qtreeview_setexpanded",ring_QTreeView_setExpanded);
	RING_API_REGISTER("qtreeview_setexpandsondoubleclick",ring_QTreeView_setExpandsOnDoubleClick);
	RING_API_REGISTER("qtreeview_setfirstcolumnspanned",ring_QTreeView_setFirstColumnSpanned);
	RING_API_REGISTER("qtreeview_setheader",ring_QTreeView_setHeader);
	RING_API_REGISTER("qtreeview_setheaderhidden",ring_QTreeView_setHeaderHidden);
	RING_API_REGISTER("qtreeview_setindentation",ring_QTreeView_setIndentation);
	RING_API_REGISTER("qtreeview_setitemsexpandable",ring_QTreeView_setItemsExpandable);
	RING_API_REGISTER("qtreeview_setrootisdecorated",ring_QTreeView_setRootIsDecorated);
	RING_API_REGISTER("qtreeview_setrowhidden",ring_QTreeView_setRowHidden);
	RING_API_REGISTER("qtreeview_setsortingenabled",ring_QTreeView_setSortingEnabled);
	RING_API_REGISTER("qtreeview_setuniformrowheights",ring_QTreeView_setUniformRowHeights);
	RING_API_REGISTER("qtreeview_setwordwrap",ring_QTreeView_setWordWrap);
	RING_API_REGISTER("qtreeview_sortbycolumn",ring_QTreeView_sortByColumn);
	RING_API_REGISTER("qtreeview_uniformrowheights",ring_QTreeView_uniformRowHeights);
	RING_API_REGISTER("qtreeview_wordwrap",ring_QTreeView_wordWrap);
	RING_API_REGISTER("qtreeview_datachanged",ring_QTreeView_dataChanged);
	RING_API_REGISTER("qtreeview_indexat",ring_QTreeView_indexAt);
	RING_API_REGISTER("qtreeview_keyboardsearch",ring_QTreeView_keyboardSearch);
	RING_API_REGISTER("qtreeview_reset",ring_QTreeView_reset);
	RING_API_REGISTER("qtreeview_scrollto",ring_QTreeView_scrollTo);
	RING_API_REGISTER("qtreeview_selectall",ring_QTreeView_selectAll);
	RING_API_REGISTER("qtreeview_setmodel",ring_QTreeView_setModel);
	RING_API_REGISTER("qtreeview_setrootindex",ring_QTreeView_setRootIndex);
	RING_API_REGISTER("qtreeview_setselectionmodel",ring_QTreeView_setSelectionModel);
	RING_API_REGISTER("qtreeview_visualrect",ring_QTreeView_visualRect);
	RING_API_REGISTER("qtreeview_collapse",ring_QTreeView_collapse);
	RING_API_REGISTER("qtreeview_collapseall",ring_QTreeView_collapseAll);
	RING_API_REGISTER("qtreeview_expand",ring_QTreeView_expand);
	RING_API_REGISTER("qtreeview_expandall",ring_QTreeView_expandAll);
	RING_API_REGISTER("qtreeview_expandtodepth",ring_QTreeView_expandToDepth);
	RING_API_REGISTER("qtreeview_hidecolumn",ring_QTreeView_hideColumn);
	RING_API_REGISTER("qtreeview_resizecolumntocontents",ring_QTreeView_resizeColumnToContents);
	RING_API_REGISTER("qtreeview_showcolumn",ring_QTreeView_showColumn);
	RING_API_REGISTER("qtreeview_setcollapsedevent",ring_QTreeView_setcollapsedEvent);
	RING_API_REGISTER("qtreeview_setexpandedevent",ring_QTreeView_setexpandedEvent);
	RING_API_REGISTER("qtreeview_setactivatedevent",ring_QTreeView_setactivatedEvent);
	RING_API_REGISTER("qtreeview_setclickedevent",ring_QTreeView_setclickedEvent);
	RING_API_REGISTER("qtreeview_setdoubleclickedevent",ring_QTreeView_setdoubleClickedEvent);
	RING_API_REGISTER("qtreeview_setenteredevent",ring_QTreeView_setenteredEvent);
	RING_API_REGISTER("qtreeview_setpressedevent",ring_QTreeView_setpressedEvent);
	RING_API_REGISTER("qtreeview_setviewportenteredevent",ring_QTreeView_setviewportEnteredEvent);
	RING_API_REGISTER("qtreeview_getcollapsedevent",ring_QTreeView_getcollapsedEvent);
	RING_API_REGISTER("qtreeview_getexpandedevent",ring_QTreeView_getexpandedEvent);
	RING_API_REGISTER("qtreeview_getactivatedevent",ring_QTreeView_getactivatedEvent);
	RING_API_REGISTER("qtreeview_getclickedevent",ring_QTreeView_getclickedEvent);
	RING_API_REGISTER("qtreeview_getdoubleclickedevent",ring_QTreeView_getdoubleClickedEvent);
	RING_API_REGISTER("qtreeview_getenteredevent",ring_QTreeView_getenteredEvent);
	RING_API_REGISTER("qtreeview_getpressedevent",ring_QTreeView_getpressedEvent);
	RING_API_REGISTER("qtreeview_getviewportenteredevent",ring_QTreeView_getviewportEnteredEvent);
	RING_API_REGISTER("qfilesystemmodel_fileicon",ring_QFileSystemModel_fileIcon);
	RING_API_REGISTER("qfilesystemmodel_fileinfo",ring_QFileSystemModel_fileInfo);
	RING_API_REGISTER("qfilesystemmodel_filename",ring_QFileSystemModel_fileName);
	RING_API_REGISTER("qfilesystemmodel_filepath",ring_QFileSystemModel_filePath);
	RING_API_REGISTER("qfilesystemmodel_filter",ring_QFileSystemModel_filter);
	RING_API_REGISTER("qfilesystemmodel_iconprovider",ring_QFileSystemModel_iconProvider);
	RING_API_REGISTER("qfilesystemmodel_index",ring_QFileSystemModel_index);
	RING_API_REGISTER("qfilesystemmodel_isdir",ring_QFileSystemModel_isDir);
	RING_API_REGISTER("qfilesystemmodel_isreadonly",ring_QFileSystemModel_isReadOnly);
	RING_API_REGISTER("qfilesystemmodel_lastmodified",ring_QFileSystemModel_lastModified);
	RING_API_REGISTER("qfilesystemmodel_mkdir",ring_QFileSystemModel_mkdir);
	RING_API_REGISTER("qfilesystemmodel_mycomputer",ring_QFileSystemModel_myComputer);
	RING_API_REGISTER("qfilesystemmodel_namefilterdisables",ring_QFileSystemModel_nameFilterDisables);
	RING_API_REGISTER("qfilesystemmodel_namefilters",ring_QFileSystemModel_nameFilters);
	RING_API_REGISTER("qfilesystemmodel_permissions",ring_QFileSystemModel_permissions);
	RING_API_REGISTER("qfilesystemmodel_remove",ring_QFileSystemModel_remove);
	RING_API_REGISTER("qfilesystemmodel_resolvesymlinks",ring_QFileSystemModel_resolveSymlinks);
	RING_API_REGISTER("qfilesystemmodel_rmdir",ring_QFileSystemModel_rmdir);
	RING_API_REGISTER("qfilesystemmodel_rootdirectory",ring_QFileSystemModel_rootDirectory);
	RING_API_REGISTER("qfilesystemmodel_rootpath",ring_QFileSystemModel_rootPath);
	RING_API_REGISTER("qfilesystemmodel_setfilter",ring_QFileSystemModel_setFilter);
	RING_API_REGISTER("qfilesystemmodel_seticonprovider",ring_QFileSystemModel_setIconProvider);
	RING_API_REGISTER("qfilesystemmodel_setnamefilterdisables",ring_QFileSystemModel_setNameFilterDisables);
	RING_API_REGISTER("qfilesystemmodel_setnamefilters",ring_QFileSystemModel_setNameFilters);
	RING_API_REGISTER("qfilesystemmodel_setreadonly",ring_QFileSystemModel_setReadOnly);
	RING_API_REGISTER("qfilesystemmodel_setresolvesymlinks",ring_QFileSystemModel_setResolveSymlinks);
	RING_API_REGISTER("qfilesystemmodel_setrootpath",ring_QFileSystemModel_setRootPath);
	RING_API_REGISTER("qfilesystemmodel_size",ring_QFileSystemModel_size);
	RING_API_REGISTER("qfilesystemmodel_type",ring_QFileSystemModel_type);
	RING_API_REGISTER("qfilesystemmodel_canfetchmore",ring_QFileSystemModel_canFetchMore);
	RING_API_REGISTER("qfilesystemmodel_columncount",ring_QFileSystemModel_columnCount);
	RING_API_REGISTER("qfilesystemmodel_data",ring_QFileSystemModel_data);
	RING_API_REGISTER("qfilesystemmodel_dropmimedata",ring_QFileSystemModel_dropMimeData);
	RING_API_REGISTER("qfilesystemmodel_fetchmore",ring_QFileSystemModel_fetchMore);
	RING_API_REGISTER("qfilesystemmodel_flags",ring_QFileSystemModel_flags);
	RING_API_REGISTER("qfilesystemmodel_haschildren",ring_QFileSystemModel_hasChildren);
	RING_API_REGISTER("qfilesystemmodel_headerdata",ring_QFileSystemModel_headerData);
	RING_API_REGISTER("qfilesystemmodel_mimedata",ring_QFileSystemModel_mimeData);
	RING_API_REGISTER("qfilesystemmodel_mimetypes",ring_QFileSystemModel_mimeTypes);
	RING_API_REGISTER("qfilesystemmodel_parent",ring_QFileSystemModel_parent);
	RING_API_REGISTER("qfilesystemmodel_rowcount",ring_QFileSystemModel_rowCount);
	RING_API_REGISTER("qfilesystemmodel_setdata",ring_QFileSystemModel_setData);
	RING_API_REGISTER("qfilesystemmodel_sort",ring_QFileSystemModel_sort);
	RING_API_REGISTER("qfilesystemmodel_supporteddropactions",ring_QFileSystemModel_supportedDropActions);
	RING_API_REGISTER("qtreewidget_isfirstitemcolumnspanned",ring_QTreeWidget_isFirstItemColumnSpanned);
	RING_API_REGISTER("qtreewidget_setfirstitemcolumnspanned",ring_QTreeWidget_setFirstItemColumnSpanned);
	RING_API_REGISTER("qtreewidget_addtoplevelitem",ring_QTreeWidget_addTopLevelItem);
	RING_API_REGISTER("qtreewidget_closepersistenteditor",ring_QTreeWidget_closePersistentEditor);
	RING_API_REGISTER("qtreewidget_columncount",ring_QTreeWidget_columnCount);
	RING_API_REGISTER("qtreewidget_currentcolumn",ring_QTreeWidget_currentColumn);
	RING_API_REGISTER("qtreewidget_currentitem",ring_QTreeWidget_currentItem);
	RING_API_REGISTER("qtreewidget_edititem",ring_QTreeWidget_editItem);
	RING_API_REGISTER("qtreewidget_headeritem",ring_QTreeWidget_headerItem);
	RING_API_REGISTER("qtreewidget_indexoftoplevelitem",ring_QTreeWidget_indexOfTopLevelItem);
	RING_API_REGISTER("qtreewidget_inserttoplevelitem",ring_QTreeWidget_insertTopLevelItem);
	RING_API_REGISTER("qtreewidget_invisiblerootitem",ring_QTreeWidget_invisibleRootItem);
	RING_API_REGISTER("qtreewidget_itemabove",ring_QTreeWidget_itemAbove);
	RING_API_REGISTER("qtreewidget_itemat",ring_QTreeWidget_itemAt);
	RING_API_REGISTER("qtreewidget_itembelow",ring_QTreeWidget_itemBelow);
	RING_API_REGISTER("qtreewidget_itemwidget",ring_QTreeWidget_itemWidget);
	RING_API_REGISTER("qtreewidget_openpersistenteditor",ring_QTreeWidget_openPersistentEditor);
	RING_API_REGISTER("qtreewidget_removeitemwidget",ring_QTreeWidget_removeItemWidget);
	RING_API_REGISTER("qtreewidget_setcolumncount",ring_QTreeWidget_setColumnCount);
	RING_API_REGISTER("qtreewidget_setcurrentitem",ring_QTreeWidget_setCurrentItem);
	RING_API_REGISTER("qtreewidget_setheaderitem",ring_QTreeWidget_setHeaderItem);
	RING_API_REGISTER("qtreewidget_setheaderlabel",ring_QTreeWidget_setHeaderLabel);
	RING_API_REGISTER("qtreewidget_setheaderlabels",ring_QTreeWidget_setHeaderLabels);
	RING_API_REGISTER("qtreewidget_setitemwidget",ring_QTreeWidget_setItemWidget);
	RING_API_REGISTER("qtreewidget_sortcolumn",ring_QTreeWidget_sortColumn);
	RING_API_REGISTER("qtreewidget_sortitems",ring_QTreeWidget_sortItems);
	RING_API_REGISTER("qtreewidget_taketoplevelitem",ring_QTreeWidget_takeTopLevelItem);
	RING_API_REGISTER("qtreewidget_toplevelitem",ring_QTreeWidget_topLevelItem);
	RING_API_REGISTER("qtreewidget_toplevelitemcount",ring_QTreeWidget_topLevelItemCount);
	RING_API_REGISTER("qtreewidget_visualitemrect",ring_QTreeWidget_visualItemRect);
	RING_API_REGISTER("qtreewidget_setselectionmodel",ring_QTreeWidget_setSelectionModel);
	RING_API_REGISTER("qtreewidget_clear",ring_QTreeWidget_clear);
	RING_API_REGISTER("qtreewidget_collapseitem",ring_QTreeWidget_collapseItem);
	RING_API_REGISTER("qtreewidget_expanditem",ring_QTreeWidget_expandItem);
	RING_API_REGISTER("qtreewidget_scrolltoitem",ring_QTreeWidget_scrollToItem);
	RING_API_REGISTER("qtreewidget_setcollapsedevent",ring_QTreeWidget_setcollapsedEvent);
	RING_API_REGISTER("qtreewidget_setexpandedevent",ring_QTreeWidget_setexpandedEvent);
	RING_API_REGISTER("qtreewidget_setactivatedevent",ring_QTreeWidget_setactivatedEvent);
	RING_API_REGISTER("qtreewidget_setclickedevent",ring_QTreeWidget_setclickedEvent);
	RING_API_REGISTER("qtreewidget_setdoubleclickedevent",ring_QTreeWidget_setdoubleClickedEvent);
	RING_API_REGISTER("qtreewidget_setenteredevent",ring_QTreeWidget_setenteredEvent);
	RING_API_REGISTER("qtreewidget_setpressedevent",ring_QTreeWidget_setpressedEvent);
	RING_API_REGISTER("qtreewidget_setviewportenteredevent",ring_QTreeWidget_setviewportEnteredEvent);
	RING_API_REGISTER("qtreewidget_setcurrentitemchangedevent",ring_QTreeWidget_setcurrentItemChangedEvent);
	RING_API_REGISTER("qtreewidget_setitemactivatedevent",ring_QTreeWidget_setitemActivatedEvent);
	RING_API_REGISTER("qtreewidget_setitemchangedevent",ring_QTreeWidget_setitemChangedEvent);
	RING_API_REGISTER("qtreewidget_setitemclickedevent",ring_QTreeWidget_setitemClickedEvent);
	RING_API_REGISTER("qtreewidget_setitemcollapsedevent",ring_QTreeWidget_setitemCollapsedEvent);
	RING_API_REGISTER("qtreewidget_setitemdoubleclickedevent",ring_QTreeWidget_setitemDoubleClickedEvent);
	RING_API_REGISTER("qtreewidget_setitementeredevent",ring_QTreeWidget_setitemEnteredEvent);
	RING_API_REGISTER("qtreewidget_setitemexpandedevent",ring_QTreeWidget_setitemExpandedEvent);
	RING_API_REGISTER("qtreewidget_setitempressedevent",ring_QTreeWidget_setitemPressedEvent);
	RING_API_REGISTER("qtreewidget_setitemselectionchangedevent",ring_QTreeWidget_setitemSelectionChangedEvent);
	RING_API_REGISTER("qtreewidget_getcollapsedevent",ring_QTreeWidget_getcollapsedEvent);
	RING_API_REGISTER("qtreewidget_getexpandedevent",ring_QTreeWidget_getexpandedEvent);
	RING_API_REGISTER("qtreewidget_getactivatedevent",ring_QTreeWidget_getactivatedEvent);
	RING_API_REGISTER("qtreewidget_getclickedevent",ring_QTreeWidget_getclickedEvent);
	RING_API_REGISTER("qtreewidget_getdoubleclickedevent",ring_QTreeWidget_getdoubleClickedEvent);
	RING_API_REGISTER("qtreewidget_getenteredevent",ring_QTreeWidget_getenteredEvent);
	RING_API_REGISTER("qtreewidget_getpressedevent",ring_QTreeWidget_getpressedEvent);
	RING_API_REGISTER("qtreewidget_getviewportenteredevent",ring_QTreeWidget_getviewportEnteredEvent);
	RING_API_REGISTER("qtreewidget_getcurrentitemchangedevent",ring_QTreeWidget_getcurrentItemChangedEvent);
	RING_API_REGISTER("qtreewidget_getitemactivatedevent",ring_QTreeWidget_getitemActivatedEvent);
	RING_API_REGISTER("qtreewidget_getitemchangedevent",ring_QTreeWidget_getitemChangedEvent);
	RING_API_REGISTER("qtreewidget_getitemclickedevent",ring_QTreeWidget_getitemClickedEvent);
	RING_API_REGISTER("qtreewidget_getitemcollapsedevent",ring_QTreeWidget_getitemCollapsedEvent);
	RING_API_REGISTER("qtreewidget_getitemdoubleclickedevent",ring_QTreeWidget_getitemDoubleClickedEvent);
	RING_API_REGISTER("qtreewidget_getitementeredevent",ring_QTreeWidget_getitemEnteredEvent);
	RING_API_REGISTER("qtreewidget_getitemexpandedevent",ring_QTreeWidget_getitemExpandedEvent);
	RING_API_REGISTER("qtreewidget_getitempressedevent",ring_QTreeWidget_getitemPressedEvent);
	RING_API_REGISTER("qtreewidget_getitemselectionchangedevent",ring_QTreeWidget_getitemSelectionChangedEvent);
	RING_API_REGISTER("qtreewidgetitem_addchild",ring_QTreeWidgetItem_addChild);
	RING_API_REGISTER("qtreewidgetitem_background",ring_QTreeWidgetItem_background);
	RING_API_REGISTER("qtreewidgetitem_checkstate",ring_QTreeWidgetItem_checkState);
	RING_API_REGISTER("qtreewidgetitem_child",ring_QTreeWidgetItem_child);
	RING_API_REGISTER("qtreewidgetitem_childcount",ring_QTreeWidgetItem_childCount);
	RING_API_REGISTER("qtreewidgetitem_childindicatorpolicy",ring_QTreeWidgetItem_childIndicatorPolicy);
	RING_API_REGISTER("qtreewidgetitem_clone",ring_QTreeWidgetItem_clone);
	RING_API_REGISTER("qtreewidgetitem_columncount",ring_QTreeWidgetItem_columnCount);
	RING_API_REGISTER("qtreewidgetitem_data",ring_QTreeWidgetItem_data);
	RING_API_REGISTER("qtreewidgetitem_flags",ring_QTreeWidgetItem_flags);
	RING_API_REGISTER("qtreewidgetitem_font",ring_QTreeWidgetItem_font);
	RING_API_REGISTER("qtreewidgetitem_foreground",ring_QTreeWidgetItem_foreground);
	RING_API_REGISTER("qtreewidgetitem_icon",ring_QTreeWidgetItem_icon);
	RING_API_REGISTER("qtreewidgetitem_indexofchild",ring_QTreeWidgetItem_indexOfChild);
	RING_API_REGISTER("qtreewidgetitem_insertchild",ring_QTreeWidgetItem_insertChild);
	RING_API_REGISTER("qtreewidgetitem_isdisabled",ring_QTreeWidgetItem_isDisabled);
	RING_API_REGISTER("qtreewidgetitem_isexpanded",ring_QTreeWidgetItem_isExpanded);
	RING_API_REGISTER("qtreewidgetitem_isfirstcolumnspanned",ring_QTreeWidgetItem_isFirstColumnSpanned);
	RING_API_REGISTER("qtreewidgetitem_ishidden",ring_QTreeWidgetItem_isHidden);
	RING_API_REGISTER("qtreewidgetitem_isselected",ring_QTreeWidgetItem_isSelected);
	RING_API_REGISTER("qtreewidgetitem_parent",ring_QTreeWidgetItem_parent);
	RING_API_REGISTER("qtreewidgetitem_read",ring_QTreeWidgetItem_read);
	RING_API_REGISTER("qtreewidgetitem_removechild",ring_QTreeWidgetItem_removeChild);
	RING_API_REGISTER("qtreewidgetitem_setbackground",ring_QTreeWidgetItem_setBackground);
	RING_API_REGISTER("qtreewidgetitem_setcheckstate",ring_QTreeWidgetItem_setCheckState);
	RING_API_REGISTER("qtreewidgetitem_setchildindicatorpolicy",ring_QTreeWidgetItem_setChildIndicatorPolicy);
	RING_API_REGISTER("qtreewidgetitem_setdata",ring_QTreeWidgetItem_setData);
	RING_API_REGISTER("qtreewidgetitem_setdisabled",ring_QTreeWidgetItem_setDisabled);
	RING_API_REGISTER("qtreewidgetitem_setexpanded",ring_QTreeWidgetItem_setExpanded);
	RING_API_REGISTER("qtreewidgetitem_setfirstcolumnspanned",ring_QTreeWidgetItem_setFirstColumnSpanned);
	RING_API_REGISTER("qtreewidgetitem_setflags",ring_QTreeWidgetItem_setFlags);
	RING_API_REGISTER("qtreewidgetitem_setfont",ring_QTreeWidgetItem_setFont);
	RING_API_REGISTER("qtreewidgetitem_setforeground",ring_QTreeWidgetItem_setForeground);
	RING_API_REGISTER("qtreewidgetitem_sethidden",ring_QTreeWidgetItem_setHidden);
	RING_API_REGISTER("qtreewidgetitem_seticon",ring_QTreeWidgetItem_setIcon);
	RING_API_REGISTER("qtreewidgetitem_setselected",ring_QTreeWidgetItem_setSelected);
	RING_API_REGISTER("qtreewidgetitem_setsizehint",ring_QTreeWidgetItem_setSizeHint);
	RING_API_REGISTER("qtreewidgetitem_setstatustip",ring_QTreeWidgetItem_setStatusTip);
	RING_API_REGISTER("qtreewidgetitem_settext",ring_QTreeWidgetItem_setText);
	RING_API_REGISTER("qtreewidgetitem_settextalignment",ring_QTreeWidgetItem_setTextAlignment);
	RING_API_REGISTER("qtreewidgetitem_settooltip",ring_QTreeWidgetItem_setToolTip);
	RING_API_REGISTER("qtreewidgetitem_setwhatsthis",ring_QTreeWidgetItem_setWhatsThis);
	RING_API_REGISTER("qtreewidgetitem_sizehint",ring_QTreeWidgetItem_sizeHint);
	RING_API_REGISTER("qtreewidgetitem_sortchildren",ring_QTreeWidgetItem_sortChildren);
	RING_API_REGISTER("qtreewidgetitem_statustip",ring_QTreeWidgetItem_statusTip);
	RING_API_REGISTER("qtreewidgetitem_takechild",ring_QTreeWidgetItem_takeChild);
	RING_API_REGISTER("qtreewidgetitem_text",ring_QTreeWidgetItem_text);
	RING_API_REGISTER("qtreewidgetitem_textalignment",ring_QTreeWidgetItem_textAlignment);
	RING_API_REGISTER("qtreewidgetitem_tooltip",ring_QTreeWidgetItem_toolTip);
	RING_API_REGISTER("qtreewidgetitem_treewidget",ring_QTreeWidgetItem_treeWidget);
	RING_API_REGISTER("qtreewidgetitem_type",ring_QTreeWidgetItem_type);
	RING_API_REGISTER("qtreewidgetitem_whatsthis",ring_QTreeWidgetItem_whatsThis);
	RING_API_REGISTER("qtreewidgetitem_write",ring_QTreeWidgetItem_write);
	RING_API_REGISTER("qcombobox_additem",ring_QComboBox_addItem);
	RING_API_REGISTER("qcombobox_additems",ring_QComboBox_addItems);
	RING_API_REGISTER("qcombobox_completer",ring_QComboBox_completer);
	RING_API_REGISTER("qcombobox_count",ring_QComboBox_count);
	RING_API_REGISTER("qcombobox_currentindex",ring_QComboBox_currentIndex);
	RING_API_REGISTER("qcombobox_currenttext",ring_QComboBox_currentText);
	RING_API_REGISTER("qcombobox_duplicatesenabled",ring_QComboBox_duplicatesEnabled);
	RING_API_REGISTER("qcombobox_finddata",ring_QComboBox_findData);
	RING_API_REGISTER("qcombobox_findtext",ring_QComboBox_findText);
	RING_API_REGISTER("qcombobox_hasframe",ring_QComboBox_hasFrame);
	RING_API_REGISTER("qcombobox_hidepopup",ring_QComboBox_hidePopup);
	RING_API_REGISTER("qcombobox_iconsize",ring_QComboBox_iconSize);
	RING_API_REGISTER("qcombobox_insertitem",ring_QComboBox_insertItem);
	RING_API_REGISTER("qcombobox_insertseparator",ring_QComboBox_insertSeparator);
	RING_API_REGISTER("qcombobox_iseditable",ring_QComboBox_isEditable);
	RING_API_REGISTER("qcombobox_itemdata",ring_QComboBox_itemData);
	RING_API_REGISTER("qcombobox_itemdelegate",ring_QComboBox_itemDelegate);
	RING_API_REGISTER("qcombobox_itemicon",ring_QComboBox_itemIcon);
	RING_API_REGISTER("qcombobox_itemtext",ring_QComboBox_itemText);
	RING_API_REGISTER("qcombobox_lineedit",ring_QComboBox_lineEdit);
	RING_API_REGISTER("qcombobox_maxcount",ring_QComboBox_maxCount);
	RING_API_REGISTER("qcombobox_maxvisibleitems",ring_QComboBox_maxVisibleItems);
	RING_API_REGISTER("qcombobox_minimumcontentslength",ring_QComboBox_minimumContentsLength);
	RING_API_REGISTER("qcombobox_model",ring_QComboBox_model);
	RING_API_REGISTER("qcombobox_modelcolumn",ring_QComboBox_modelColumn);
	RING_API_REGISTER("qcombobox_removeitem",ring_QComboBox_removeItem);
	RING_API_REGISTER("qcombobox_rootmodelindex",ring_QComboBox_rootModelIndex);
	RING_API_REGISTER("qcombobox_setcompleter",ring_QComboBox_setCompleter);
	RING_API_REGISTER("qcombobox_setduplicatesenabled",ring_QComboBox_setDuplicatesEnabled);
	RING_API_REGISTER("qcombobox_seteditable",ring_QComboBox_setEditable);
	RING_API_REGISTER("qcombobox_setframe",ring_QComboBox_setFrame);
	RING_API_REGISTER("qcombobox_seticonsize",ring_QComboBox_setIconSize);
	RING_API_REGISTER("qcombobox_setitemdata",ring_QComboBox_setItemData);
	RING_API_REGISTER("qcombobox_setitemdelegate",ring_QComboBox_setItemDelegate);
	RING_API_REGISTER("qcombobox_setitemicon",ring_QComboBox_setItemIcon);
	RING_API_REGISTER("qcombobox_setitemtext",ring_QComboBox_setItemText);
	RING_API_REGISTER("qcombobox_setlineedit",ring_QComboBox_setLineEdit);
	RING_API_REGISTER("qcombobox_setmaxcount",ring_QComboBox_setMaxCount);
	RING_API_REGISTER("qcombobox_setmaxvisibleitems",ring_QComboBox_setMaxVisibleItems);
	RING_API_REGISTER("qcombobox_setminimumcontentslength",ring_QComboBox_setMinimumContentsLength);
	RING_API_REGISTER("qcombobox_setmodel",ring_QComboBox_setModel);
	RING_API_REGISTER("qcombobox_setmodelcolumn",ring_QComboBox_setModelColumn);
	RING_API_REGISTER("qcombobox_setrootmodelindex",ring_QComboBox_setRootModelIndex);
	RING_API_REGISTER("qcombobox_setvalidator",ring_QComboBox_setValidator);
	RING_API_REGISTER("qcombobox_setview",ring_QComboBox_setView);
	RING_API_REGISTER("qcombobox_showpopup",ring_QComboBox_showPopup);
	RING_API_REGISTER("qcombobox_validator",ring_QComboBox_validator);
	RING_API_REGISTER("qcombobox_view",ring_QComboBox_view);
	RING_API_REGISTER("qcombobox_clear",ring_QComboBox_clear);
	RING_API_REGISTER("qcombobox_clearedittext",ring_QComboBox_clearEditText);
	RING_API_REGISTER("qcombobox_setcurrentindex",ring_QComboBox_setCurrentIndex);
	RING_API_REGISTER("qcombobox_setcurrenttext",ring_QComboBox_setCurrentText);
	RING_API_REGISTER("qcombobox_setedittext",ring_QComboBox_setEditText);
	RING_API_REGISTER("qcombobox_setactivatedevent",ring_QComboBox_setactivatedEvent);
	RING_API_REGISTER("qcombobox_setcurrentindexchangedevent",ring_QComboBox_setcurrentIndexChangedEvent);
	RING_API_REGISTER("qcombobox_setedittextchangedevent",ring_QComboBox_seteditTextChangedEvent);
	RING_API_REGISTER("qcombobox_sethighlightedevent",ring_QComboBox_sethighlightedEvent);
	RING_API_REGISTER("qcombobox_getactivatedevent",ring_QComboBox_getactivatedEvent);
	RING_API_REGISTER("qcombobox_getcurrentindexchangedevent",ring_QComboBox_getcurrentIndexChangedEvent);
	RING_API_REGISTER("qcombobox_getedittextchangedevent",ring_QComboBox_geteditTextChangedEvent);
	RING_API_REGISTER("qcombobox_gethighlightedevent",ring_QComboBox_gethighlightedEvent);
	RING_API_REGISTER("qmenubar_actionat",ring_QMenuBar_actionAt);
	RING_API_REGISTER("qmenubar_actiongeometry",ring_QMenuBar_actionGeometry);
	RING_API_REGISTER("qmenubar_activeaction",ring_QMenuBar_activeAction);
	RING_API_REGISTER("qmenubar_addaction",ring_QMenuBar_addAction);
	RING_API_REGISTER("qmenubar_addmenu",ring_QMenuBar_addMenu);
	RING_API_REGISTER("qmenubar_addseparator",ring_QMenuBar_addSeparator);
	RING_API_REGISTER("qmenubar_clear",ring_QMenuBar_clear);
	RING_API_REGISTER("qmenubar_cornerwidget",ring_QMenuBar_cornerWidget);
	RING_API_REGISTER("qmenubar_insertmenu",ring_QMenuBar_insertMenu);
	RING_API_REGISTER("qmenubar_insertseparator",ring_QMenuBar_insertSeparator);
	RING_API_REGISTER("qmenubar_isdefaultup",ring_QMenuBar_isDefaultUp);
	RING_API_REGISTER("qmenubar_isnativemenubar",ring_QMenuBar_isNativeMenuBar);
	RING_API_REGISTER("qmenubar_setactiveaction",ring_QMenuBar_setActiveAction);
	RING_API_REGISTER("qmenubar_setcornerwidget",ring_QMenuBar_setCornerWidget);
	RING_API_REGISTER("qmenubar_setdefaultup",ring_QMenuBar_setDefaultUp);
	RING_API_REGISTER("qmenubar_setnativemenubar",ring_QMenuBar_setNativeMenuBar);
	RING_API_REGISTER("qmenu_actionat",ring_QMenu_actionAt);
	RING_API_REGISTER("qmenu_actiongeometry",ring_QMenu_actionGeometry);
	RING_API_REGISTER("qmenu_activeaction",ring_QMenu_activeAction);
	RING_API_REGISTER("qmenu_addaction",ring_QMenu_addAction);
	RING_API_REGISTER("qmenu_addmenu",ring_QMenu_addMenu);
	RING_API_REGISTER("qmenu_addseparator",ring_QMenu_addSeparator);
	RING_API_REGISTER("qmenu_clear",ring_QMenu_clear);
	RING_API_REGISTER("qmenu_defaultaction",ring_QMenu_defaultAction);
	RING_API_REGISTER("qmenu_exec",ring_QMenu_exec);
	RING_API_REGISTER("qmenu_exec_2",ring_QMenu_exec_2);
	RING_API_REGISTER("qmenu_exec_3",ring_QMenu_exec_3);
	RING_API_REGISTER("qmenu_hidetearoffmenu",ring_QMenu_hideTearOffMenu);
	RING_API_REGISTER("qmenu_icon",ring_QMenu_icon);
	RING_API_REGISTER("qmenu_insertmenu",ring_QMenu_insertMenu);
	RING_API_REGISTER("qmenu_insertseparator",ring_QMenu_insertSeparator);
	RING_API_REGISTER("qmenu_isempty",ring_QMenu_isEmpty);
	RING_API_REGISTER("qmenu_istearoffenabled",ring_QMenu_isTearOffEnabled);
	RING_API_REGISTER("qmenu_istearoffmenuvisible",ring_QMenu_isTearOffMenuVisible);
	RING_API_REGISTER("qmenu_menuaction",ring_QMenu_menuAction);
	RING_API_REGISTER("qmenu_popup",ring_QMenu_popup);
	RING_API_REGISTER("qmenu_separatorscollapsible",ring_QMenu_separatorsCollapsible);
	RING_API_REGISTER("qmenu_setactiveaction",ring_QMenu_setActiveAction);
	RING_API_REGISTER("qmenu_setdefaultaction",ring_QMenu_setDefaultAction);
	RING_API_REGISTER("qmenu_seticon",ring_QMenu_setIcon);
	RING_API_REGISTER("qmenu_setseparatorscollapsible",ring_QMenu_setSeparatorsCollapsible);
	RING_API_REGISTER("qmenu_settearoffenabled",ring_QMenu_setTearOffEnabled);
	RING_API_REGISTER("qmenu_settitle",ring_QMenu_setTitle);
	RING_API_REGISTER("qmenu_title",ring_QMenu_title);
	RING_API_REGISTER("qtoolbar_actionat",ring_QToolBar_actionAt);
	RING_API_REGISTER("qtoolbar_addaction",ring_QToolBar_addAction);
	RING_API_REGISTER("qtoolbar_addseparator",ring_QToolBar_addSeparator);
	RING_API_REGISTER("qtoolbar_addwidget",ring_QToolBar_addWidget);
	RING_API_REGISTER("qtoolbar_allowedareas",ring_QToolBar_allowedAreas);
	RING_API_REGISTER("qtoolbar_clear",ring_QToolBar_clear);
	RING_API_REGISTER("qtoolbar_iconsize",ring_QToolBar_iconSize);
	RING_API_REGISTER("qtoolbar_insertseparator",ring_QToolBar_insertSeparator);
	RING_API_REGISTER("qtoolbar_insertwidget",ring_QToolBar_insertWidget);
	RING_API_REGISTER("qtoolbar_isareaallowed",ring_QToolBar_isAreaAllowed);
	RING_API_REGISTER("qtoolbar_isfloatable",ring_QToolBar_isFloatable);
	RING_API_REGISTER("qtoolbar_isfloating",ring_QToolBar_isFloating);
	RING_API_REGISTER("qtoolbar_ismovable",ring_QToolBar_isMovable);
	RING_API_REGISTER("qtoolbar_orientation",ring_QToolBar_orientation);
	RING_API_REGISTER("qtoolbar_setallowedareas",ring_QToolBar_setAllowedAreas);
	RING_API_REGISTER("qtoolbar_setfloatable",ring_QToolBar_setFloatable);
	RING_API_REGISTER("qtoolbar_setmovable",ring_QToolBar_setMovable);
	RING_API_REGISTER("qtoolbar_setorientation",ring_QToolBar_setOrientation);
	RING_API_REGISTER("qtoolbar_toggleviewaction",ring_QToolBar_toggleViewAction);
	RING_API_REGISTER("qtoolbar_toolbuttonstyle",ring_QToolBar_toolButtonStyle);
	RING_API_REGISTER("qtoolbar_widgetforaction",ring_QToolBar_widgetForAction);
	RING_API_REGISTER("qtoolbar_seticonsize",ring_QToolBar_setIconSize);
	RING_API_REGISTER("qtoolbar_settoolbuttonstyle",ring_QToolBar_setToolButtonStyle);
	RING_API_REGISTER("qmainwindow_adddockwidget",ring_QMainWindow_addDockWidget);
	RING_API_REGISTER("qmainwindow_addtoolbar",ring_QMainWindow_addToolBar);
	RING_API_REGISTER("qmainwindow_addtoolbar_2",ring_QMainWindow_addToolBar_2);
	RING_API_REGISTER("qmainwindow_addtoolbarbreak",ring_QMainWindow_addToolBarBreak);
	RING_API_REGISTER("qmainwindow_centralwidget",ring_QMainWindow_centralWidget);
	RING_API_REGISTER("qmainwindow_corner",ring_QMainWindow_corner);
	RING_API_REGISTER("qmainwindow_createpopupmenu",ring_QMainWindow_createPopupMenu);
	RING_API_REGISTER("qmainwindow_dockoptions",ring_QMainWindow_dockOptions);
	RING_API_REGISTER("qmainwindow_dockwidgetarea",ring_QMainWindow_dockWidgetArea);
	RING_API_REGISTER("qmainwindow_documentmode",ring_QMainWindow_documentMode);
	RING_API_REGISTER("qmainwindow_iconsize",ring_QMainWindow_iconSize);
	RING_API_REGISTER("qmainwindow_inserttoolbar",ring_QMainWindow_insertToolBar);
	RING_API_REGISTER("qmainwindow_inserttoolbarbreak",ring_QMainWindow_insertToolBarBreak);
	RING_API_REGISTER("qmainwindow_isanimated",ring_QMainWindow_isAnimated);
	RING_API_REGISTER("qmainwindow_isdocknestingenabled",ring_QMainWindow_isDockNestingEnabled);
	RING_API_REGISTER("qmainwindow_menubar",ring_QMainWindow_menuBar);
	RING_API_REGISTER("qmainwindow_menuwidget",ring_QMainWindow_menuWidget);
	RING_API_REGISTER("qmainwindow_removedockwidget",ring_QMainWindow_removeDockWidget);
	RING_API_REGISTER("qmainwindow_removetoolbar",ring_QMainWindow_removeToolBar);
	RING_API_REGISTER("qmainwindow_removetoolbarbreak",ring_QMainWindow_removeToolBarBreak);
	RING_API_REGISTER("qmainwindow_restoredockwidget",ring_QMainWindow_restoreDockWidget);
	RING_API_REGISTER("qmainwindow_restorestate",ring_QMainWindow_restoreState);
	RING_API_REGISTER("qmainwindow_savestate",ring_QMainWindow_saveState);
	RING_API_REGISTER("qmainwindow_setcentralwidget",ring_QMainWindow_setCentralWidget);
	RING_API_REGISTER("qmainwindow_setcorner",ring_QMainWindow_setCorner);
	RING_API_REGISTER("qmainwindow_setdockoptions",ring_QMainWindow_setDockOptions);
	RING_API_REGISTER("qmainwindow_setdocumentmode",ring_QMainWindow_setDocumentMode);
	RING_API_REGISTER("qmainwindow_seticonsize",ring_QMainWindow_setIconSize);
	RING_API_REGISTER("qmainwindow_setmenubar",ring_QMainWindow_setMenuBar);
	RING_API_REGISTER("qmainwindow_setmenuwidget",ring_QMainWindow_setMenuWidget);
	RING_API_REGISTER("qmainwindow_setstatusbar",ring_QMainWindow_setStatusBar);
	RING_API_REGISTER("qmainwindow_settabposition",ring_QMainWindow_setTabPosition);
	RING_API_REGISTER("qmainwindow_settabshape",ring_QMainWindow_setTabShape);
	RING_API_REGISTER("qmainwindow_settoolbuttonstyle",ring_QMainWindow_setToolButtonStyle);
	RING_API_REGISTER("qmainwindow_setunifiedtitleandtoolbaronmac",ring_QMainWindow_setUnifiedTitleAndToolBarOnMac);
	RING_API_REGISTER("qmainwindow_splitdockwidget",ring_QMainWindow_splitDockWidget);
	RING_API_REGISTER("qmainwindow_statusbar",ring_QMainWindow_statusBar);
	RING_API_REGISTER("qmainwindow_tabposition",ring_QMainWindow_tabPosition);
	RING_API_REGISTER("qmainwindow_tabshape",ring_QMainWindow_tabShape);
	RING_API_REGISTER("qmainwindow_tabifydockwidget",ring_QMainWindow_tabifyDockWidget);
	RING_API_REGISTER("qmainwindow_toolbararea",ring_QMainWindow_toolBarArea);
	RING_API_REGISTER("qmainwindow_toolbarbreak",ring_QMainWindow_toolBarBreak);
	RING_API_REGISTER("qmainwindow_toolbuttonstyle",ring_QMainWindow_toolButtonStyle);
	RING_API_REGISTER("qmainwindow_unifiedtitleandtoolbaronmac",ring_QMainWindow_unifiedTitleAndToolBarOnMac);
	RING_API_REGISTER("qstatusbar_addpermanentwidget",ring_QStatusBar_addPermanentWidget);
	RING_API_REGISTER("qstatusbar_addwidget",ring_QStatusBar_addWidget);
	RING_API_REGISTER("qstatusbar_currentmessage",ring_QStatusBar_currentMessage);
	RING_API_REGISTER("qstatusbar_insertpermanentwidget",ring_QStatusBar_insertPermanentWidget);
	RING_API_REGISTER("qstatusbar_insertwidget",ring_QStatusBar_insertWidget);
	RING_API_REGISTER("qstatusbar_issizegripenabled",ring_QStatusBar_isSizeGripEnabled);
	RING_API_REGISTER("qstatusbar_removewidget",ring_QStatusBar_removeWidget);
	RING_API_REGISTER("qstatusbar_setsizegripenabled",ring_QStatusBar_setSizeGripEnabled);
	RING_API_REGISTER("qstatusbar_clearmessage",ring_QStatusBar_clearMessage);
	RING_API_REGISTER("qstatusbar_showmessage",ring_QStatusBar_showMessage);
	RING_API_REGISTER("qdockwidget_allowedareas",ring_QDockWidget_allowedAreas);
	RING_API_REGISTER("qdockwidget_features",ring_QDockWidget_features);
	RING_API_REGISTER("qdockwidget_isareaallowed",ring_QDockWidget_isAreaAllowed);
	RING_API_REGISTER("qdockwidget_isfloating",ring_QDockWidget_isFloating);
	RING_API_REGISTER("qdockwidget_setallowedareas",ring_QDockWidget_setAllowedAreas);
	RING_API_REGISTER("qdockwidget_setfeatures",ring_QDockWidget_setFeatures);
	RING_API_REGISTER("qdockwidget_setfloating",ring_QDockWidget_setFloating);
	RING_API_REGISTER("qdockwidget_settitlebarwidget",ring_QDockWidget_setTitleBarWidget);
	RING_API_REGISTER("qdockwidget_setwidget",ring_QDockWidget_setWidget);
	RING_API_REGISTER("qdockwidget_titlebarwidget",ring_QDockWidget_titleBarWidget);
	RING_API_REGISTER("qdockwidget_toggleviewaction",ring_QDockWidget_toggleViewAction);
	RING_API_REGISTER("qdockwidget_widget",ring_QDockWidget_widget);
	RING_API_REGISTER("qdockwidget_allowedareaschanged",ring_QDockWidget_allowedAreasChanged);
	RING_API_REGISTER("qdockwidget_docklocationchanged",ring_QDockWidget_dockLocationChanged);
	RING_API_REGISTER("qdockwidget_featureschanged",ring_QDockWidget_featuresChanged);
	RING_API_REGISTER("qdockwidget_toplevelchanged",ring_QDockWidget_topLevelChanged);
	RING_API_REGISTER("qdockwidget_visibilitychanged",ring_QDockWidget_visibilityChanged);
	RING_API_REGISTER("qdockwidget_setallowedareaschangedevent",ring_QDockWidget_setallowedAreasChangedEvent);
	RING_API_REGISTER("qdockwidget_setdocklocationchangedevent",ring_QDockWidget_setdockLocationChangedEvent);
	RING_API_REGISTER("qdockwidget_setfeatureschangedevent",ring_QDockWidget_setfeaturesChangedEvent);
	RING_API_REGISTER("qdockwidget_settoplevelchangedevent",ring_QDockWidget_settopLevelChangedEvent);
	RING_API_REGISTER("qdockwidget_setvisibilitychangedevent",ring_QDockWidget_setvisibilityChangedEvent);
	RING_API_REGISTER("qdockwidget_getallowedareaschangedevent",ring_QDockWidget_getallowedAreasChangedEvent);
	RING_API_REGISTER("qdockwidget_getdocklocationchangedevent",ring_QDockWidget_getdockLocationChangedEvent);
	RING_API_REGISTER("qdockwidget_getfeatureschangedevent",ring_QDockWidget_getfeaturesChangedEvent);
	RING_API_REGISTER("qdockwidget_gettoplevelchangedevent",ring_QDockWidget_gettopLevelChangedEvent);
	RING_API_REGISTER("qdockwidget_getvisibilitychangedevent",ring_QDockWidget_getvisibilityChangedEvent);
	RING_API_REGISTER("qtabwidget_tabbar",ring_QTabWidget_tabBar);
	RING_API_REGISTER("qtabwidget_addtab",ring_QTabWidget_addTab);
	RING_API_REGISTER("qtabwidget_clear",ring_QTabWidget_clear);
	RING_API_REGISTER("qtabwidget_cornerwidget",ring_QTabWidget_cornerWidget);
	RING_API_REGISTER("qtabwidget_count",ring_QTabWidget_count);
	RING_API_REGISTER("qtabwidget_currentindex",ring_QTabWidget_currentIndex);
	RING_API_REGISTER("qtabwidget_currentwidget",ring_QTabWidget_currentWidget);
	RING_API_REGISTER("qtabwidget_documentmode",ring_QTabWidget_documentMode);
	RING_API_REGISTER("qtabwidget_elidemode",ring_QTabWidget_elideMode);
	RING_API_REGISTER("qtabwidget_iconsize",ring_QTabWidget_iconSize);
	RING_API_REGISTER("qtabwidget_indexof",ring_QTabWidget_indexOf);
	RING_API_REGISTER("qtabwidget_inserttab",ring_QTabWidget_insertTab);
	RING_API_REGISTER("qtabwidget_ismovable",ring_QTabWidget_isMovable);
	RING_API_REGISTER("qtabwidget_istabenabled",ring_QTabWidget_isTabEnabled);
	RING_API_REGISTER("qtabwidget_removetab",ring_QTabWidget_removeTab);
	RING_API_REGISTER("qtabwidget_setcornerwidget",ring_QTabWidget_setCornerWidget);
	RING_API_REGISTER("qtabwidget_setdocumentmode",ring_QTabWidget_setDocumentMode);
	RING_API_REGISTER("qtabwidget_setelidemode",ring_QTabWidget_setElideMode);
	RING_API_REGISTER("qtabwidget_seticonsize",ring_QTabWidget_setIconSize);
	RING_API_REGISTER("qtabwidget_setmovable",ring_QTabWidget_setMovable);
	RING_API_REGISTER("qtabwidget_settabenabled",ring_QTabWidget_setTabEnabled);
	RING_API_REGISTER("qtabwidget_settabicon",ring_QTabWidget_setTabIcon);
	RING_API_REGISTER("qtabwidget_settabtext",ring_QTabWidget_setTabText);
	RING_API_REGISTER("qtabwidget_settabtooltip",ring_QTabWidget_setTabToolTip);
	RING_API_REGISTER("qtabwidget_settabwhatsthis",ring_QTabWidget_setTabWhatsThis);
	RING_API_REGISTER("qtabwidget_settabsclosable",ring_QTabWidget_setTabsClosable);
	RING_API_REGISTER("qtabwidget_setusesscrollbuttons",ring_QTabWidget_setUsesScrollButtons);
	RING_API_REGISTER("qtabwidget_tabicon",ring_QTabWidget_tabIcon);
	RING_API_REGISTER("qtabwidget_tabtext",ring_QTabWidget_tabText);
	RING_API_REGISTER("qtabwidget_tabtooltip",ring_QTabWidget_tabToolTip);
	RING_API_REGISTER("qtabwidget_tabwhatsthis",ring_QTabWidget_tabWhatsThis);
	RING_API_REGISTER("qtabwidget_tabsclosable",ring_QTabWidget_tabsClosable);
	RING_API_REGISTER("qtabwidget_usesscrollbuttons",ring_QTabWidget_usesScrollButtons);
	RING_API_REGISTER("qtabwidget_widget",ring_QTabWidget_widget);
	RING_API_REGISTER("qtabwidget_heightforwidth",ring_QTabWidget_heightForWidth);
	RING_API_REGISTER("qtabwidget_minimumsizehint",ring_QTabWidget_minimumSizeHint);
	RING_API_REGISTER("qtabwidget_sizehint",ring_QTabWidget_sizeHint);
	RING_API_REGISTER("qtabwidget_setcurrentindex",ring_QTabWidget_setCurrentIndex);
	RING_API_REGISTER("qtabwidget_setcurrentwidget",ring_QTabWidget_setCurrentWidget);
	RING_API_REGISTER("qtabwidget_setcurrentchangedevent",ring_QTabWidget_setcurrentChangedEvent);
	RING_API_REGISTER("qtabwidget_settabcloserequestedevent",ring_QTabWidget_settabCloseRequestedEvent);
	RING_API_REGISTER("qtabwidget_getcurrentchangedevent",ring_QTabWidget_getcurrentChangedEvent);
	RING_API_REGISTER("qtabwidget_gettabcloserequestedevent",ring_QTabWidget_gettabCloseRequestedEvent);
	RING_API_REGISTER("qtabwidget_geteventparameters",ring_QTabWidget_geteventparameters);
	RING_API_REGISTER("qtablewidgetitem_background",ring_QTableWidgetItem_background);
	RING_API_REGISTER("qtablewidgetitem_checkstate",ring_QTableWidgetItem_checkState);
	RING_API_REGISTER("qtablewidgetitem_clone",ring_QTableWidgetItem_clone);
	RING_API_REGISTER("qtablewidgetitem_column",ring_QTableWidgetItem_column);
	RING_API_REGISTER("qtablewidgetitem_data",ring_QTableWidgetItem_data);
	RING_API_REGISTER("qtablewidgetitem_flags",ring_QTableWidgetItem_flags);
	RING_API_REGISTER("qtablewidgetitem_font",ring_QTableWidgetItem_font);
	RING_API_REGISTER("qtablewidgetitem_foreground",ring_QTableWidgetItem_foreground);
	RING_API_REGISTER("qtablewidgetitem_icon",ring_QTableWidgetItem_icon);
	RING_API_REGISTER("qtablewidgetitem_isselected",ring_QTableWidgetItem_isSelected);
	RING_API_REGISTER("qtablewidgetitem_read",ring_QTableWidgetItem_read);
	RING_API_REGISTER("qtablewidgetitem_row",ring_QTableWidgetItem_row);
	RING_API_REGISTER("qtablewidgetitem_setbackground",ring_QTableWidgetItem_setBackground);
	RING_API_REGISTER("qtablewidgetitem_setcheckstate",ring_QTableWidgetItem_setCheckState);
	RING_API_REGISTER("qtablewidgetitem_setdata",ring_QTableWidgetItem_setData);
	RING_API_REGISTER("qtablewidgetitem_setflags",ring_QTableWidgetItem_setFlags);
	RING_API_REGISTER("qtablewidgetitem_setfont",ring_QTableWidgetItem_setFont);
	RING_API_REGISTER("qtablewidgetitem_setforeground",ring_QTableWidgetItem_setForeground);
	RING_API_REGISTER("qtablewidgetitem_seticon",ring_QTableWidgetItem_setIcon);
	RING_API_REGISTER("qtablewidgetitem_setselected",ring_QTableWidgetItem_setSelected);
	RING_API_REGISTER("qtablewidgetitem_setsizehint",ring_QTableWidgetItem_setSizeHint);
	RING_API_REGISTER("qtablewidgetitem_setstatustip",ring_QTableWidgetItem_setStatusTip);
	RING_API_REGISTER("qtablewidgetitem_settext",ring_QTableWidgetItem_setText);
	RING_API_REGISTER("qtablewidgetitem_settextalignment",ring_QTableWidgetItem_setTextAlignment);
	RING_API_REGISTER("qtablewidgetitem_settooltip",ring_QTableWidgetItem_setToolTip);
	RING_API_REGISTER("qtablewidgetitem_setwhatsthis",ring_QTableWidgetItem_setWhatsThis);
	RING_API_REGISTER("qtablewidgetitem_sizehint",ring_QTableWidgetItem_sizeHint);
	RING_API_REGISTER("qtablewidgetitem_statustip",ring_QTableWidgetItem_statusTip);
	RING_API_REGISTER("qtablewidgetitem_tablewidget",ring_QTableWidgetItem_tableWidget);
	RING_API_REGISTER("qtablewidgetitem_text",ring_QTableWidgetItem_text);
	RING_API_REGISTER("qtablewidgetitem_textalignment",ring_QTableWidgetItem_textAlignment);
	RING_API_REGISTER("qtablewidgetitem_tooltip",ring_QTableWidgetItem_toolTip);
	RING_API_REGISTER("qtablewidgetitem_type",ring_QTableWidgetItem_type);
	RING_API_REGISTER("qtablewidgetitem_whatsthis",ring_QTableWidgetItem_whatsThis);
	RING_API_REGISTER("qtablewidgetitem_write",ring_QTableWidgetItem_write);
	RING_API_REGISTER("qframe_framerect",ring_QFrame_frameRect);
	RING_API_REGISTER("qframe_frameshadow",ring_QFrame_frameShadow);
	RING_API_REGISTER("qframe_frameshape",ring_QFrame_frameShape);
	RING_API_REGISTER("qframe_framestyle",ring_QFrame_frameStyle);
	RING_API_REGISTER("qframe_framewidth",ring_QFrame_frameWidth);
	RING_API_REGISTER("qframe_linewidth",ring_QFrame_lineWidth);
	RING_API_REGISTER("qframe_midlinewidth",ring_QFrame_midLineWidth);
	RING_API_REGISTER("qframe_setframerect",ring_QFrame_setFrameRect);
	RING_API_REGISTER("qframe_setframeshadow",ring_QFrame_setFrameShadow);
	RING_API_REGISTER("qframe_setframeshape",ring_QFrame_setFrameShape);
	RING_API_REGISTER("qframe_setframestyle",ring_QFrame_setFrameStyle);
	RING_API_REGISTER("qframe_setlinewidth",ring_QFrame_setLineWidth);
	RING_API_REGISTER("qframe_setmidlinewidth",ring_QFrame_setMidLineWidth);
	RING_API_REGISTER("qframe_sizehint",ring_QFrame_sizeHint);
	RING_API_REGISTER("qabstractscrollarea_addscrollbarwidget",ring_QAbstractScrollArea_addScrollBarWidget);
	RING_API_REGISTER("qabstractscrollarea_cornerwidget",ring_QAbstractScrollArea_cornerWidget);
	RING_API_REGISTER("qabstractscrollarea_horizontalscrollbar",ring_QAbstractScrollArea_horizontalScrollBar);
	RING_API_REGISTER("qabstractscrollarea_horizontalscrollbarpolicy",ring_QAbstractScrollArea_horizontalScrollBarPolicy);
	RING_API_REGISTER("qabstractscrollarea_maximumviewportsize",ring_QAbstractScrollArea_maximumViewportSize);
	RING_API_REGISTER("qabstractscrollarea_scrollbarwidgets",ring_QAbstractScrollArea_scrollBarWidgets);
	RING_API_REGISTER("qabstractscrollarea_setcornerwidget",ring_QAbstractScrollArea_setCornerWidget);
	RING_API_REGISTER("qabstractscrollarea_sethorizontalscrollbar",ring_QAbstractScrollArea_setHorizontalScrollBar);
	RING_API_REGISTER("qabstractscrollarea_sethorizontalscrollbarpolicy",ring_QAbstractScrollArea_setHorizontalScrollBarPolicy);
	RING_API_REGISTER("qabstractscrollarea_setverticalscrollbar",ring_QAbstractScrollArea_setVerticalScrollBar);
	RING_API_REGISTER("qabstractscrollarea_setverticalscrollbarpolicy",ring_QAbstractScrollArea_setVerticalScrollBarPolicy);
	RING_API_REGISTER("qabstractscrollarea_setviewport",ring_QAbstractScrollArea_setViewport);
	RING_API_REGISTER("qabstractscrollarea_verticalscrollbar",ring_QAbstractScrollArea_verticalScrollBar);
	RING_API_REGISTER("qabstractscrollarea_verticalscrollbarpolicy",ring_QAbstractScrollArea_verticalScrollBarPolicy);
	RING_API_REGISTER("qabstractscrollarea_viewport",ring_QAbstractScrollArea_viewport);
	RING_API_REGISTER("qabstractitemview_alternatingrowcolors",ring_QAbstractItemView_alternatingRowColors);
	RING_API_REGISTER("qabstractitemview_autoscrollmargin",ring_QAbstractItemView_autoScrollMargin);
	RING_API_REGISTER("qabstractitemview_closepersistenteditor",ring_QAbstractItemView_closePersistentEditor);
	RING_API_REGISTER("qabstractitemview_currentindex",ring_QAbstractItemView_currentIndex);
	RING_API_REGISTER("qabstractitemview_defaultdropaction",ring_QAbstractItemView_defaultDropAction);
	RING_API_REGISTER("qabstractitemview_dragdropmode",ring_QAbstractItemView_dragDropMode);
	RING_API_REGISTER("qabstractitemview_dragdropoverwritemode",ring_QAbstractItemView_dragDropOverwriteMode);
	RING_API_REGISTER("qabstractitemview_dragenabled",ring_QAbstractItemView_dragEnabled);
	RING_API_REGISTER("qabstractitemview_edittriggers",ring_QAbstractItemView_editTriggers);
	RING_API_REGISTER("qabstractitemview_hasautoscroll",ring_QAbstractItemView_hasAutoScroll);
	RING_API_REGISTER("qabstractitemview_horizontalscrollmode",ring_QAbstractItemView_horizontalScrollMode);
	RING_API_REGISTER("qabstractitemview_iconsize",ring_QAbstractItemView_iconSize);
	RING_API_REGISTER("qabstractitemview_indexat",ring_QAbstractItemView_indexAt);
	RING_API_REGISTER("qabstractitemview_indexwidget",ring_QAbstractItemView_indexWidget);
	RING_API_REGISTER("qabstractitemview_itemdelegate",ring_QAbstractItemView_itemDelegate);
	RING_API_REGISTER("qabstractitemview_itemdelegateforcolumn",ring_QAbstractItemView_itemDelegateForColumn);
	RING_API_REGISTER("qabstractitemview_itemdelegateforrow",ring_QAbstractItemView_itemDelegateForRow);
	RING_API_REGISTER("qabstractitemview_keyboardsearch",ring_QAbstractItemView_keyboardSearch);
	RING_API_REGISTER("qabstractitemview_model",ring_QAbstractItemView_model);
	RING_API_REGISTER("qabstractitemview_openpersistenteditor",ring_QAbstractItemView_openPersistentEditor);
	RING_API_REGISTER("qabstractitemview_rootindex",ring_QAbstractItemView_rootIndex);
	RING_API_REGISTER("qabstractitemview_scrollto",ring_QAbstractItemView_scrollTo);
	RING_API_REGISTER("qabstractitemview_selectionbehavior",ring_QAbstractItemView_selectionBehavior);
	RING_API_REGISTER("qabstractitemview_selectionmode",ring_QAbstractItemView_selectionMode);
	RING_API_REGISTER("qabstractitemview_selectionmodel",ring_QAbstractItemView_selectionModel);
	RING_API_REGISTER("qabstractitemview_setalternatingrowcolors",ring_QAbstractItemView_setAlternatingRowColors);
	RING_API_REGISTER("qabstractitemview_setautoscroll",ring_QAbstractItemView_setAutoScroll);
	RING_API_REGISTER("qabstractitemview_setautoscrollmargin",ring_QAbstractItemView_setAutoScrollMargin);
	RING_API_REGISTER("qabstractitemview_setdefaultdropaction",ring_QAbstractItemView_setDefaultDropAction);
	RING_API_REGISTER("qabstractitemview_setdragdropmode",ring_QAbstractItemView_setDragDropMode);
	RING_API_REGISTER("qabstractitemview_setdragdropoverwritemode",ring_QAbstractItemView_setDragDropOverwriteMode);
	RING_API_REGISTER("qabstractitemview_setdragenabled",ring_QAbstractItemView_setDragEnabled);
	RING_API_REGISTER("qabstractitemview_setdropindicatorshown",ring_QAbstractItemView_setDropIndicatorShown);
	RING_API_REGISTER("qabstractitemview_setedittriggers",ring_QAbstractItemView_setEditTriggers);
	RING_API_REGISTER("qabstractitemview_sethorizontalscrollmode",ring_QAbstractItemView_setHorizontalScrollMode);
	RING_API_REGISTER("qabstractitemview_seticonsize",ring_QAbstractItemView_setIconSize);
	RING_API_REGISTER("qabstractitemview_setindexwidget",ring_QAbstractItemView_setIndexWidget);
	RING_API_REGISTER("qabstractitemview_setitemdelegate",ring_QAbstractItemView_setItemDelegate);
	RING_API_REGISTER("qabstractitemview_setitemdelegateforcolumn",ring_QAbstractItemView_setItemDelegateForColumn);
	RING_API_REGISTER("qabstractitemview_setitemdelegateforrow",ring_QAbstractItemView_setItemDelegateForRow);
	RING_API_REGISTER("qabstractitemview_setmodel",ring_QAbstractItemView_setModel);
	RING_API_REGISTER("qabstractitemview_setselectionbehavior",ring_QAbstractItemView_setSelectionBehavior);
	RING_API_REGISTER("qabstractitemview_setselectionmode",ring_QAbstractItemView_setSelectionMode);
	RING_API_REGISTER("qabstractitemview_setselectionmodel",ring_QAbstractItemView_setSelectionModel);
	RING_API_REGISTER("qabstractitemview_settabkeynavigation",ring_QAbstractItemView_setTabKeyNavigation);
	RING_API_REGISTER("qabstractitemview_settextelidemode",ring_QAbstractItemView_setTextElideMode);
	RING_API_REGISTER("qabstractitemview_setverticalscrollmode",ring_QAbstractItemView_setVerticalScrollMode);
	RING_API_REGISTER("qabstractitemview_showdropindicator",ring_QAbstractItemView_showDropIndicator);
	RING_API_REGISTER("qabstractitemview_sizehintforcolumn",ring_QAbstractItemView_sizeHintForColumn);
	RING_API_REGISTER("qabstractitemview_sizehintforindex",ring_QAbstractItemView_sizeHintForIndex);
	RING_API_REGISTER("qabstractitemview_sizehintforrow",ring_QAbstractItemView_sizeHintForRow);
	RING_API_REGISTER("qabstractitemview_tabkeynavigation",ring_QAbstractItemView_tabKeyNavigation);
	RING_API_REGISTER("qabstractitemview_textelidemode",ring_QAbstractItemView_textElideMode);
	RING_API_REGISTER("qabstractitemview_verticalscrollmode",ring_QAbstractItemView_verticalScrollMode);
	RING_API_REGISTER("qabstractitemview_visualrect",ring_QAbstractItemView_visualRect);
	RING_API_REGISTER("qabstractitemview_clearselection",ring_QAbstractItemView_clearSelection);
	RING_API_REGISTER("qabstractitemview_edit",ring_QAbstractItemView_edit);
	RING_API_REGISTER("qabstractitemview_scrolltobottom",ring_QAbstractItemView_scrollToBottom);
	RING_API_REGISTER("qabstractitemview_scrolltotop",ring_QAbstractItemView_scrollToTop);
	RING_API_REGISTER("qabstractitemview_setcurrentindex",ring_QAbstractItemView_setCurrentIndex);
	RING_API_REGISTER("qabstractitemview_update",ring_QAbstractItemView_update);
	RING_API_REGISTER("qtableview_clearspans",ring_QTableView_clearSpans);
	RING_API_REGISTER("qtableview_columnat",ring_QTableView_columnAt);
	RING_API_REGISTER("qtableview_columnspan",ring_QTableView_columnSpan);
	RING_API_REGISTER("qtableview_columnviewportposition",ring_QTableView_columnViewportPosition);
	RING_API_REGISTER("qtableview_columnwidth",ring_QTableView_columnWidth);
	RING_API_REGISTER("qtableview_gridstyle",ring_QTableView_gridStyle);
	RING_API_REGISTER("qtableview_horizontalheader",ring_QTableView_horizontalHeader);
	RING_API_REGISTER("qtableview_iscolumnhidden",ring_QTableView_isColumnHidden);
	RING_API_REGISTER("qtableview_iscornerbuttonenabled",ring_QTableView_isCornerButtonEnabled);
	RING_API_REGISTER("qtableview_isrowhidden",ring_QTableView_isRowHidden);
	RING_API_REGISTER("qtableview_issortingenabled",ring_QTableView_isSortingEnabled);
	RING_API_REGISTER("qtableview_rowat",ring_QTableView_rowAt);
	RING_API_REGISTER("qtableview_rowheight",ring_QTableView_rowHeight);
	RING_API_REGISTER("qtableview_rowspan",ring_QTableView_rowSpan);
	RING_API_REGISTER("qtableview_rowviewportposition",ring_QTableView_rowViewportPosition);
	RING_API_REGISTER("qtableview_setcolumnhidden",ring_QTableView_setColumnHidden);
	RING_API_REGISTER("qtableview_setcolumnwidth",ring_QTableView_setColumnWidth);
	RING_API_REGISTER("qtableview_setcornerbuttonenabled",ring_QTableView_setCornerButtonEnabled);
	RING_API_REGISTER("qtableview_setgridstyle",ring_QTableView_setGridStyle);
	RING_API_REGISTER("qtableview_sethorizontalheader",ring_QTableView_setHorizontalHeader);
	RING_API_REGISTER("qtableview_setrowheight",ring_QTableView_setRowHeight);
	RING_API_REGISTER("qtableview_setrowhidden",ring_QTableView_setRowHidden);
	RING_API_REGISTER("qtableview_setsortingenabled",ring_QTableView_setSortingEnabled);
	RING_API_REGISTER("qtableview_setspan",ring_QTableView_setSpan);
	RING_API_REGISTER("qtableview_setverticalheader",ring_QTableView_setVerticalHeader);
	RING_API_REGISTER("qtableview_setwordwrap",ring_QTableView_setWordWrap);
	RING_API_REGISTER("qtableview_showgrid",ring_QTableView_showGrid);
	RING_API_REGISTER("qtableview_sortbycolumn",ring_QTableView_sortByColumn);
	RING_API_REGISTER("qtableview_verticalheader",ring_QTableView_verticalHeader);
	RING_API_REGISTER("qtableview_wordwrap",ring_QTableView_wordWrap);
	RING_API_REGISTER("qtableview_hidecolumn",ring_QTableView_hideColumn);
	RING_API_REGISTER("qtableview_hiderow",ring_QTableView_hideRow);
	RING_API_REGISTER("qtableview_resizecolumntocontents",ring_QTableView_resizeColumnToContents);
	RING_API_REGISTER("qtableview_resizecolumnstocontents",ring_QTableView_resizeColumnsToContents);
	RING_API_REGISTER("qtableview_resizerowtocontents",ring_QTableView_resizeRowToContents);
	RING_API_REGISTER("qtableview_resizerowstocontents",ring_QTableView_resizeRowsToContents);
	RING_API_REGISTER("qtableview_selectcolumn",ring_QTableView_selectColumn);
	RING_API_REGISTER("qtableview_selectrow",ring_QTableView_selectRow);
	RING_API_REGISTER("qtableview_setshowgrid",ring_QTableView_setShowGrid);
	RING_API_REGISTER("qtableview_showcolumn",ring_QTableView_showColumn);
	RING_API_REGISTER("qtableview_showrow",ring_QTableView_showRow);
	RING_API_REGISTER("qtablewidget_cellwidget",ring_QTableWidget_cellWidget);
	RING_API_REGISTER("qtablewidget_closepersistenteditor",ring_QTableWidget_closePersistentEditor);
	RING_API_REGISTER("qtablewidget_column",ring_QTableWidget_column);
	RING_API_REGISTER("qtablewidget_columncount",ring_QTableWidget_columnCount);
	RING_API_REGISTER("qtablewidget_currentcolumn",ring_QTableWidget_currentColumn);
	RING_API_REGISTER("qtablewidget_currentitem",ring_QTableWidget_currentItem);
	RING_API_REGISTER("qtablewidget_currentrow",ring_QTableWidget_currentRow);
	RING_API_REGISTER("qtablewidget_edititem",ring_QTableWidget_editItem);
	RING_API_REGISTER("qtablewidget_horizontalheaderitem",ring_QTableWidget_horizontalHeaderItem);
	RING_API_REGISTER("qtablewidget_item",ring_QTableWidget_item);
	RING_API_REGISTER("qtablewidget_itemat",ring_QTableWidget_itemAt);
	RING_API_REGISTER("qtablewidget_itemprototype",ring_QTableWidget_itemPrototype);
	RING_API_REGISTER("qtablewidget_openpersistenteditor",ring_QTableWidget_openPersistentEditor);
	RING_API_REGISTER("qtablewidget_removecellwidget",ring_QTableWidget_removeCellWidget);
	RING_API_REGISTER("qtablewidget_row",ring_QTableWidget_row);
	RING_API_REGISTER("qtablewidget_rowcount",ring_QTableWidget_rowCount);
	RING_API_REGISTER("qtablewidget_selecteditems",ring_QTableWidget_selectedItems);
	RING_API_REGISTER("qtablewidget_selectedranges",ring_QTableWidget_selectedRanges);
	RING_API_REGISTER("qtablewidget_setcellwidget",ring_QTableWidget_setCellWidget);
	RING_API_REGISTER("qtablewidget_setcolumncount",ring_QTableWidget_setColumnCount);
	RING_API_REGISTER("qtablewidget_setcurrentcell",ring_QTableWidget_setCurrentCell);
	RING_API_REGISTER("qtablewidget_setcurrentitem",ring_QTableWidget_setCurrentItem);
	RING_API_REGISTER("qtablewidget_sethorizontalheaderitem",ring_QTableWidget_setHorizontalHeaderItem);
	RING_API_REGISTER("qtablewidget_sethorizontalheaderlabels",ring_QTableWidget_setHorizontalHeaderLabels);
	RING_API_REGISTER("qtablewidget_setitem",ring_QTableWidget_setItem);
	RING_API_REGISTER("qtablewidget_setitemprototype",ring_QTableWidget_setItemPrototype);
	RING_API_REGISTER("qtablewidget_setrowcount",ring_QTableWidget_setRowCount);
	RING_API_REGISTER("qtablewidget_setverticalheaderitem",ring_QTableWidget_setVerticalHeaderItem);
	RING_API_REGISTER("qtablewidget_sortitems",ring_QTableWidget_sortItems);
	RING_API_REGISTER("qtablewidget_takehorizontalheaderitem",ring_QTableWidget_takeHorizontalHeaderItem);
	RING_API_REGISTER("qtablewidget_takeitem",ring_QTableWidget_takeItem);
	RING_API_REGISTER("qtablewidget_takeverticalheaderitem",ring_QTableWidget_takeVerticalHeaderItem);
	RING_API_REGISTER("qtablewidget_verticalheaderitem",ring_QTableWidget_verticalHeaderItem);
	RING_API_REGISTER("qtablewidget_visualcolumn",ring_QTableWidget_visualColumn);
	RING_API_REGISTER("qtablewidget_visualitemrect",ring_QTableWidget_visualItemRect);
	RING_API_REGISTER("qtablewidget_visualrow",ring_QTableWidget_visualRow);
	RING_API_REGISTER("qtablewidget_clear",ring_QTableWidget_clear);
	RING_API_REGISTER("qtablewidget_clearcontents",ring_QTableWidget_clearContents);
	RING_API_REGISTER("qtablewidget_insertcolumn",ring_QTableWidget_insertColumn);
	RING_API_REGISTER("qtablewidget_insertrow",ring_QTableWidget_insertRow);
	RING_API_REGISTER("qtablewidget_removecolumn",ring_QTableWidget_removeColumn);
	RING_API_REGISTER("qtablewidget_removerow",ring_QTableWidget_removeRow);
	RING_API_REGISTER("qtablewidget_scrolltoitem",ring_QTableWidget_scrollToItem);
	RING_API_REGISTER("qtablewidget_setcellactivatedevent",ring_QTableWidget_setcellActivatedEvent);
	RING_API_REGISTER("qtablewidget_setcellchangedevent",ring_QTableWidget_setcellChangedEvent);
	RING_API_REGISTER("qtablewidget_setcellclickedevent",ring_QTableWidget_setcellClickedEvent);
	RING_API_REGISTER("qtablewidget_setcelldoubleclickedevent",ring_QTableWidget_setcellDoubleClickedEvent);
	RING_API_REGISTER("qtablewidget_setcellenteredevent",ring_QTableWidget_setcellEnteredEvent);
	RING_API_REGISTER("qtablewidget_setcellpressedevent",ring_QTableWidget_setcellPressedEvent);
	RING_API_REGISTER("qtablewidget_setcurrentcellchangedevent",ring_QTableWidget_setcurrentCellChangedEvent);
	RING_API_REGISTER("qtablewidget_setcurrentitemchangedevent",ring_QTableWidget_setcurrentItemChangedEvent);
	RING_API_REGISTER("qtablewidget_setitemactivatedevent",ring_QTableWidget_setitemActivatedEvent);
	RING_API_REGISTER("qtablewidget_setitemchangedevent",ring_QTableWidget_setitemChangedEvent);
	RING_API_REGISTER("qtablewidget_setitemclickedevent",ring_QTableWidget_setitemClickedEvent);
	RING_API_REGISTER("qtablewidget_setitemdoubleclickedevent",ring_QTableWidget_setitemDoubleClickedEvent);
	RING_API_REGISTER("qtablewidget_setitementeredevent",ring_QTableWidget_setitemEnteredEvent);
	RING_API_REGISTER("qtablewidget_setitempressedevent",ring_QTableWidget_setitemPressedEvent);
	RING_API_REGISTER("qtablewidget_setitemselectionchangedevent",ring_QTableWidget_setitemSelectionChangedEvent);
	RING_API_REGISTER("qtablewidget_getcellactivatedevent",ring_QTableWidget_getcellActivatedEvent);
	RING_API_REGISTER("qtablewidget_getcellchangedevent",ring_QTableWidget_getcellChangedEvent);
	RING_API_REGISTER("qtablewidget_getcellclickedevent",ring_QTableWidget_getcellClickedEvent);
	RING_API_REGISTER("qtablewidget_getcelldoubleclickedevent",ring_QTableWidget_getcellDoubleClickedEvent);
	RING_API_REGISTER("qtablewidget_getcellenteredevent",ring_QTableWidget_getcellEnteredEvent);
	RING_API_REGISTER("qtablewidget_getcellpressedevent",ring_QTableWidget_getcellPressedEvent);
	RING_API_REGISTER("qtablewidget_getcurrentcellchangedevent",ring_QTableWidget_getcurrentCellChangedEvent);
	RING_API_REGISTER("qtablewidget_getcurrentitemchangedevent",ring_QTableWidget_getcurrentItemChangedEvent);
	RING_API_REGISTER("qtablewidget_getitemactivatedevent",ring_QTableWidget_getitemActivatedEvent);
	RING_API_REGISTER("qtablewidget_getitemchangedevent",ring_QTableWidget_getitemChangedEvent);
	RING_API_REGISTER("qtablewidget_getitemclickedevent",ring_QTableWidget_getitemClickedEvent);
	RING_API_REGISTER("qtablewidget_getitemdoubleclickedevent",ring_QTableWidget_getitemDoubleClickedEvent);
	RING_API_REGISTER("qtablewidget_getitementeredevent",ring_QTableWidget_getitemEnteredEvent);
	RING_API_REGISTER("qtablewidget_getitempressedevent",ring_QTableWidget_getitemPressedEvent);
	RING_API_REGISTER("qtablewidget_getitemselectionchangedevent",ring_QTableWidget_getitemSelectionChangedEvent);
	RING_API_REGISTER("qprogressbar_alignment",ring_QProgressBar_alignment);
	RING_API_REGISTER("qprogressbar_format",ring_QProgressBar_format);
	RING_API_REGISTER("qprogressbar_invertedappearance",ring_QProgressBar_invertedAppearance);
	RING_API_REGISTER("qprogressbar_istextvisible",ring_QProgressBar_isTextVisible);
	RING_API_REGISTER("qprogressbar_maximum",ring_QProgressBar_maximum);
	RING_API_REGISTER("qprogressbar_minimum",ring_QProgressBar_minimum);
	RING_API_REGISTER("qprogressbar_orientation",ring_QProgressBar_orientation);
	RING_API_REGISTER("qprogressbar_resetformat",ring_QProgressBar_resetFormat);
	RING_API_REGISTER("qprogressbar_setalignment",ring_QProgressBar_setAlignment);
	RING_API_REGISTER("qprogressbar_setformat",ring_QProgressBar_setFormat);
	RING_API_REGISTER("qprogressbar_setinvertedappearance",ring_QProgressBar_setInvertedAppearance);
	RING_API_REGISTER("qprogressbar_settextdirection",ring_QProgressBar_setTextDirection);
	RING_API_REGISTER("qprogressbar_settextvisible",ring_QProgressBar_setTextVisible);
	RING_API_REGISTER("qprogressbar_text",ring_QProgressBar_text);
	RING_API_REGISTER("qprogressbar_textdirection",ring_QProgressBar_textDirection);
	RING_API_REGISTER("qprogressbar_value",ring_QProgressBar_value);
	RING_API_REGISTER("qprogressbar_reset",ring_QProgressBar_reset);
	RING_API_REGISTER("qprogressbar_setmaximum",ring_QProgressBar_setMaximum);
	RING_API_REGISTER("qprogressbar_setminimum",ring_QProgressBar_setMinimum);
	RING_API_REGISTER("qprogressbar_setorientation",ring_QProgressBar_setOrientation);
	RING_API_REGISTER("qprogressbar_setrange",ring_QProgressBar_setRange);
	RING_API_REGISTER("qprogressbar_setvalue",ring_QProgressBar_setValue);
	RING_API_REGISTER("qprogressbar_setvaluechangedevent",ring_QProgressBar_setvalueChangedEvent);
	RING_API_REGISTER("qprogressbar_getvaluechangedevent",ring_QProgressBar_getvalueChangedEvent);
	RING_API_REGISTER("qspinbox_cleantext",ring_QSpinBox_cleanText);
	RING_API_REGISTER("qspinbox_displayintegerbase",ring_QSpinBox_displayIntegerBase);
	RING_API_REGISTER("qspinbox_maximum",ring_QSpinBox_maximum);
	RING_API_REGISTER("qspinbox_minimum",ring_QSpinBox_minimum);
	RING_API_REGISTER("qspinbox_prefix",ring_QSpinBox_prefix);
	RING_API_REGISTER("qspinbox_setdisplayintegerbase",ring_QSpinBox_setDisplayIntegerBase);
	RING_API_REGISTER("qspinbox_setmaximum",ring_QSpinBox_setMaximum);
	RING_API_REGISTER("qspinbox_setminimum",ring_QSpinBox_setMinimum);
	RING_API_REGISTER("qspinbox_setprefix",ring_QSpinBox_setPrefix);
	RING_API_REGISTER("qspinbox_setrange",ring_QSpinBox_setRange);
	RING_API_REGISTER("qspinbox_setsinglestep",ring_QSpinBox_setSingleStep);
	RING_API_REGISTER("qspinbox_setsuffix",ring_QSpinBox_setSuffix);
	RING_API_REGISTER("qspinbox_singlestep",ring_QSpinBox_singleStep);
	RING_API_REGISTER("qspinbox_suffix",ring_QSpinBox_suffix);
	RING_API_REGISTER("qspinbox_value",ring_QSpinBox_value);
	RING_API_REGISTER("qspinbox_setvalue",ring_QSpinBox_setValue);
	RING_API_REGISTER("qspinbox_setvaluechangedevent",ring_QSpinBox_setvalueChangedEvent);
	RING_API_REGISTER("qspinbox_getvaluechangedevent",ring_QSpinBox_getvalueChangedEvent);
	RING_API_REGISTER("qabstractslider_hastracking",ring_QAbstractSlider_hasTracking);
	RING_API_REGISTER("qabstractslider_invertedappearance",ring_QAbstractSlider_invertedAppearance);
	RING_API_REGISTER("qabstractslider_invertedcontrols",ring_QAbstractSlider_invertedControls);
	RING_API_REGISTER("qabstractslider_issliderdown",ring_QAbstractSlider_isSliderDown);
	RING_API_REGISTER("qabstractslider_maximum",ring_QAbstractSlider_maximum);
	RING_API_REGISTER("qabstractslider_minimum",ring_QAbstractSlider_minimum);
	RING_API_REGISTER("qabstractslider_orientation",ring_QAbstractSlider_orientation);
	RING_API_REGISTER("qabstractslider_pagestep",ring_QAbstractSlider_pageStep);
	RING_API_REGISTER("qabstractslider_setinvertedappearance",ring_QAbstractSlider_setInvertedAppearance);
	RING_API_REGISTER("qabstractslider_setinvertedcontrols",ring_QAbstractSlider_setInvertedControls);
	RING_API_REGISTER("qabstractslider_setmaximum",ring_QAbstractSlider_setMaximum);
	RING_API_REGISTER("qabstractslider_setminimum",ring_QAbstractSlider_setMinimum);
	RING_API_REGISTER("qabstractslider_setpagestep",ring_QAbstractSlider_setPageStep);
	RING_API_REGISTER("qabstractslider_setsinglestep",ring_QAbstractSlider_setSingleStep);
	RING_API_REGISTER("qabstractslider_setsliderdown",ring_QAbstractSlider_setSliderDown);
	RING_API_REGISTER("qabstractslider_setsliderposition",ring_QAbstractSlider_setSliderPosition);
	RING_API_REGISTER("qabstractslider_settracking",ring_QAbstractSlider_setTracking);
	RING_API_REGISTER("qabstractslider_singlestep",ring_QAbstractSlider_singleStep);
	RING_API_REGISTER("qabstractslider_sliderposition",ring_QAbstractSlider_sliderPosition);
	RING_API_REGISTER("qabstractslider_triggeraction",ring_QAbstractSlider_triggerAction);
	RING_API_REGISTER("qabstractslider_value",ring_QAbstractSlider_value);
	RING_API_REGISTER("qabstractslider_setorientation",ring_QAbstractSlider_setOrientation);
	RING_API_REGISTER("qabstractslider_setrange",ring_QAbstractSlider_setRange);
	RING_API_REGISTER("qabstractslider_setvalue",ring_QAbstractSlider_setValue);
	RING_API_REGISTER("qslider_settickinterval",ring_QSlider_setTickInterval);
	RING_API_REGISTER("qslider_settickposition",ring_QSlider_setTickPosition);
	RING_API_REGISTER("qslider_tickinterval",ring_QSlider_tickInterval);
	RING_API_REGISTER("qslider_tickposition",ring_QSlider_tickPosition);
	RING_API_REGISTER("qslider_minimumsizehint",ring_QSlider_minimumSizeHint);
	RING_API_REGISTER("qslider_sizehint",ring_QSlider_sizeHint);
	RING_API_REGISTER("qslider_setactiontriggeredevent",ring_QSlider_setactionTriggeredEvent);
	RING_API_REGISTER("qslider_setrangechangedevent",ring_QSlider_setrangeChangedEvent);
	RING_API_REGISTER("qslider_setslidermovedevent",ring_QSlider_setsliderMovedEvent);
	RING_API_REGISTER("qslider_setsliderpressedevent",ring_QSlider_setsliderPressedEvent);
	RING_API_REGISTER("qslider_setsliderreleasedevent",ring_QSlider_setsliderReleasedEvent);
	RING_API_REGISTER("qslider_setvaluechangedevent",ring_QSlider_setvalueChangedEvent);
	RING_API_REGISTER("qslider_getactiontriggeredevent",ring_QSlider_getactionTriggeredEvent);
	RING_API_REGISTER("qslider_getrangechangedevent",ring_QSlider_getrangeChangedEvent);
	RING_API_REGISTER("qslider_getslidermovedevent",ring_QSlider_getsliderMovedEvent);
	RING_API_REGISTER("qslider_getsliderpressedevent",ring_QSlider_getsliderPressedEvent);
	RING_API_REGISTER("qslider_getsliderreleasedevent",ring_QSlider_getsliderReleasedEvent);
	RING_API_REGISTER("qslider_getvaluechangedevent",ring_QSlider_getvalueChangedEvent);
	RING_API_REGISTER("qdatetimeedit_calendarpopup",ring_QDateTimeEdit_calendarPopup);
	RING_API_REGISTER("qdatetimeedit_calendarwidget",ring_QDateTimeEdit_calendarWidget);
	RING_API_REGISTER("qdatetimeedit_clearmaximumdate",ring_QDateTimeEdit_clearMaximumDate);
	RING_API_REGISTER("qdatetimeedit_clearmaximumdatetime",ring_QDateTimeEdit_clearMaximumDateTime);
	RING_API_REGISTER("qdatetimeedit_clearmaximumtime",ring_QDateTimeEdit_clearMaximumTime);
	RING_API_REGISTER("qdatetimeedit_clearminimumdate",ring_QDateTimeEdit_clearMinimumDate);
	RING_API_REGISTER("qdatetimeedit_clearminimumdatetime",ring_QDateTimeEdit_clearMinimumDateTime);
	RING_API_REGISTER("qdatetimeedit_clearminimumtime",ring_QDateTimeEdit_clearMinimumTime);
	RING_API_REGISTER("qdatetimeedit_currentsection",ring_QDateTimeEdit_currentSection);
	RING_API_REGISTER("qdatetimeedit_currentsectionindex",ring_QDateTimeEdit_currentSectionIndex);
	RING_API_REGISTER("qdatetimeedit_date",ring_QDateTimeEdit_date);
	RING_API_REGISTER("qdatetimeedit_datetime",ring_QDateTimeEdit_dateTime);
	RING_API_REGISTER("qdatetimeedit_displayformat",ring_QDateTimeEdit_displayFormat);
	RING_API_REGISTER("qdatetimeedit_displayedsections",ring_QDateTimeEdit_displayedSections);
	RING_API_REGISTER("qdatetimeedit_maximumdate",ring_QDateTimeEdit_maximumDate);
	RING_API_REGISTER("qdatetimeedit_maximumdatetime",ring_QDateTimeEdit_maximumDateTime);
	RING_API_REGISTER("qdatetimeedit_maximumtime",ring_QDateTimeEdit_maximumTime);
	RING_API_REGISTER("qdatetimeedit_minimumdate",ring_QDateTimeEdit_minimumDate);
	RING_API_REGISTER("qdatetimeedit_minimumdatetime",ring_QDateTimeEdit_minimumDateTime);
	RING_API_REGISTER("qdatetimeedit_minimumtime",ring_QDateTimeEdit_minimumTime);
	RING_API_REGISTER("qdatetimeedit_sectionat",ring_QDateTimeEdit_sectionAt);
	RING_API_REGISTER("qdatetimeedit_sectioncount",ring_QDateTimeEdit_sectionCount);
	RING_API_REGISTER("qdatetimeedit_sectiontext",ring_QDateTimeEdit_sectionText);
	RING_API_REGISTER("qdatetimeedit_setcalendarpopup",ring_QDateTimeEdit_setCalendarPopup);
	RING_API_REGISTER("qdatetimeedit_setcalendarwidget",ring_QDateTimeEdit_setCalendarWidget);
	RING_API_REGISTER("qdatetimeedit_setcurrentsection",ring_QDateTimeEdit_setCurrentSection);
	RING_API_REGISTER("qdatetimeedit_setcurrentsectionindex",ring_QDateTimeEdit_setCurrentSectionIndex);
	RING_API_REGISTER("qdatetimeedit_setdaterange",ring_QDateTimeEdit_setDateRange);
	RING_API_REGISTER("qdatetimeedit_setdatetimerange",ring_QDateTimeEdit_setDateTimeRange);
	RING_API_REGISTER("qdatetimeedit_setdisplayformat",ring_QDateTimeEdit_setDisplayFormat);
	RING_API_REGISTER("qdatetimeedit_setmaximumdate",ring_QDateTimeEdit_setMaximumDate);
	RING_API_REGISTER("qdatetimeedit_setmaximumdatetime",ring_QDateTimeEdit_setMaximumDateTime);
	RING_API_REGISTER("qdatetimeedit_setmaximumtime",ring_QDateTimeEdit_setMaximumTime);
	RING_API_REGISTER("qdatetimeedit_setminimumdate",ring_QDateTimeEdit_setMinimumDate);
	RING_API_REGISTER("qdatetimeedit_setminimumdatetime",ring_QDateTimeEdit_setMinimumDateTime);
	RING_API_REGISTER("qdatetimeedit_setminimumtime",ring_QDateTimeEdit_setMinimumTime);
	RING_API_REGISTER("qdatetimeedit_setselectedsection",ring_QDateTimeEdit_setSelectedSection);
	RING_API_REGISTER("qdatetimeedit_settimerange",ring_QDateTimeEdit_setTimeRange);
	RING_API_REGISTER("qdatetimeedit_settimespec",ring_QDateTimeEdit_setTimeSpec);
	RING_API_REGISTER("qdatetimeedit_time",ring_QDateTimeEdit_time);
	RING_API_REGISTER("qdatetimeedit_timespec",ring_QDateTimeEdit_timeSpec);
	RING_API_REGISTER("qdatetimeedit_setdate",ring_QDateTimeEdit_setDate);
	RING_API_REGISTER("qdatetimeedit_setdatetime",ring_QDateTimeEdit_setDateTime);
	RING_API_REGISTER("qdatetimeedit_settime",ring_QDateTimeEdit_setTime);
	RING_API_REGISTER("qabstractspinbox_alignment",ring_QAbstractSpinBox_alignment);
	RING_API_REGISTER("qabstractspinbox_buttonsymbols",ring_QAbstractSpinBox_buttonSymbols);
	RING_API_REGISTER("qabstractspinbox_correctionmode",ring_QAbstractSpinBox_correctionMode);
	RING_API_REGISTER("qabstractspinbox_hasacceptableinput",ring_QAbstractSpinBox_hasAcceptableInput);
	RING_API_REGISTER("qabstractspinbox_hasframe",ring_QAbstractSpinBox_hasFrame);
	RING_API_REGISTER("qabstractspinbox_interprettext",ring_QAbstractSpinBox_interpretText);
	RING_API_REGISTER("qabstractspinbox_isaccelerated",ring_QAbstractSpinBox_isAccelerated);
	RING_API_REGISTER("qabstractspinbox_isreadonly",ring_QAbstractSpinBox_isReadOnly);
	RING_API_REGISTER("qabstractspinbox_keyboardtracking",ring_QAbstractSpinBox_keyboardTracking);
	RING_API_REGISTER("qabstractspinbox_setaccelerated",ring_QAbstractSpinBox_setAccelerated);
	RING_API_REGISTER("qabstractspinbox_setalignment",ring_QAbstractSpinBox_setAlignment);
	RING_API_REGISTER("qabstractspinbox_setbuttonsymbols",ring_QAbstractSpinBox_setButtonSymbols);
	RING_API_REGISTER("qabstractspinbox_setcorrectionmode",ring_QAbstractSpinBox_setCorrectionMode);
	RING_API_REGISTER("qabstractspinbox_setframe",ring_QAbstractSpinBox_setFrame);
	RING_API_REGISTER("qabstractspinbox_setkeyboardtracking",ring_QAbstractSpinBox_setKeyboardTracking);
	RING_API_REGISTER("qabstractspinbox_setreadonly",ring_QAbstractSpinBox_setReadOnly);
	RING_API_REGISTER("qabstractspinbox_setspecialvaluetext",ring_QAbstractSpinBox_setSpecialValueText);
	RING_API_REGISTER("qabstractspinbox_setwrapping",ring_QAbstractSpinBox_setWrapping);
	RING_API_REGISTER("qabstractspinbox_specialvaluetext",ring_QAbstractSpinBox_specialValueText);
	RING_API_REGISTER("qabstractspinbox_stepby",ring_QAbstractSpinBox_stepBy);
	RING_API_REGISTER("qabstractspinbox_text",ring_QAbstractSpinBox_text);
	RING_API_REGISTER("qabstractspinbox_wrapping",ring_QAbstractSpinBox_wrapping);
	RING_API_REGISTER("qabstractspinbox_clear",ring_QAbstractSpinBox_clear);
	RING_API_REGISTER("qabstractspinbox_selectall",ring_QAbstractSpinBox_selectAll);
	RING_API_REGISTER("qabstractspinbox_stepdown",ring_QAbstractSpinBox_stepDown);
	RING_API_REGISTER("qabstractspinbox_stepup",ring_QAbstractSpinBox_stepUp);
	RING_API_REGISTER("qdial_notchsize",ring_QDial_notchSize);
	RING_API_REGISTER("qdial_notchtarget",ring_QDial_notchTarget);
	RING_API_REGISTER("qdial_notchesvisible",ring_QDial_notchesVisible);
	RING_API_REGISTER("qdial_setnotchtarget",ring_QDial_setNotchTarget);
	RING_API_REGISTER("qdial_wrapping",ring_QDial_wrapping);
	RING_API_REGISTER("qdial_minimumsizehint",ring_QDial_minimumSizeHint);
	RING_API_REGISTER("qdial_sizehint",ring_QDial_sizeHint);
	RING_API_REGISTER("qdial_setnotchesvisible",ring_QDial_setNotchesVisible);
	RING_API_REGISTER("qdial_setwrapping",ring_QDial_setWrapping);
	RING_API_REGISTER("qdial_setactiontriggeredevent",ring_QDial_setactionTriggeredEvent);
	RING_API_REGISTER("qdial_setrangechangedevent",ring_QDial_setrangeChangedEvent);
	RING_API_REGISTER("qdial_setslidermovedevent",ring_QDial_setsliderMovedEvent);
	RING_API_REGISTER("qdial_setsliderpressedevent",ring_QDial_setsliderPressedEvent);
	RING_API_REGISTER("qdial_setsliderreleasedevent",ring_QDial_setsliderReleasedEvent);
	RING_API_REGISTER("qdial_setvaluechangedevent",ring_QDial_setvalueChangedEvent);
	RING_API_REGISTER("qdial_getactiontriggeredevent",ring_QDial_getactionTriggeredEvent);
	RING_API_REGISTER("qdial_getrangechangedevent",ring_QDial_getrangeChangedEvent);
	RING_API_REGISTER("qdial_getslidermovedevent",ring_QDial_getsliderMovedEvent);
	RING_API_REGISTER("qdial_getsliderpressedevent",ring_QDial_getsliderPressedEvent);
	RING_API_REGISTER("qdial_getsliderreleasedevent",ring_QDial_getsliderReleasedEvent);
	RING_API_REGISTER("qdial_getvaluechangedevent",ring_QDial_getvalueChangedEvent);
	RING_API_REGISTER("qcheckbox_checkstate",ring_QCheckBox_checkState);
	RING_API_REGISTER("qcheckbox_istristate",ring_QCheckBox_isTristate);
	RING_API_REGISTER("qcheckbox_setcheckstate",ring_QCheckBox_setCheckState);
	RING_API_REGISTER("qcheckbox_settristate",ring_QCheckBox_setTristate);
	RING_API_REGISTER("qcheckbox_minimumsizehint",ring_QCheckBox_minimumSizeHint);
	RING_API_REGISTER("qcheckbox_sizehint",ring_QCheckBox_sizeHint);
	RING_API_REGISTER("qcheckbox_setstatechangedevent",ring_QCheckBox_setstateChangedEvent);
	RING_API_REGISTER("qcheckbox_setclickedevent",ring_QCheckBox_setclickedEvent);
	RING_API_REGISTER("qcheckbox_setpressedevent",ring_QCheckBox_setpressedEvent);
	RING_API_REGISTER("qcheckbox_setreleasedevent",ring_QCheckBox_setreleasedEvent);
	RING_API_REGISTER("qcheckbox_settoggledevent",ring_QCheckBox_settoggledEvent);
	RING_API_REGISTER("qcheckbox_getstatechangedevent",ring_QCheckBox_getstateChangedEvent);
	RING_API_REGISTER("qcheckbox_getclickedevent",ring_QCheckBox_getclickedEvent);
	RING_API_REGISTER("qcheckbox_getpressedevent",ring_QCheckBox_getpressedEvent);
	RING_API_REGISTER("qcheckbox_getreleasedevent",ring_QCheckBox_getreleasedEvent);
	RING_API_REGISTER("qcheckbox_gettoggledevent",ring_QCheckBox_gettoggledEvent);
	RING_API_REGISTER("qabstractbutton_autoexclusive",ring_QAbstractButton_autoExclusive);
	RING_API_REGISTER("qabstractbutton_autorepeat",ring_QAbstractButton_autoRepeat);
	RING_API_REGISTER("qabstractbutton_autorepeatdelay",ring_QAbstractButton_autoRepeatDelay);
	RING_API_REGISTER("qabstractbutton_autorepeatinterval",ring_QAbstractButton_autoRepeatInterval);
	RING_API_REGISTER("qabstractbutton_group",ring_QAbstractButton_group);
	RING_API_REGISTER("qabstractbutton_icon",ring_QAbstractButton_icon);
	RING_API_REGISTER("qabstractbutton_iconsize",ring_QAbstractButton_iconSize);
	RING_API_REGISTER("qabstractbutton_ischeckable",ring_QAbstractButton_isCheckable);
	RING_API_REGISTER("qabstractbutton_ischecked",ring_QAbstractButton_isChecked);
	RING_API_REGISTER("qabstractbutton_isdown",ring_QAbstractButton_isDown);
	RING_API_REGISTER("qabstractbutton_setautoexclusive",ring_QAbstractButton_setAutoExclusive);
	RING_API_REGISTER("qabstractbutton_setautorepeat",ring_QAbstractButton_setAutoRepeat);
	RING_API_REGISTER("qabstractbutton_setautorepeatdelay",ring_QAbstractButton_setAutoRepeatDelay);
	RING_API_REGISTER("qabstractbutton_setautorepeatinterval",ring_QAbstractButton_setAutoRepeatInterval);
	RING_API_REGISTER("qabstractbutton_setcheckable",ring_QAbstractButton_setCheckable);
	RING_API_REGISTER("qabstractbutton_setdown",ring_QAbstractButton_setDown);
	RING_API_REGISTER("qabstractbutton_seticon",ring_QAbstractButton_setIcon);
	RING_API_REGISTER("qabstractbutton_setshortcut",ring_QAbstractButton_setShortcut);
	RING_API_REGISTER("qabstractbutton_settext",ring_QAbstractButton_setText);
	RING_API_REGISTER("qabstractbutton_shortcut",ring_QAbstractButton_shortcut);
	RING_API_REGISTER("qabstractbutton_text",ring_QAbstractButton_text);
	RING_API_REGISTER("qabstractbutton_animateclick",ring_QAbstractButton_animateClick);
	RING_API_REGISTER("qabstractbutton_click",ring_QAbstractButton_click);
	RING_API_REGISTER("qabstractbutton_setchecked",ring_QAbstractButton_setChecked);
	RING_API_REGISTER("qabstractbutton_seticonsize",ring_QAbstractButton_setIconSize);
	RING_API_REGISTER("qabstractbutton_toggle",ring_QAbstractButton_toggle);
	RING_API_REGISTER("qradiobutton_minimumsizehint",ring_QRadioButton_minimumSizeHint);
	RING_API_REGISTER("qradiobutton_sizehint",ring_QRadioButton_sizeHint);
	RING_API_REGISTER("qradiobutton_setclickedevent",ring_QRadioButton_setclickedEvent);
	RING_API_REGISTER("qradiobutton_setpressedevent",ring_QRadioButton_setpressedEvent);
	RING_API_REGISTER("qradiobutton_setreleasedevent",ring_QRadioButton_setreleasedEvent);
	RING_API_REGISTER("qradiobutton_settoggledevent",ring_QRadioButton_settoggledEvent);
	RING_API_REGISTER("qradiobutton_getclickedevent",ring_QRadioButton_getclickedEvent);
	RING_API_REGISTER("qradiobutton_getpressedevent",ring_QRadioButton_getpressedEvent);
	RING_API_REGISTER("qradiobutton_getreleasedevent",ring_QRadioButton_getreleasedEvent);
	RING_API_REGISTER("qradiobutton_gettoggledevent",ring_QRadioButton_gettoggledEvent);
	RING_API_REGISTER("qbuttongroup_addbutton",ring_QButtonGroup_addButton);
	RING_API_REGISTER("qbuttongroup_button",ring_QButtonGroup_button);
	RING_API_REGISTER("qbuttongroup_checkedbutton",ring_QButtonGroup_checkedButton);
	RING_API_REGISTER("qbuttongroup_checkedid",ring_QButtonGroup_checkedId);
	RING_API_REGISTER("qbuttongroup_exclusive",ring_QButtonGroup_exclusive);
	RING_API_REGISTER("qbuttongroup_id",ring_QButtonGroup_id);
	RING_API_REGISTER("qbuttongroup_removebutton",ring_QButtonGroup_removeButton);
	RING_API_REGISTER("qbuttongroup_setexclusive",ring_QButtonGroup_setExclusive);
	RING_API_REGISTER("qbuttongroup_setid",ring_QButtonGroup_setId);
	RING_API_REGISTER("qbuttongroup_setbuttonclickedevent",ring_QButtonGroup_setbuttonClickedEvent);
	RING_API_REGISTER("qbuttongroup_setbuttonpressedevent",ring_QButtonGroup_setbuttonPressedEvent);
	RING_API_REGISTER("qbuttongroup_setbuttonreleasedevent",ring_QButtonGroup_setbuttonReleasedEvent);
	RING_API_REGISTER("qbuttongroup_getbuttonclickedevent",ring_QButtonGroup_getbuttonClickedEvent);
	RING_API_REGISTER("qbuttongroup_getbuttonpressedevent",ring_QButtonGroup_getbuttonPressedEvent);
	RING_API_REGISTER("qbuttongroup_getbuttonreleasedevent",ring_QButtonGroup_getbuttonReleasedEvent);
	RING_API_REGISTER("qaction_actiongroup",ring_QAction_actionGroup);
	RING_API_REGISTER("qaction_activate",ring_QAction_activate);
	RING_API_REGISTER("qaction_autorepeat",ring_QAction_autoRepeat);
	RING_API_REGISTER("qaction_data",ring_QAction_data);
	RING_API_REGISTER("qaction_font",ring_QAction_font);
	RING_API_REGISTER("qaction_icon",ring_QAction_icon);
	RING_API_REGISTER("qaction_icontext",ring_QAction_iconText);
	RING_API_REGISTER("qaction_ischeckable",ring_QAction_isCheckable);
	RING_API_REGISTER("qaction_ischecked",ring_QAction_isChecked);
	RING_API_REGISTER("qaction_isenabled",ring_QAction_isEnabled);
	RING_API_REGISTER("qaction_isiconvisibleinmenu",ring_QAction_isIconVisibleInMenu);
	RING_API_REGISTER("qaction_isseparator",ring_QAction_isSeparator);
	RING_API_REGISTER("qaction_isvisible",ring_QAction_isVisible);
	RING_API_REGISTER("qaction_menu",ring_QAction_menu);
	RING_API_REGISTER("qaction_menurole",ring_QAction_menuRole);
	RING_API_REGISTER("qaction_parentwidget",ring_QAction_parentWidget);
	RING_API_REGISTER("qaction_priority",ring_QAction_priority);
	RING_API_REGISTER("qaction_setactiongroup",ring_QAction_setActionGroup);
	RING_API_REGISTER("qaction_setautorepeat",ring_QAction_setAutoRepeat);
	RING_API_REGISTER("qaction_setcheckable",ring_QAction_setCheckable);
	RING_API_REGISTER("qaction_setdata",ring_QAction_setData);
	RING_API_REGISTER("qaction_setfont",ring_QAction_setFont);
	RING_API_REGISTER("qaction_seticon",ring_QAction_setIcon);
	RING_API_REGISTER("qaction_seticontext",ring_QAction_setIconText);
	RING_API_REGISTER("qaction_seticonvisibleinmenu",ring_QAction_setIconVisibleInMenu);
	RING_API_REGISTER("qaction_setmenu",ring_QAction_setMenu);
	RING_API_REGISTER("qaction_setmenurole",ring_QAction_setMenuRole);
	RING_API_REGISTER("qaction_setpriority",ring_QAction_setPriority);
	RING_API_REGISTER("qaction_setseparator",ring_QAction_setSeparator);
	RING_API_REGISTER("qaction_setshortcut",ring_QAction_setShortcut);
	RING_API_REGISTER("qaction_setshortcutcontext",ring_QAction_setShortcutContext);
	RING_API_REGISTER("qaction_setshortcuts",ring_QAction_setShortcuts);
	RING_API_REGISTER("qaction_setstatustip",ring_QAction_setStatusTip);
	RING_API_REGISTER("qaction_settext",ring_QAction_setText);
	RING_API_REGISTER("qaction_settooltip",ring_QAction_setToolTip);
	RING_API_REGISTER("qaction_setwhatsthis",ring_QAction_setWhatsThis);
	RING_API_REGISTER("qaction_shortcut",ring_QAction_shortcut);
	RING_API_REGISTER("qaction_shortcutcontext",ring_QAction_shortcutContext);
	RING_API_REGISTER("qaction_showstatustext",ring_QAction_showStatusText);
	RING_API_REGISTER("qaction_statustip",ring_QAction_statusTip);
	RING_API_REGISTER("qaction_text",ring_QAction_text);
	RING_API_REGISTER("qaction_tooltip",ring_QAction_toolTip);
	RING_API_REGISTER("qaction_whatsthis",ring_QAction_whatsThis);
	RING_API_REGISTER("qaction_hover",ring_QAction_hover);
	RING_API_REGISTER("qaction_setchecked",ring_QAction_setChecked);
	RING_API_REGISTER("qaction_setdisabled",ring_QAction_setDisabled);
	RING_API_REGISTER("qaction_setenabled",ring_QAction_setEnabled);
	RING_API_REGISTER("qaction_setvisible",ring_QAction_setVisible);
	RING_API_REGISTER("qaction_toggle",ring_QAction_toggle);
	RING_API_REGISTER("qaction_trigger",ring_QAction_trigger);
	RING_API_REGISTER("qaction_setclickevent",ring_QAction_setClickEvent);
	RING_API_REGISTER("qaction_getclickevent",ring_QAction_getClickEvent);
	RING_API_REGISTER("qmessagebox_addbutton",ring_QMessageBox_addButton);
	RING_API_REGISTER("qmessagebox_button",ring_QMessageBox_button);
	RING_API_REGISTER("qmessagebox_buttonrole",ring_QMessageBox_buttonRole);
	RING_API_REGISTER("qmessagebox_clickedbutton",ring_QMessageBox_clickedButton);
	RING_API_REGISTER("qmessagebox_defaultbutton",ring_QMessageBox_defaultButton);
	RING_API_REGISTER("qmessagebox_detailedtext",ring_QMessageBox_detailedText);
	RING_API_REGISTER("qmessagebox_escapebutton",ring_QMessageBox_escapeButton);
	RING_API_REGISTER("qmessagebox_iconpixmap",ring_QMessageBox_iconPixmap);
	RING_API_REGISTER("qmessagebox_informativetext",ring_QMessageBox_informativeText);
	RING_API_REGISTER("qmessagebox_open",ring_QMessageBox_open);
	RING_API_REGISTER("qmessagebox_removebutton",ring_QMessageBox_removeButton);
	RING_API_REGISTER("qmessagebox_setdefaultbutton",ring_QMessageBox_setDefaultButton);
	RING_API_REGISTER("qmessagebox_setdetailedtext",ring_QMessageBox_setDetailedText);
	RING_API_REGISTER("qmessagebox_setescapebutton",ring_QMessageBox_setEscapeButton);
	RING_API_REGISTER("qmessagebox_seticon",ring_QMessageBox_setIcon);
	RING_API_REGISTER("qmessagebox_seticonpixmap",ring_QMessageBox_setIconPixmap);
	RING_API_REGISTER("qmessagebox_setinformativetext",ring_QMessageBox_setInformativeText);
	RING_API_REGISTER("qmessagebox_setstandardbuttons",ring_QMessageBox_setStandardButtons);
	RING_API_REGISTER("qmessagebox_settext",ring_QMessageBox_setText);
	RING_API_REGISTER("qmessagebox_settextformat",ring_QMessageBox_setTextFormat);
	RING_API_REGISTER("qmessagebox_setwindowmodality",ring_QMessageBox_setWindowModality);
	RING_API_REGISTER("qmessagebox_setwindowtitle",ring_QMessageBox_setWindowTitle);
	RING_API_REGISTER("qmessagebox_standardbutton",ring_QMessageBox_standardButton);
	RING_API_REGISTER("qmessagebox_standardbuttons",ring_QMessageBox_standardButtons);
	RING_API_REGISTER("qmessagebox_text",ring_QMessageBox_text);
	RING_API_REGISTER("qmessagebox_textformat",ring_QMessageBox_textFormat);
	RING_API_REGISTER("qmessagebox_exec",ring_QMessageBox_exec);
	RING_API_REGISTER("qmessagebox_about",ring_QMessageBox_about);
	RING_API_REGISTER("qmessagebox_aboutqt",ring_QMessageBox_aboutQt);
	RING_API_REGISTER("qmessagebox_critical",ring_QMessageBox_critical);
	RING_API_REGISTER("qmessagebox_information",ring_QMessageBox_information);
	RING_API_REGISTER("qmessagebox_question",ring_QMessageBox_question);
	RING_API_REGISTER("qmessagebox_warning",ring_QMessageBox_warning);
	RING_API_REGISTER("qfiledialog_acceptmode",ring_QFileDialog_acceptMode);
	RING_API_REGISTER("qfiledialog_defaultsuffix",ring_QFileDialog_defaultSuffix);
	RING_API_REGISTER("qfiledialog_directory",ring_QFileDialog_directory);
	RING_API_REGISTER("qfiledialog_directoryurl",ring_QFileDialog_directoryUrl);
	RING_API_REGISTER("qfiledialog_filemode",ring_QFileDialog_fileMode);
	RING_API_REGISTER("qfiledialog_filter",ring_QFileDialog_filter);
	RING_API_REGISTER("qfiledialog_history",ring_QFileDialog_history);
	RING_API_REGISTER("qfiledialog_iconprovider",ring_QFileDialog_iconProvider);
	RING_API_REGISTER("qfiledialog_itemdelegate",ring_QFileDialog_itemDelegate);
	RING_API_REGISTER("qfiledialog_labeltext",ring_QFileDialog_labelText);
	RING_API_REGISTER("qfiledialog_mimetypefilters",ring_QFileDialog_mimeTypeFilters);
	RING_API_REGISTER("qfiledialog_namefilters",ring_QFileDialog_nameFilters);
	RING_API_REGISTER("qfiledialog_open",ring_QFileDialog_open);
	RING_API_REGISTER("qfiledialog_options",ring_QFileDialog_options);
	RING_API_REGISTER("qfiledialog_proxymodel",ring_QFileDialog_proxyModel);
	RING_API_REGISTER("qfiledialog_restorestate",ring_QFileDialog_restoreState);
	RING_API_REGISTER("qfiledialog_savestate",ring_QFileDialog_saveState);
	RING_API_REGISTER("qfiledialog_selectfile",ring_QFileDialog_selectFile);
	RING_API_REGISTER("qfiledialog_selectmimetypefilter",ring_QFileDialog_selectMimeTypeFilter);
	RING_API_REGISTER("qfiledialog_selectnamefilter",ring_QFileDialog_selectNameFilter);
	RING_API_REGISTER("qfiledialog_selecturl",ring_QFileDialog_selectUrl);
	RING_API_REGISTER("qfiledialog_selectedfiles",ring_QFileDialog_selectedFiles);
	RING_API_REGISTER("qfiledialog_selectednamefilter",ring_QFileDialog_selectedNameFilter);
	RING_API_REGISTER("qfiledialog_selectedurls",ring_QFileDialog_selectedUrls);
	RING_API_REGISTER("qfiledialog_setacceptmode",ring_QFileDialog_setAcceptMode);
	RING_API_REGISTER("qfiledialog_setdefaultsuffix",ring_QFileDialog_setDefaultSuffix);
	RING_API_REGISTER("qfiledialog_setdirectory",ring_QFileDialog_setDirectory);
	RING_API_REGISTER("qfiledialog_setdirectory_2",ring_QFileDialog_setDirectory_2);
	RING_API_REGISTER("qfiledialog_setdirectoryurl",ring_QFileDialog_setDirectoryUrl);
	RING_API_REGISTER("qfiledialog_setfilemode",ring_QFileDialog_setFileMode);
	RING_API_REGISTER("qfiledialog_setfilter",ring_QFileDialog_setFilter);
	RING_API_REGISTER("qfiledialog_sethistory",ring_QFileDialog_setHistory);
	RING_API_REGISTER("qfiledialog_seticonprovider",ring_QFileDialog_setIconProvider);
	RING_API_REGISTER("qfiledialog_setitemdelegate",ring_QFileDialog_setItemDelegate);
	RING_API_REGISTER("qfiledialog_setlabeltext",ring_QFileDialog_setLabelText);
	RING_API_REGISTER("qfiledialog_setmimetypefilters",ring_QFileDialog_setMimeTypeFilters);
	RING_API_REGISTER("qfiledialog_setnamefilter",ring_QFileDialog_setNameFilter);
	RING_API_REGISTER("qfiledialog_setnamefilters",ring_QFileDialog_setNameFilters);
	RING_API_REGISTER("qfiledialog_setoption",ring_QFileDialog_setOption);
	RING_API_REGISTER("qfiledialog_setoptions",ring_QFileDialog_setOptions);
	RING_API_REGISTER("qfiledialog_setproxymodel",ring_QFileDialog_setProxyModel);
	RING_API_REGISTER("qfiledialog_setsidebarurls",ring_QFileDialog_setSidebarUrls);
	RING_API_REGISTER("qfiledialog_setviewmode",ring_QFileDialog_setViewMode);
	RING_API_REGISTER("qfiledialog_sidebarurls",ring_QFileDialog_sidebarUrls);
	RING_API_REGISTER("qfiledialog_testoption",ring_QFileDialog_testOption);
	RING_API_REGISTER("qfiledialog_viewmode",ring_QFileDialog_viewMode);
	RING_API_REGISTER("qfiledialog_getexistingdirectory",ring_QFileDialog_getExistingDirectory);
	RING_API_REGISTER("qfiledialog_getexistingdirectoryurl",ring_QFileDialog_getExistingDirectoryUrl);
	RING_API_REGISTER("qfiledialog_getopenfilename",ring_QFileDialog_getOpenFileName);
	RING_API_REGISTER("qfiledialog_getopenfilename_2",ring_QFileDialog_getOpenFileName_2);
	RING_API_REGISTER("qfiledialog_getopenfilenames",ring_QFileDialog_getOpenFileNames);
	RING_API_REGISTER("qfiledialog_getopenfileurl",ring_QFileDialog_getOpenFileUrl);
	RING_API_REGISTER("qfiledialog_getopenfileurls",ring_QFileDialog_getOpenFileUrls);
	RING_API_REGISTER("qfiledialog_getsavefilename",ring_QFileDialog_getSaveFileName);
	RING_API_REGISTER("qfiledialog_getsavefilename_2",ring_QFileDialog_getSaveFileName_2);
	RING_API_REGISTER("qfiledialog_getsavefileurl",ring_QFileDialog_getSaveFileUrl);
	RING_API_REGISTER("qfiledialog_setcurrentchangedevent",ring_QFileDialog_setcurrentChangedEvent);
	RING_API_REGISTER("qfiledialog_setcurrenturlchangedevent",ring_QFileDialog_setcurrentUrlChangedEvent);
	RING_API_REGISTER("qfiledialog_setdirectoryenteredevent",ring_QFileDialog_setdirectoryEnteredEvent);
	RING_API_REGISTER("qfiledialog_setdirectoryurlenteredevent",ring_QFileDialog_setdirectoryUrlEnteredEvent);
	RING_API_REGISTER("qfiledialog_setfileselectedevent",ring_QFileDialog_setfileSelectedEvent);
	RING_API_REGISTER("qfiledialog_setfilesselectedevent",ring_QFileDialog_setfilesSelectedEvent);
	RING_API_REGISTER("qfiledialog_setfilterselectedevent",ring_QFileDialog_setfilterSelectedEvent);
	RING_API_REGISTER("qfiledialog_seturlselectedevent",ring_QFileDialog_seturlSelectedEvent);
	RING_API_REGISTER("qfiledialog_seturlsselectedevent",ring_QFileDialog_seturlsSelectedEvent);
	RING_API_REGISTER("qfiledialog_getcurrentchangedevent",ring_QFileDialog_getcurrentChangedEvent);
	RING_API_REGISTER("qfiledialog_getcurrenturlchangedevent",ring_QFileDialog_getcurrentUrlChangedEvent);
	RING_API_REGISTER("qfiledialog_getdirectoryenteredevent",ring_QFileDialog_getdirectoryEnteredEvent);
	RING_API_REGISTER("qfiledialog_getdirectoryurlenteredevent",ring_QFileDialog_getdirectoryUrlEnteredEvent);
	RING_API_REGISTER("qfiledialog_getfileselectedevent",ring_QFileDialog_getfileSelectedEvent);
	RING_API_REGISTER("qfiledialog_getfilesselectedevent",ring_QFileDialog_getfilesSelectedEvent);
	RING_API_REGISTER("qfiledialog_getfilterselectedevent",ring_QFileDialog_getfilterSelectedEvent);
	RING_API_REGISTER("qfiledialog_geturlselectedevent",ring_QFileDialog_geturlSelectedEvent);
	RING_API_REGISTER("qfiledialog_geturlsselectedevent",ring_QFileDialog_geturlsSelectedEvent);
	RING_API_REGISTER("qdirmodel_fileicon",ring_QDirModel_fileIcon);
	RING_API_REGISTER("qdirmodel_fileinfo",ring_QDirModel_fileInfo);
	RING_API_REGISTER("qdirmodel_filename",ring_QDirModel_fileName);
	RING_API_REGISTER("qdirmodel_filepath",ring_QDirModel_filePath);
	RING_API_REGISTER("qdirmodel_filter",ring_QDirModel_filter);
	RING_API_REGISTER("qdirmodel_iconprovider",ring_QDirModel_iconProvider);
	RING_API_REGISTER("qdirmodel_index",ring_QDirModel_index);
	RING_API_REGISTER("qdirmodel_isdir",ring_QDirModel_isDir);
	RING_API_REGISTER("qdirmodel_isreadonly",ring_QDirModel_isReadOnly);
	RING_API_REGISTER("qdirmodel_lazychildcount",ring_QDirModel_lazyChildCount);
	RING_API_REGISTER("qdirmodel_mkdir",ring_QDirModel_mkdir);
	RING_API_REGISTER("qdirmodel_namefilters",ring_QDirModel_nameFilters);
	RING_API_REGISTER("qdirmodel_remove",ring_QDirModel_remove);
	RING_API_REGISTER("qdirmodel_resolvesymlinks",ring_QDirModel_resolveSymlinks);
	RING_API_REGISTER("qdirmodel_rmdir",ring_QDirModel_rmdir);
	RING_API_REGISTER("qdirmodel_setfilter",ring_QDirModel_setFilter);
	RING_API_REGISTER("qdirmodel_seticonprovider",ring_QDirModel_setIconProvider);
	RING_API_REGISTER("qdirmodel_setlazychildcount",ring_QDirModel_setLazyChildCount);
	RING_API_REGISTER("qdirmodel_setnamefilters",ring_QDirModel_setNameFilters);
	RING_API_REGISTER("qdirmodel_setreadonly",ring_QDirModel_setReadOnly);
	RING_API_REGISTER("qdirmodel_setresolvesymlinks",ring_QDirModel_setResolveSymlinks);
	RING_API_REGISTER("qdirmodel_setsorting",ring_QDirModel_setSorting);
	RING_API_REGISTER("qdirmodel_sorting",ring_QDirModel_sorting);
	RING_API_REGISTER("qdirmodel_refresh",ring_QDirModel_refresh);
	RING_API_REGISTER("qfontdialog_currentfont",ring_QFontDialog_currentFont);
	RING_API_REGISTER("qfontdialog_open",ring_QFontDialog_open);
	RING_API_REGISTER("qfontdialog_options",ring_QFontDialog_options);
	RING_API_REGISTER("qfontdialog_selectedfont",ring_QFontDialog_selectedFont);
	RING_API_REGISTER("qfontdialog_setcurrentfont",ring_QFontDialog_setCurrentFont);
	RING_API_REGISTER("qfontdialog_setoption",ring_QFontDialog_setOption);
	RING_API_REGISTER("qfontdialog_setoptions",ring_QFontDialog_setOptions);
	RING_API_REGISTER("qfontdialog_testoption",ring_QFontDialog_testOption);
	RING_API_REGISTER("qfontdialog_getfont_2",ring_QFontDialog_getFont_2);
	RING_API_REGISTER("qfontdialog_getfont_3",ring_QFontDialog_getFont_3);
	RING_API_REGISTER("qfontdialog_setcurrentfontchangedevent",ring_QFontDialog_setcurrentFontChangedEvent);
	RING_API_REGISTER("qfontdialog_setfontselectedevent",ring_QFontDialog_setfontSelectedEvent);
	RING_API_REGISTER("qfontdialog_getcurrentfontchangedevent",ring_QFontDialog_getcurrentFontChangedEvent);
	RING_API_REGISTER("qfontdialog_getfontselectedevent",ring_QFontDialog_getfontSelectedEvent);
	RING_API_REGISTER("qfontdialog_getfont",ring_QFontDialog_getfont);
	RING_API_REGISTER("qdialog_issizegripenabled",ring_QDialog_isSizeGripEnabled);
	RING_API_REGISTER("qdialog_result",ring_QDialog_result);
	RING_API_REGISTER("qdialog_setmodal",ring_QDialog_setModal);
	RING_API_REGISTER("qdialog_setresult",ring_QDialog_setResult);
	RING_API_REGISTER("qdialog_setsizegripenabled",ring_QDialog_setSizeGripEnabled);
	RING_API_REGISTER("qdialog_accept",ring_QDialog_accept);
	RING_API_REGISTER("qdialog_done",ring_QDialog_done);
	RING_API_REGISTER("qdialog_exec",ring_QDialog_exec);
	RING_API_REGISTER("qdialog_open",ring_QDialog_open);
	RING_API_REGISTER("qdialog_reject",ring_QDialog_reject);
	RING_API_REGISTER("qcolordialog_currentcolor",ring_QColorDialog_currentColor);
	RING_API_REGISTER("qcolordialog_open",ring_QColorDialog_open);
	RING_API_REGISTER("qcolordialog_options",ring_QColorDialog_options);
	RING_API_REGISTER("qcolordialog_selectedcolor",ring_QColorDialog_selectedColor);
	RING_API_REGISTER("qcolordialog_setcurrentcolor",ring_QColorDialog_setCurrentColor);
	RING_API_REGISTER("qcolordialog_setoption",ring_QColorDialog_setOption);
	RING_API_REGISTER("qcolordialog_setoptions",ring_QColorDialog_setOptions);
	RING_API_REGISTER("qcolordialog_testoption",ring_QColorDialog_testOption);
	RING_API_REGISTER("qcolordialog_customcolor",ring_QColorDialog_customColor);
	RING_API_REGISTER("qcolordialog_customcount",ring_QColorDialog_customCount);
	RING_API_REGISTER("qcolordialog_getcolor_2",ring_QColorDialog_getColor_2);
	RING_API_REGISTER("qcolordialog_setcustomcolor",ring_QColorDialog_setCustomColor);
	RING_API_REGISTER("qcolordialog_setstandardcolor",ring_QColorDialog_setStandardColor);
	RING_API_REGISTER("qcolordialog_standardcolor",ring_QColorDialog_standardColor);
	RING_API_REGISTER("qcolordialog_setcolorselectedevent",ring_QColorDialog_setcolorSelectedEvent);
	RING_API_REGISTER("qcolordialog_setcurrentcolorchangedevent",ring_QColorDialog_setcurrentColorChangedEvent);
	RING_API_REGISTER("qcolordialog_getcolorselectedevent",ring_QColorDialog_getcolorSelectedEvent);
	RING_API_REGISTER("qcolordialog_getcurrentcolorchangedevent",ring_QColorDialog_getcurrentColorChangedEvent);
	RING_API_REGISTER("qcolordialog_getcolor",ring_QColorDialog_getcolor);
	RING_API_REGISTER("qlcdnumber_checkoverflow",ring_QLCDNumber_checkOverflow);
	RING_API_REGISTER("qlcdnumber_digitcount",ring_QLCDNumber_digitCount);
	RING_API_REGISTER("qlcdnumber_intvalue",ring_QLCDNumber_intValue);
	RING_API_REGISTER("qlcdnumber_mode",ring_QLCDNumber_mode);
	RING_API_REGISTER("qlcdnumber_segmentstyle",ring_QLCDNumber_segmentStyle);
	RING_API_REGISTER("qlcdnumber_setdigitcount",ring_QLCDNumber_setDigitCount);
	RING_API_REGISTER("qlcdnumber_setmode",ring_QLCDNumber_setMode);
	RING_API_REGISTER("qlcdnumber_setsegmentstyle",ring_QLCDNumber_setSegmentStyle);
	RING_API_REGISTER("qlcdnumber_smalldecimalpoint",ring_QLCDNumber_smallDecimalPoint);
	RING_API_REGISTER("qlcdnumber_value",ring_QLCDNumber_value);
	RING_API_REGISTER("qlcdnumber_display",ring_QLCDNumber_display);
	RING_API_REGISTER("qlcdnumber_setbinmode",ring_QLCDNumber_setBinMode);
	RING_API_REGISTER("qlcdnumber_setdecmode",ring_QLCDNumber_setDecMode);
	RING_API_REGISTER("qlcdnumber_sethexmode",ring_QLCDNumber_setHexMode);
	RING_API_REGISTER("qlcdnumber_setoctmode",ring_QLCDNumber_setOctMode);
	RING_API_REGISTER("qlcdnumber_setsmalldecimalpoint",ring_QLCDNumber_setSmallDecimalPoint);
	RING_API_REGISTER("qinputdialog_cancelbuttontext",ring_QInputDialog_cancelButtonText);
	RING_API_REGISTER("qinputdialog_comboboxitems",ring_QInputDialog_comboBoxItems);
	RING_API_REGISTER("qinputdialog_doubledecimals",ring_QInputDialog_doubleDecimals);
	RING_API_REGISTER("qinputdialog_doublemaximum",ring_QInputDialog_doubleMaximum);
	RING_API_REGISTER("qinputdialog_doubleminimum",ring_QInputDialog_doubleMinimum);
	RING_API_REGISTER("qinputdialog_doublevalue",ring_QInputDialog_doubleValue);
	RING_API_REGISTER("qinputdialog_inputmode",ring_QInputDialog_inputMode);
	RING_API_REGISTER("qinputdialog_intmaximum",ring_QInputDialog_intMaximum);
	RING_API_REGISTER("qinputdialog_intminimum",ring_QInputDialog_intMinimum);
	RING_API_REGISTER("qinputdialog_intstep",ring_QInputDialog_intStep);
	RING_API_REGISTER("qinputdialog_intvalue",ring_QInputDialog_intValue);
	RING_API_REGISTER("qinputdialog_iscomboboxeditable",ring_QInputDialog_isComboBoxEditable);
	RING_API_REGISTER("qinputdialog_labeltext",ring_QInputDialog_labelText);
	RING_API_REGISTER("qinputdialog_okbuttontext",ring_QInputDialog_okButtonText);
	RING_API_REGISTER("qinputdialog_open",ring_QInputDialog_open);
	RING_API_REGISTER("qinputdialog_options",ring_QInputDialog_options);
	RING_API_REGISTER("qinputdialog_setcancelbuttontext",ring_QInputDialog_setCancelButtonText);
	RING_API_REGISTER("qinputdialog_setcomboboxeditable",ring_QInputDialog_setComboBoxEditable);
	RING_API_REGISTER("qinputdialog_setcomboboxitems",ring_QInputDialog_setComboBoxItems);
	RING_API_REGISTER("qinputdialog_setdoubledecimals",ring_QInputDialog_setDoubleDecimals);
	RING_API_REGISTER("qinputdialog_setdoublemaximum",ring_QInputDialog_setDoubleMaximum);
	RING_API_REGISTER("qinputdialog_setdoubleminimum",ring_QInputDialog_setDoubleMinimum);
	RING_API_REGISTER("qinputdialog_setdoublerange",ring_QInputDialog_setDoubleRange);
	RING_API_REGISTER("qinputdialog_setdoublevalue",ring_QInputDialog_setDoubleValue);
	RING_API_REGISTER("qinputdialog_setinputmode",ring_QInputDialog_setInputMode);
	RING_API_REGISTER("qinputdialog_setintmaximum",ring_QInputDialog_setIntMaximum);
	RING_API_REGISTER("qinputdialog_setintminimum",ring_QInputDialog_setIntMinimum);
	RING_API_REGISTER("qinputdialog_setintrange",ring_QInputDialog_setIntRange);
	RING_API_REGISTER("qinputdialog_setintstep",ring_QInputDialog_setIntStep);
	RING_API_REGISTER("qinputdialog_setintvalue",ring_QInputDialog_setIntValue);
	RING_API_REGISTER("qinputdialog_setlabeltext",ring_QInputDialog_setLabelText);
	RING_API_REGISTER("qinputdialog_setokbuttontext",ring_QInputDialog_setOkButtonText);
	RING_API_REGISTER("qinputdialog_setoption",ring_QInputDialog_setOption);
	RING_API_REGISTER("qinputdialog_setoptions",ring_QInputDialog_setOptions);
	RING_API_REGISTER("qinputdialog_settextechomode",ring_QInputDialog_setTextEchoMode);
	RING_API_REGISTER("qinputdialog_settextvalue",ring_QInputDialog_setTextValue);
	RING_API_REGISTER("qinputdialog_testoption",ring_QInputDialog_testOption);
	RING_API_REGISTER("qinputdialog_textechomode",ring_QInputDialog_textEchoMode);
	RING_API_REGISTER("qinputdialog_textvalue",ring_QInputDialog_textValue);
	RING_API_REGISTER("qinputdialog_getdouble",ring_QInputDialog_getDouble);
	RING_API_REGISTER("qinputdialog_getint",ring_QInputDialog_getInt);
	RING_API_REGISTER("qallevents_accept",ring_QAllEvents_accept);
	RING_API_REGISTER("qallevents_ignore",ring_QAllEvents_ignore);
	RING_API_REGISTER("qallevents_getkeycode",ring_QAllEvents_getKeyCode);
	RING_API_REGISTER("qallevents_getkeytext",ring_QAllEvents_getKeyText);
	RING_API_REGISTER("qallevents_getmodifiers",ring_QAllEvents_getModifiers);
	RING_API_REGISTER("qallevents_getx",ring_QAllEvents_getx);
	RING_API_REGISTER("qallevents_gety",ring_QAllEvents_gety);
	RING_API_REGISTER("qallevents_getglobalx",ring_QAllEvents_getglobalx);
	RING_API_REGISTER("qallevents_getglobaly",ring_QAllEvents_getglobaly);
	RING_API_REGISTER("qallevents_getbutton",ring_QAllEvents_getbutton);
	RING_API_REGISTER("qallevents_getbuttons",ring_QAllEvents_getbuttons);
	RING_API_REGISTER("qallevents_setkeypressevent",ring_QAllEvents_setKeyPressEvent);
	RING_API_REGISTER("qallevents_setmousebuttonpressevent",ring_QAllEvents_setMouseButtonPressEvent);
	RING_API_REGISTER("qallevents_setmousebuttonreleaseevent",ring_QAllEvents_setMouseButtonReleaseEvent);
	RING_API_REGISTER("qallevents_setmousebuttondblclickevent",ring_QAllEvents_setMouseButtonDblClickEvent);
	RING_API_REGISTER("qallevents_setmousemoveevent",ring_QAllEvents_setMouseMoveEvent);
	RING_API_REGISTER("qallevents_setcloseevent",ring_QAllEvents_setCloseEvent);
	RING_API_REGISTER("qallevents_setcontextmenuevent",ring_QAllEvents_setContextMenuEvent);
	RING_API_REGISTER("qallevents_setdragenterevent",ring_QAllEvents_setDragEnterEvent);
	RING_API_REGISTER("qallevents_setdragleaveevent",ring_QAllEvents_setDragLeaveEvent);
	RING_API_REGISTER("qallevents_setdragmoveevent",ring_QAllEvents_setDragMoveEvent);
	RING_API_REGISTER("qallevents_setdropevent",ring_QAllEvents_setDropEvent);
	RING_API_REGISTER("qallevents_setenterevent",ring_QAllEvents_setEnterEvent);
	RING_API_REGISTER("qallevents_setfocusinevent",ring_QAllEvents_setFocusInEvent);
	RING_API_REGISTER("qallevents_setfocusoutevent",ring_QAllEvents_setFocusOutEvent);
	RING_API_REGISTER("qallevents_setkeyreleaseevent",ring_QAllEvents_setKeyReleaseEvent);
	RING_API_REGISTER("qallevents_setleaveevent",ring_QAllEvents_setLeaveEvent);
	RING_API_REGISTER("qallevents_setnonclientareamousebuttondblclickevent",ring_QAllEvents_setNonClientAreaMouseButtonDblClickEvent);
	RING_API_REGISTER("qallevents_setnonclientareamousebuttonpressevent",ring_QAllEvents_setNonClientAreaMouseButtonPressEvent);
	RING_API_REGISTER("qallevents_setnonclientareamousebuttonreleaseevent",ring_QAllEvents_setNonClientAreaMouseButtonReleaseEvent);
	RING_API_REGISTER("qallevents_setnonclientareamousemoveevent",ring_QAllEvents_setNonClientAreaMouseMoveEvent);
	RING_API_REGISTER("qallevents_setmoveevent",ring_QAllEvents_setMoveEvent);
	RING_API_REGISTER("qallevents_setresizeevent",ring_QAllEvents_setResizeEvent);
	RING_API_REGISTER("qallevents_setwindowactivateevent",ring_QAllEvents_setWindowActivateEvent);
	RING_API_REGISTER("qallevents_setwindowblockedevent",ring_QAllEvents_setWindowBlockedEvent);
	RING_API_REGISTER("qallevents_setwindowdeactivateevent",ring_QAllEvents_setWindowDeactivateEvent);
	RING_API_REGISTER("qallevents_setwindowstatechangeevent",ring_QAllEvents_setWindowStateChangeEvent);
	RING_API_REGISTER("qallevents_setwindowunblockedevent",ring_QAllEvents_setWindowUnblockedEvent);
	RING_API_REGISTER("qallevents_setpaintevent",ring_QAllEvents_setPaintEvent);
	RING_API_REGISTER("qallevents_setchildaddedevent",ring_QAllEvents_setChildAddedEvent);
	RING_API_REGISTER("qallevents_setchildpolishedevent",ring_QAllEvents_setChildPolishedEvent);
	RING_API_REGISTER("qallevents_setchildremovedevent",ring_QAllEvents_setChildRemovedEvent);
	RING_API_REGISTER("qallevents_getkeypressevent",ring_QAllEvents_getKeyPressEvent);
	RING_API_REGISTER("qallevents_getmousebuttonpressevent",ring_QAllEvents_getMouseButtonPressEvent);
	RING_API_REGISTER("qallevents_getmousebuttonreleaseevent",ring_QAllEvents_getMouseButtonReleaseEvent);
	RING_API_REGISTER("qallevents_getmousebuttondblclickevent",ring_QAllEvents_getMouseButtonDblClickEvent);
	RING_API_REGISTER("qallevents_getmousemoveevent",ring_QAllEvents_getMouseMoveEvent);
	RING_API_REGISTER("qallevents_getcloseevent",ring_QAllEvents_getCloseEvent);
	RING_API_REGISTER("qallevents_getcontextmenuevent",ring_QAllEvents_getContextMenuEvent);
	RING_API_REGISTER("qallevents_getdragenterevent",ring_QAllEvents_getDragEnterEvent);
	RING_API_REGISTER("qallevents_getdragleaveevent",ring_QAllEvents_getDragLeaveEvent);
	RING_API_REGISTER("qallevents_getdragmoveevent",ring_QAllEvents_getDragMoveEvent);
	RING_API_REGISTER("qallevents_getdropevent",ring_QAllEvents_getDropEvent);
	RING_API_REGISTER("qallevents_getenterevent",ring_QAllEvents_getEnterEvent);
	RING_API_REGISTER("qallevents_getfocusinevent",ring_QAllEvents_getFocusInEvent);
	RING_API_REGISTER("qallevents_getfocusoutevent",ring_QAllEvents_getFocusOutEvent);
	RING_API_REGISTER("qallevents_getkeyreleaseevent",ring_QAllEvents_getKeyReleaseEvent);
	RING_API_REGISTER("qallevents_getleaveevent",ring_QAllEvents_getLeaveEvent);
	RING_API_REGISTER("qallevents_getnonclientareamousebuttondblclickevent",ring_QAllEvents_getNonClientAreaMouseButtonDblClickEvent);
	RING_API_REGISTER("qallevents_getnonclientareamousebuttonpressevent",ring_QAllEvents_getNonClientAreaMouseButtonPressEvent);
	RING_API_REGISTER("qallevents_getnonclientareamousebuttonreleaseevent",ring_QAllEvents_getNonClientAreaMouseButtonReleaseEvent);
	RING_API_REGISTER("qallevents_getnonclientareamousemoveevent",ring_QAllEvents_getNonClientAreaMouseMoveEvent);
	RING_API_REGISTER("qallevents_getmoveevent",ring_QAllEvents_getMoveEvent);
	RING_API_REGISTER("qallevents_getresizeevent",ring_QAllEvents_getResizeEvent);
	RING_API_REGISTER("qallevents_getwindowactivateevent",ring_QAllEvents_getWindowActivateEvent);
	RING_API_REGISTER("qallevents_getwindowblockedevent",ring_QAllEvents_getWindowBlockedEvent);
	RING_API_REGISTER("qallevents_getwindowdeactivateevent",ring_QAllEvents_getWindowDeactivateEvent);
	RING_API_REGISTER("qallevents_getwindowstatechangeevent",ring_QAllEvents_getWindowStateChangeEvent);
	RING_API_REGISTER("qallevents_getwindowunblockedevent",ring_QAllEvents_getWindowUnblockedEvent);
	RING_API_REGISTER("qallevents_getpaintevent",ring_QAllEvents_getPaintEvent);
	RING_API_REGISTER("qallevents_getchildaddedevent",ring_QAllEvents_getChildAddedEvent);
	RING_API_REGISTER("qallevents_getchildpolishedevent",ring_QAllEvents_getChildPolishedEvent);
	RING_API_REGISTER("qallevents_getchildremovedevent",ring_QAllEvents_getChildRemovedEvent);
	RING_API_REGISTER("qallevents_seteventoutput",ring_QAllEvents_setEventOutput);
	RING_API_REGISTER("qallevents_getparentobject",ring_QAllEvents_getParentObject);
	RING_API_REGISTER("qallevents_getparentwidget",ring_QAllEvents_getParentWidget);
	RING_API_REGISTER("qallevents_setkeypressfunc",ring_QAllEvents_setKeyPressFunc);
	RING_API_REGISTER("qallevents_setmousebuttonpressfunc",ring_QAllEvents_setMouseButtonPressFunc);
	RING_API_REGISTER("qallevents_setmousebuttonreleasefunc",ring_QAllEvents_setMouseButtonReleaseFunc);
	RING_API_REGISTER("qallevents_setmousebuttondblclickfunc",ring_QAllEvents_setMouseButtonDblClickFunc);
	RING_API_REGISTER("qallevents_setmousemovefunc",ring_QAllEvents_setMouseMoveFunc);
	RING_API_REGISTER("qallevents_setclosefunc",ring_QAllEvents_setCloseFunc);
	RING_API_REGISTER("qallevents_setcontextmenufunc",ring_QAllEvents_setContextMenuFunc);
	RING_API_REGISTER("qallevents_setdragenterfunc",ring_QAllEvents_setDragEnterFunc);
	RING_API_REGISTER("qallevents_setdragleavefunc",ring_QAllEvents_setDragLeaveFunc);
	RING_API_REGISTER("qallevents_setdragmovefunc",ring_QAllEvents_setDragMoveFunc);
	RING_API_REGISTER("qallevents_setdropfunc",ring_QAllEvents_setDropFunc);
	RING_API_REGISTER("qallevents_setenterfunc",ring_QAllEvents_setEnterFunc);
	RING_API_REGISTER("qallevents_setfocusinfunc",ring_QAllEvents_setFocusInFunc);
	RING_API_REGISTER("qallevents_setfocusoutfunc",ring_QAllEvents_setFocusOutFunc);
	RING_API_REGISTER("qallevents_setkeyreleasefunc",ring_QAllEvents_setKeyReleaseFunc);
	RING_API_REGISTER("qallevents_setleavefunc",ring_QAllEvents_setLeaveFunc);
	RING_API_REGISTER("qallevents_setnonclientareamousebuttondblclickfunc",ring_QAllEvents_setNonClientAreaMouseButtonDblClickFunc);
	RING_API_REGISTER("qallevents_setnonclientareamousebuttonpressfunc",ring_QAllEvents_setNonClientAreaMouseButtonPressFunc);
	RING_API_REGISTER("qallevents_setnonclientareamousebuttonreleasefunc",ring_QAllEvents_setNonClientAreaMouseButtonReleaseFunc);
	RING_API_REGISTER("qallevents_setnonclientareamousemovefunc",ring_QAllEvents_setNonClientAreaMouseMoveFunc);
	RING_API_REGISTER("qallevents_setmovefunc",ring_QAllEvents_setMoveFunc);
	RING_API_REGISTER("qallevents_setresizefunc",ring_QAllEvents_setResizeFunc);
	RING_API_REGISTER("qallevents_setwindowactivatefunc",ring_QAllEvents_setWindowActivateFunc);
	RING_API_REGISTER("qallevents_setwindowblockedfunc",ring_QAllEvents_setWindowBlockedFunc);
	RING_API_REGISTER("qallevents_setwindowdeactivatefunc",ring_QAllEvents_setWindowDeactivateFunc);
	RING_API_REGISTER("qallevents_setwindowstatechangefunc",ring_QAllEvents_setWindowStateChangeFunc);
	RING_API_REGISTER("qallevents_setwindowunblockedfunc",ring_QAllEvents_setWindowUnblockedFunc);
	RING_API_REGISTER("qallevents_setpaintfunc",ring_QAllEvents_setPaintFunc);
	RING_API_REGISTER("qallevents_setchildaddedfunc",ring_QAllEvents_setChildAddedFunc);
	RING_API_REGISTER("qallevents_setchildpolishedfunc",ring_QAllEvents_setChildPolishedFunc);
	RING_API_REGISTER("qallevents_setchildremovedfunc",ring_QAllEvents_setChildRemovedFunc);
	RING_API_REGISTER("qallevents_getkeypressfunc",ring_QAllEvents_getKeyPressFunc);
	RING_API_REGISTER("qallevents_getmousebuttonpressfunc",ring_QAllEvents_getMouseButtonPressFunc);
	RING_API_REGISTER("qallevents_getmousebuttonreleasefunc",ring_QAllEvents_getMouseButtonReleaseFunc);
	RING_API_REGISTER("qallevents_getmousebuttondblclickfunc",ring_QAllEvents_getMouseButtonDblClickFunc);
	RING_API_REGISTER("qallevents_getmousemovefunc",ring_QAllEvents_getMouseMoveFunc);
	RING_API_REGISTER("qallevents_getclosefunc",ring_QAllEvents_getCloseFunc);
	RING_API_REGISTER("qallevents_getcontextmenufunc",ring_QAllEvents_getContextMenuFunc);
	RING_API_REGISTER("qallevents_getdragenterfunc",ring_QAllEvents_getDragEnterFunc);
	RING_API_REGISTER("qallevents_getdragleavefunc",ring_QAllEvents_getDragLeaveFunc);
	RING_API_REGISTER("qallevents_getdragmovefunc",ring_QAllEvents_getDragMoveFunc);
	RING_API_REGISTER("qallevents_getdropfunc",ring_QAllEvents_getDropFunc);
	RING_API_REGISTER("qallevents_getenterfunc",ring_QAllEvents_getEnterFunc);
	RING_API_REGISTER("qallevents_getfocusinfunc",ring_QAllEvents_getFocusInFunc);
	RING_API_REGISTER("qallevents_getfocusoutfunc",ring_QAllEvents_getFocusOutFunc);
	RING_API_REGISTER("qallevents_getkeyreleasefunc",ring_QAllEvents_getKeyReleaseFunc);
	RING_API_REGISTER("qallevents_getleavefunc",ring_QAllEvents_getLeaveFunc);
	RING_API_REGISTER("qallevents_getnonclientareamousebuttondblclickfunc",ring_QAllEvents_getNonClientAreaMouseButtonDblClickFunc);
	RING_API_REGISTER("qallevents_getnonclientareamousebuttonpressfunc",ring_QAllEvents_getNonClientAreaMouseButtonPressFunc);
	RING_API_REGISTER("qallevents_getnonclientareamousebuttonreleasefunc",ring_QAllEvents_getNonClientAreaMouseButtonReleaseFunc);
	RING_API_REGISTER("qallevents_getnonclientareamousemovefunc",ring_QAllEvents_getNonClientAreaMouseMoveFunc);
	RING_API_REGISTER("qallevents_getmovefunc",ring_QAllEvents_getMoveFunc);
	RING_API_REGISTER("qallevents_getresizefunc",ring_QAllEvents_getResizeFunc);
	RING_API_REGISTER("qallevents_getwindowactivatefunc",ring_QAllEvents_getWindowActivateFunc);
	RING_API_REGISTER("qallevents_getwindowblockedfunc",ring_QAllEvents_getWindowBlockedFunc);
	RING_API_REGISTER("qallevents_getwindowdeactivatefunc",ring_QAllEvents_getWindowDeactivateFunc);
	RING_API_REGISTER("qallevents_getwindowstatechangefunc",ring_QAllEvents_getWindowStateChangeFunc);
	RING_API_REGISTER("qallevents_getwindowunblockedfunc",ring_QAllEvents_getWindowUnblockedFunc);
	RING_API_REGISTER("qallevents_getpaintfunc",ring_QAllEvents_getPaintFunc);
	RING_API_REGISTER("qallevents_getchildaddedfunc",ring_QAllEvents_getChildAddedFunc);
	RING_API_REGISTER("qallevents_getchildpolishedfunc",ring_QAllEvents_getChildPolishedFunc);
	RING_API_REGISTER("qallevents_getchildremovedfunc",ring_QAllEvents_getChildRemovedFunc);
	RING_API_REGISTER("qallevents_getdropeventobject",ring_QAllEvents_getDropEventObject);
	RING_API_REGISTER("qallevents_getdragmoveeventobject",ring_QAllEvents_getDragMoveEventObject);
	RING_API_REGISTER("qallevents_getdragentereventobject",ring_QAllEvents_getDragEnterEventObject);
	RING_API_REGISTER("qallevents_getdragleaveeventobject",ring_QAllEvents_getDragLeaveEventObject);
	RING_API_REGISTER("qallevents_getchildeventobject",ring_QAllEvents_getChildEventObject);
	RING_API_REGISTER("qdesktopwidget_isvirtualdesktop",ring_QDesktopWidget_isVirtualDesktop);
	RING_API_REGISTER("qdesktopwidget_primaryscreen",ring_QDesktopWidget_primaryScreen);
	RING_API_REGISTER("qdesktopwidget_screencount",ring_QDesktopWidget_screenCount);
	RING_API_REGISTER("qdesktopwidget_availablegeometry",ring_QDesktopWidget_availableGeometry);
	RING_API_REGISTER("qdesktopwidget_screen",ring_QDesktopWidget_screen);
	RING_API_REGISTER("qdesktopwidget_screengeometry",ring_QDesktopWidget_screenGeometry);
	RING_API_REGISTER("qdesktopwidget_screennumber",ring_QDesktopWidget_screenNumber);
	RING_API_REGISTER("qlistwidgetitem_background",ring_QListWidgetItem_background);
	RING_API_REGISTER("qlistwidgetitem_checkstate",ring_QListWidgetItem_checkState);
	RING_API_REGISTER("qlistwidgetitem_flags",ring_QListWidgetItem_flags);
	RING_API_REGISTER("qlistwidgetitem_font",ring_QListWidgetItem_font);
	RING_API_REGISTER("qlistwidgetitem_foreground",ring_QListWidgetItem_foreground);
	RING_API_REGISTER("qlistwidgetitem_icon",ring_QListWidgetItem_icon);
	RING_API_REGISTER("qlistwidgetitem_ishidden",ring_QListWidgetItem_isHidden);
	RING_API_REGISTER("qlistwidgetitem_isselected",ring_QListWidgetItem_isSelected);
	RING_API_REGISTER("qlistwidgetitem_listwidget",ring_QListWidgetItem_listWidget);
	RING_API_REGISTER("qlistwidgetitem_setbackground",ring_QListWidgetItem_setBackground);
	RING_API_REGISTER("qlistwidgetitem_setcheckstate",ring_QListWidgetItem_setCheckState);
	RING_API_REGISTER("qlistwidgetitem_setflags",ring_QListWidgetItem_setFlags);
	RING_API_REGISTER("qlistwidgetitem_setfont",ring_QListWidgetItem_setFont);
	RING_API_REGISTER("qlistwidgetitem_setforeground",ring_QListWidgetItem_setForeground);
	RING_API_REGISTER("qlistwidgetitem_sethidden",ring_QListWidgetItem_setHidden);
	RING_API_REGISTER("qlistwidgetitem_seticon",ring_QListWidgetItem_setIcon);
	RING_API_REGISTER("qlistwidgetitem_setselected",ring_QListWidgetItem_setSelected);
	RING_API_REGISTER("qlistwidgetitem_setsizehint",ring_QListWidgetItem_setSizeHint);
	RING_API_REGISTER("qlistwidgetitem_setstatustip",ring_QListWidgetItem_setStatusTip);
	RING_API_REGISTER("qlistwidgetitem_settext",ring_QListWidgetItem_setText);
	RING_API_REGISTER("qlistwidgetitem_settextalignment",ring_QListWidgetItem_setTextAlignment);
	RING_API_REGISTER("qlistwidgetitem_settooltip",ring_QListWidgetItem_setToolTip);
	RING_API_REGISTER("qlistwidgetitem_setwhatsthis",ring_QListWidgetItem_setWhatsThis);
	RING_API_REGISTER("qlistwidgetitem_sizehint",ring_QListWidgetItem_sizeHint);
	RING_API_REGISTER("qlistwidgetitem_statustip",ring_QListWidgetItem_statusTip);
	RING_API_REGISTER("qlistwidgetitem_text",ring_QListWidgetItem_text);
	RING_API_REGISTER("qlistwidgetitem_textalignment",ring_QListWidgetItem_textAlignment);
	RING_API_REGISTER("qlistwidgetitem_tooltip",ring_QListWidgetItem_toolTip);
	RING_API_REGISTER("qlistwidgetitem_type",ring_QListWidgetItem_type);
	RING_API_REGISTER("qlistwidgetitem_whatsthis",ring_QListWidgetItem_whatsThis);
	RING_API_REGISTER("qsystemtrayicon_contextmenu",ring_QSystemTrayIcon_contextMenu);
	RING_API_REGISTER("qsystemtrayicon_geometry",ring_QSystemTrayIcon_geometry);
	RING_API_REGISTER("qsystemtrayicon_icon",ring_QSystemTrayIcon_icon);
	RING_API_REGISTER("qsystemtrayicon_isvisible",ring_QSystemTrayIcon_isVisible);
	RING_API_REGISTER("qsystemtrayicon_setcontextmenu",ring_QSystemTrayIcon_setContextMenu);
	RING_API_REGISTER("qsystemtrayicon_seticon",ring_QSystemTrayIcon_setIcon);
	RING_API_REGISTER("qsystemtrayicon_settooltip",ring_QSystemTrayIcon_setToolTip);
	RING_API_REGISTER("qsystemtrayicon_tooltip",ring_QSystemTrayIcon_toolTip);
	RING_API_REGISTER("qsystemtrayicon_hide",ring_QSystemTrayIcon_hide);
	RING_API_REGISTER("qsystemtrayicon_setvisible",ring_QSystemTrayIcon_setVisible);
	RING_API_REGISTER("qsystemtrayicon_show",ring_QSystemTrayIcon_show);
	RING_API_REGISTER("qsystemtrayicon_showmessage",ring_QSystemTrayIcon_showMessage);
	RING_API_REGISTER("qsystemtrayicon_issystemtrayavailable",ring_QSystemTrayIcon_isSystemTrayAvailable);
	RING_API_REGISTER("qsystemtrayicon_supportsmessages",ring_QSystemTrayIcon_supportsMessages);
	RING_API_REGISTER("ringcodehighlighter_setcolors",ring_RingCodeHighlighter_setColors);
	RING_API_REGISTER("ringcodehighlighter_setkeywordsbold",ring_RingCodeHighlighter_setKeywordsBold);
	RING_API_REGISTER("qplaintextedit_settabstopwidth",ring_QPlainTextEdit_setTabStopWidth);
	RING_API_REGISTER("qplaintextedit_tabstopwidth",ring_QPlainTextEdit_tabStopWidth);
	RING_API_REGISTER("qplaintextedit_settabstopdistance",ring_QPlainTextEdit_setTabStopDistance);
	RING_API_REGISTER("qplaintextedit_tabstopdistance",ring_QPlainTextEdit_tabStopDistance);
	RING_API_REGISTER("qplaintextedit_anchorat",ring_QPlainTextEdit_anchorAt);
	RING_API_REGISTER("qplaintextedit_backgroundvisible",ring_QPlainTextEdit_backgroundVisible);
	RING_API_REGISTER("qplaintextedit_blockcount",ring_QPlainTextEdit_blockCount);
	RING_API_REGISTER("qplaintextedit_canpaste",ring_QPlainTextEdit_canPaste);
	RING_API_REGISTER("qplaintextedit_centeronscroll",ring_QPlainTextEdit_centerOnScroll);
	RING_API_REGISTER("qplaintextedit_createstandardcontextmenu",ring_QPlainTextEdit_createStandardContextMenu);
	RING_API_REGISTER("qplaintextedit_currentcharformat",ring_QPlainTextEdit_currentCharFormat);
	RING_API_REGISTER("qplaintextedit_cursorforposition",ring_QPlainTextEdit_cursorForPosition);
	RING_API_REGISTER("qplaintextedit_cursorrect",ring_QPlainTextEdit_cursorRect);
	RING_API_REGISTER("qplaintextedit_cursorrect_2",ring_QPlainTextEdit_cursorRect_2);
	RING_API_REGISTER("qplaintextedit_cursorwidth",ring_QPlainTextEdit_cursorWidth);
	RING_API_REGISTER("qplaintextedit_document",ring_QPlainTextEdit_document);
	RING_API_REGISTER("qplaintextedit_documenttitle",ring_QPlainTextEdit_documentTitle);
	RING_API_REGISTER("qplaintextedit_ensurecursorvisible",ring_QPlainTextEdit_ensureCursorVisible);
	RING_API_REGISTER("qplaintextedit_extraselections",ring_QPlainTextEdit_extraSelections);
	RING_API_REGISTER("qplaintextedit_find",ring_QPlainTextEdit_find);
	RING_API_REGISTER("qplaintextedit_isreadonly",ring_QPlainTextEdit_isReadOnly);
	RING_API_REGISTER("qplaintextedit_isundoredoenabled",ring_QPlainTextEdit_isUndoRedoEnabled);
	RING_API_REGISTER("qplaintextedit_linewrapmode",ring_QPlainTextEdit_lineWrapMode);
	RING_API_REGISTER("qplaintextedit_maximumblockcount",ring_QPlainTextEdit_maximumBlockCount);
	RING_API_REGISTER("qplaintextedit_mergecurrentcharformat",ring_QPlainTextEdit_mergeCurrentCharFormat);
	RING_API_REGISTER("qplaintextedit_movecursor",ring_QPlainTextEdit_moveCursor);
	RING_API_REGISTER("qplaintextedit_overwritemode",ring_QPlainTextEdit_overwriteMode);
	RING_API_REGISTER("qplaintextedit_print",ring_QPlainTextEdit_print);
	RING_API_REGISTER("qplaintextedit_setbackgroundvisible",ring_QPlainTextEdit_setBackgroundVisible);
	RING_API_REGISTER("qplaintextedit_setcenteronscroll",ring_QPlainTextEdit_setCenterOnScroll);
	RING_API_REGISTER("qplaintextedit_setcurrentcharformat",ring_QPlainTextEdit_setCurrentCharFormat);
	RING_API_REGISTER("qplaintextedit_setcursorwidth",ring_QPlainTextEdit_setCursorWidth);
	RING_API_REGISTER("qplaintextedit_setdocument",ring_QPlainTextEdit_setDocument);
	RING_API_REGISTER("qplaintextedit_setdocumenttitle",ring_QPlainTextEdit_setDocumentTitle);
	RING_API_REGISTER("qplaintextedit_setextraselections",ring_QPlainTextEdit_setExtraSelections);
	RING_API_REGISTER("qplaintextedit_setlinewrapmode",ring_QPlainTextEdit_setLineWrapMode);
	RING_API_REGISTER("qplaintextedit_setmaximumblockcount",ring_QPlainTextEdit_setMaximumBlockCount);
	RING_API_REGISTER("qplaintextedit_setoverwritemode",ring_QPlainTextEdit_setOverwriteMode);
	RING_API_REGISTER("qplaintextedit_setreadonly",ring_QPlainTextEdit_setReadOnly);
	RING_API_REGISTER("qplaintextedit_settabchangesfocus",ring_QPlainTextEdit_setTabChangesFocus);
	RING_API_REGISTER("qplaintextedit_settextcursor",ring_QPlainTextEdit_setTextCursor);
	RING_API_REGISTER("qplaintextedit_settextinteractionflags",ring_QPlainTextEdit_setTextInteractionFlags);
	RING_API_REGISTER("qplaintextedit_setundoredoenabled",ring_QPlainTextEdit_setUndoRedoEnabled);
	RING_API_REGISTER("qplaintextedit_setwordwrapmode",ring_QPlainTextEdit_setWordWrapMode);
	RING_API_REGISTER("qplaintextedit_tabchangesfocus",ring_QPlainTextEdit_tabChangesFocus);
	RING_API_REGISTER("qplaintextedit_textcursor",ring_QPlainTextEdit_textCursor);
	RING_API_REGISTER("qplaintextedit_textinteractionflags",ring_QPlainTextEdit_textInteractionFlags);
	RING_API_REGISTER("qplaintextedit_toplaintext",ring_QPlainTextEdit_toPlainText);
	RING_API_REGISTER("qplaintextedit_wordwrapmode",ring_QPlainTextEdit_wordWrapMode);
	RING_API_REGISTER("qplaintextedit_appendhtml",ring_QPlainTextEdit_appendHtml);
	RING_API_REGISTER("qplaintextedit_appendplaintext",ring_QPlainTextEdit_appendPlainText);
	RING_API_REGISTER("qplaintextedit_centercursor",ring_QPlainTextEdit_centerCursor);
	RING_API_REGISTER("qplaintextedit_clear",ring_QPlainTextEdit_clear);
	RING_API_REGISTER("qplaintextedit_copy",ring_QPlainTextEdit_copy);
	RING_API_REGISTER("qplaintextedit_cut",ring_QPlainTextEdit_cut);
	RING_API_REGISTER("qplaintextedit_insertplaintext",ring_QPlainTextEdit_insertPlainText);
	RING_API_REGISTER("qplaintextedit_paste",ring_QPlainTextEdit_paste);
	RING_API_REGISTER("qplaintextedit_redo",ring_QPlainTextEdit_redo);
	RING_API_REGISTER("qplaintextedit_selectall",ring_QPlainTextEdit_selectAll);
	RING_API_REGISTER("qplaintextedit_setplaintext",ring_QPlainTextEdit_setPlainText);
	RING_API_REGISTER("qplaintextedit_undo",ring_QPlainTextEdit_undo);
	RING_API_REGISTER("qplaintextedit_zoomin",ring_QPlainTextEdit_zoomIn);
	RING_API_REGISTER("qplaintextedit_zoomout",ring_QPlainTextEdit_zoomOut);
	RING_API_REGISTER("qplaintextedit_setblockcountchangedevent",ring_QPlainTextEdit_setblockCountChangedEvent);
	RING_API_REGISTER("qplaintextedit_setcopyavailableevent",ring_QPlainTextEdit_setcopyAvailableEvent);
	RING_API_REGISTER("qplaintextedit_setcursorpositionchangedevent",ring_QPlainTextEdit_setcursorPositionChangedEvent);
	RING_API_REGISTER("qplaintextedit_setmodificationchangedevent",ring_QPlainTextEdit_setmodificationChangedEvent);
	RING_API_REGISTER("qplaintextedit_setredoavailableevent",ring_QPlainTextEdit_setredoAvailableEvent);
	RING_API_REGISTER("qplaintextedit_setselectionchangedevent",ring_QPlainTextEdit_setselectionChangedEvent);
	RING_API_REGISTER("qplaintextedit_settextchangedevent",ring_QPlainTextEdit_settextChangedEvent);
	RING_API_REGISTER("qplaintextedit_setundoavailableevent",ring_QPlainTextEdit_setundoAvailableEvent);
	RING_API_REGISTER("qplaintextedit_setupdaterequestevent",ring_QPlainTextEdit_setupdateRequestEvent);
	RING_API_REGISTER("qplaintextedit_getblockcountchangedevent",ring_QPlainTextEdit_getblockCountChangedEvent);
	RING_API_REGISTER("qplaintextedit_getcopyavailableevent",ring_QPlainTextEdit_getcopyAvailableEvent);
	RING_API_REGISTER("qplaintextedit_getcursorpositionchangedevent",ring_QPlainTextEdit_getcursorPositionChangedEvent);
	RING_API_REGISTER("qplaintextedit_getmodificationchangedevent",ring_QPlainTextEdit_getmodificationChangedEvent);
	RING_API_REGISTER("qplaintextedit_getredoavailableevent",ring_QPlainTextEdit_getredoAvailableEvent);
	RING_API_REGISTER("qplaintextedit_getselectionchangedevent",ring_QPlainTextEdit_getselectionChangedEvent);
	RING_API_REGISTER("qplaintextedit_gettextchangedevent",ring_QPlainTextEdit_gettextChangedEvent);
	RING_API_REGISTER("qplaintextedit_getundoavailableevent",ring_QPlainTextEdit_getundoAvailableEvent);
	RING_API_REGISTER("qplaintextedit_getupdaterequestevent",ring_QPlainTextEdit_getupdateRequestEvent);
	RING_API_REGISTER("qplaintextedit_cyanline",ring_QPlainTextEdit_cyanline);
	RING_API_REGISTER("qplaintextedit_setactivelinecolor",ring_QPlainTextEdit_setactivelinecolor);
	RING_API_REGISTER("codeeditor_setcompleter",ring_CodeEditor_setCompleter);
	RING_API_REGISTER("codeeditor_completer",ring_CodeEditor_completer);
	RING_API_REGISTER("codeeditor_setlinenumbersareacolor",ring_CodeEditor_setLineNumbersAreaColor);
	RING_API_REGISTER("codeeditor_setlinenumbersareabackcolor",ring_CodeEditor_setLineNumbersAreaBackColor);
	RING_API_REGISTER("qgridlayout_additem",ring_QGridLayout_addItem);
	RING_API_REGISTER("qgridlayout_addlayout",ring_QGridLayout_addLayout);
	RING_API_REGISTER("qgridlayout_addlayout_2",ring_QGridLayout_addLayout_2);
	RING_API_REGISTER("qgridlayout_addwidget",ring_QGridLayout_addWidget);
	RING_API_REGISTER("qgridlayout_addwidget_2",ring_QGridLayout_addWidget_2);
	RING_API_REGISTER("qgridlayout_cellrect",ring_QGridLayout_cellRect);
	RING_API_REGISTER("qgridlayout_columncount",ring_QGridLayout_columnCount);
	RING_API_REGISTER("qgridlayout_columnminimumwidth",ring_QGridLayout_columnMinimumWidth);
	RING_API_REGISTER("qgridlayout_columnstretch",ring_QGridLayout_columnStretch);
	RING_API_REGISTER("qgridlayout_getitemposition",ring_QGridLayout_getItemPosition);
	RING_API_REGISTER("qgridlayout_horizontalspacing",ring_QGridLayout_horizontalSpacing);
	RING_API_REGISTER("qgridlayout_itematposition",ring_QGridLayout_itemAtPosition);
	RING_API_REGISTER("qgridlayout_origincorner",ring_QGridLayout_originCorner);
	RING_API_REGISTER("qgridlayout_rowcount",ring_QGridLayout_rowCount);
	RING_API_REGISTER("qgridlayout_rowminimumheight",ring_QGridLayout_rowMinimumHeight);
	RING_API_REGISTER("qgridlayout_rowstretch",ring_QGridLayout_rowStretch);
	RING_API_REGISTER("qgridlayout_setcolumnminimumwidth",ring_QGridLayout_setColumnMinimumWidth);
	RING_API_REGISTER("qgridlayout_setcolumnstretch",ring_QGridLayout_setColumnStretch);
	RING_API_REGISTER("qgridlayout_sethorizontalspacing",ring_QGridLayout_setHorizontalSpacing);
	RING_API_REGISTER("qgridlayout_setorigincorner",ring_QGridLayout_setOriginCorner);
	RING_API_REGISTER("qgridlayout_setrowminimumheight",ring_QGridLayout_setRowMinimumHeight);
	RING_API_REGISTER("qgridlayout_setrowstretch",ring_QGridLayout_setRowStretch);
	RING_API_REGISTER("qgridlayout_setspacing",ring_QGridLayout_setSpacing);
	RING_API_REGISTER("qgridlayout_setverticalspacing",ring_QGridLayout_setVerticalSpacing);
	RING_API_REGISTER("qgridlayout_spacing",ring_QGridLayout_spacing);
	RING_API_REGISTER("qgridlayout_verticalspacing",ring_QGridLayout_verticalSpacing);
	RING_API_REGISTER("qheaderview_cascadingsectionresizes",ring_QHeaderView_cascadingSectionResizes);
	RING_API_REGISTER("qheaderview_count",ring_QHeaderView_count);
	RING_API_REGISTER("qheaderview_defaultalignment",ring_QHeaderView_defaultAlignment);
	RING_API_REGISTER("qheaderview_defaultsectionsize",ring_QHeaderView_defaultSectionSize);
	RING_API_REGISTER("qheaderview_hiddensectioncount",ring_QHeaderView_hiddenSectionCount);
	RING_API_REGISTER("qheaderview_hidesection",ring_QHeaderView_hideSection);
	RING_API_REGISTER("qheaderview_highlightsections",ring_QHeaderView_highlightSections);
	RING_API_REGISTER("qheaderview_issectionhidden",ring_QHeaderView_isSectionHidden);
	RING_API_REGISTER("qheaderview_issortindicatorshown",ring_QHeaderView_isSortIndicatorShown);
	RING_API_REGISTER("qheaderview_length",ring_QHeaderView_length);
	RING_API_REGISTER("qheaderview_logicalindex",ring_QHeaderView_logicalIndex);
	RING_API_REGISTER("qheaderview_logicalindexat",ring_QHeaderView_logicalIndexAt);
	RING_API_REGISTER("qheaderview_logicalindexat_2",ring_QHeaderView_logicalIndexAt_2);
	RING_API_REGISTER("qheaderview_logicalindexat_3",ring_QHeaderView_logicalIndexAt_3);
	RING_API_REGISTER("qheaderview_maximumsectionsize",ring_QHeaderView_maximumSectionSize);
	RING_API_REGISTER("qheaderview_minimumsectionsize_2",ring_QHeaderView_minimumSectionSize_2);
	RING_API_REGISTER("qheaderview_movesection",ring_QHeaderView_moveSection);
	RING_API_REGISTER("qheaderview_offset",ring_QHeaderView_offset);
	RING_API_REGISTER("qheaderview_orientation",ring_QHeaderView_orientation);
	RING_API_REGISTER("qheaderview_resizecontentsprecision",ring_QHeaderView_resizeContentsPrecision);
	RING_API_REGISTER("qheaderview_resizesection",ring_QHeaderView_resizeSection);
	RING_API_REGISTER("qheaderview_resizesections",ring_QHeaderView_resizeSections);
	RING_API_REGISTER("qheaderview_restorestate",ring_QHeaderView_restoreState);
	RING_API_REGISTER("qheaderview_savestate",ring_QHeaderView_saveState);
	RING_API_REGISTER("qheaderview_sectionposition",ring_QHeaderView_sectionPosition);
	RING_API_REGISTER("qheaderview_sectionresizemode",ring_QHeaderView_sectionResizeMode);
	RING_API_REGISTER("qheaderview_sectionsize",ring_QHeaderView_sectionSize);
	RING_API_REGISTER("qheaderview_sectionsizehint",ring_QHeaderView_sectionSizeHint);
	RING_API_REGISTER("qheaderview_sectionviewportposition",ring_QHeaderView_sectionViewportPosition);
	RING_API_REGISTER("qheaderview_sectionsclickable",ring_QHeaderView_sectionsClickable);
	RING_API_REGISTER("qheaderview_sectionshidden",ring_QHeaderView_sectionsHidden);
	RING_API_REGISTER("qheaderview_sectionsmovable",ring_QHeaderView_sectionsMovable);
	RING_API_REGISTER("qheaderview_sectionsmoved",ring_QHeaderView_sectionsMoved);
	RING_API_REGISTER("qheaderview_setcascadingsectionresizes",ring_QHeaderView_setCascadingSectionResizes);
	RING_API_REGISTER("qheaderview_setdefaultalignment",ring_QHeaderView_setDefaultAlignment);
	RING_API_REGISTER("qheaderview_setdefaultsectionsize",ring_QHeaderView_setDefaultSectionSize);
	RING_API_REGISTER("qheaderview_sethighlightsections",ring_QHeaderView_setHighlightSections);
	RING_API_REGISTER("qheaderview_setmaximumsectionsize",ring_QHeaderView_setMaximumSectionSize);
	RING_API_REGISTER("qheaderview_setminimumsectionsize",ring_QHeaderView_setMinimumSectionSize);
	RING_API_REGISTER("qheaderview_setresizecontentsprecision",ring_QHeaderView_setResizeContentsPrecision);
	RING_API_REGISTER("qheaderview_setsectionhidden",ring_QHeaderView_setSectionHidden);
	RING_API_REGISTER("qheaderview_setsectionresizemode",ring_QHeaderView_setSectionResizeMode);
	RING_API_REGISTER("qheaderview_setsectionresizemode_2",ring_QHeaderView_setSectionResizeMode_2);
	RING_API_REGISTER("qheaderview_setsectionsclickable",ring_QHeaderView_setSectionsClickable);
	RING_API_REGISTER("qheaderview_setsectionsmovable",ring_QHeaderView_setSectionsMovable);
	RING_API_REGISTER("qheaderview_setsortindicator",ring_QHeaderView_setSortIndicator);
	RING_API_REGISTER("qheaderview_setsortindicatorshown",ring_QHeaderView_setSortIndicatorShown);
	RING_API_REGISTER("qheaderview_setstretchlastsection",ring_QHeaderView_setStretchLastSection);
	RING_API_REGISTER("qheaderview_showsection",ring_QHeaderView_showSection);
	RING_API_REGISTER("qheaderview_sortindicatororder",ring_QHeaderView_sortIndicatorOrder);
	RING_API_REGISTER("qheaderview_sortindicatorsection",ring_QHeaderView_sortIndicatorSection);
	RING_API_REGISTER("qheaderview_stretchlastsection",ring_QHeaderView_stretchLastSection);
	RING_API_REGISTER("qheaderview_stretchsectioncount",ring_QHeaderView_stretchSectionCount);
	RING_API_REGISTER("qheaderview_swapsections",ring_QHeaderView_swapSections);
	RING_API_REGISTER("qheaderview_visualindex",ring_QHeaderView_visualIndex);
	RING_API_REGISTER("qheaderview_visualindexat",ring_QHeaderView_visualIndexAt);
	RING_API_REGISTER("qheaderview_headerdatachanged",ring_QHeaderView_headerDataChanged);
	RING_API_REGISTER("qheaderview_setoffset",ring_QHeaderView_setOffset);
	RING_API_REGISTER("qheaderview_setoffsettolastsection",ring_QHeaderView_setOffsetToLastSection);
	RING_API_REGISTER("qheaderview_setoffsettosectionposition",ring_QHeaderView_setOffsetToSectionPosition);
	RING_API_REGISTER("qheaderview_setgeometrieschangedevent",ring_QHeaderView_setgeometriesChangedEvent);
	RING_API_REGISTER("qheaderview_setsectionclickedevent",ring_QHeaderView_setsectionClickedEvent);
	RING_API_REGISTER("qheaderview_setsectioncountchangedevent",ring_QHeaderView_setsectionCountChangedEvent);
	RING_API_REGISTER("qheaderview_setsectiondoubleclickedevent",ring_QHeaderView_setsectionDoubleClickedEvent);
	RING_API_REGISTER("qheaderview_setsectionenteredevent",ring_QHeaderView_setsectionEnteredEvent);
	RING_API_REGISTER("qheaderview_setsectionhandledoubleclickedevent",ring_QHeaderView_setsectionHandleDoubleClickedEvent);
	RING_API_REGISTER("qheaderview_setsectionmovedevent",ring_QHeaderView_setsectionMovedEvent);
	RING_API_REGISTER("qheaderview_setsectionpressedevent",ring_QHeaderView_setsectionPressedEvent);
	RING_API_REGISTER("qheaderview_setsectionresizedevent",ring_QHeaderView_setsectionResizedEvent);
	RING_API_REGISTER("qheaderview_setsortindicatorchangedevent",ring_QHeaderView_setsortIndicatorChangedEvent);
	RING_API_REGISTER("qheaderview_getgeometrieschangedevent",ring_QHeaderView_getgeometriesChangedEvent);
	RING_API_REGISTER("qheaderview_getsectionclickedevent",ring_QHeaderView_getsectionClickedEvent);
	RING_API_REGISTER("qheaderview_getsectioncountchangedevent",ring_QHeaderView_getsectionCountChangedEvent);
	RING_API_REGISTER("qheaderview_getsectiondoubleclickedevent",ring_QHeaderView_getsectionDoubleClickedEvent);
	RING_API_REGISTER("qheaderview_getsectionenteredevent",ring_QHeaderView_getsectionEnteredEvent);
	RING_API_REGISTER("qheaderview_getsectionhandledoubleclickedevent",ring_QHeaderView_getsectionHandleDoubleClickedEvent);
	RING_API_REGISTER("qheaderview_getsectionmovedevent",ring_QHeaderView_getsectionMovedEvent);
	RING_API_REGISTER("qheaderview_getsectionpressedevent",ring_QHeaderView_getsectionPressedEvent);
	RING_API_REGISTER("qheaderview_getsectionresizedevent",ring_QHeaderView_getsectionResizedEvent);
	RING_API_REGISTER("qheaderview_getsortindicatorchangedevent",ring_QHeaderView_getsortIndicatorChangedEvent);
	RING_API_REGISTER("qheaderview_geteventparameters",ring_QHeaderView_geteventparameters);
	RING_API_REGISTER("qsplashscreen_finish",ring_QSplashScreen_finish);
	RING_API_REGISTER("qsplashscreen_pixmap",ring_QSplashScreen_pixmap);
	RING_API_REGISTER("qsplashscreen_repaint",ring_QSplashScreen_repaint);
	RING_API_REGISTER("qsplashscreen_setpixmap",ring_QSplashScreen_setPixmap);
	RING_API_REGISTER("qsplashscreen_clearmessage",ring_QSplashScreen_clearMessage);
	RING_API_REGISTER("qsplashscreen_showmessage",ring_QSplashScreen_showMessage);
	RING_API_REGISTER("qboxlayout_addlayout",ring_QBoxLayout_addLayout);
	RING_API_REGISTER("qboxlayout_addspaceritem",ring_QBoxLayout_addSpacerItem);
	RING_API_REGISTER("qboxlayout_addspacing",ring_QBoxLayout_addSpacing);
	RING_API_REGISTER("qboxlayout_addstretch",ring_QBoxLayout_addStretch);
	RING_API_REGISTER("qboxlayout_addstrut",ring_QBoxLayout_addStrut);
	RING_API_REGISTER("qboxlayout_addwidget",ring_QBoxLayout_addWidget);
	RING_API_REGISTER("qboxlayout_direction",ring_QBoxLayout_direction);
	RING_API_REGISTER("qboxlayout_insertlayout",ring_QBoxLayout_insertLayout);
	RING_API_REGISTER("qboxlayout_insertspaceritem",ring_QBoxLayout_insertSpacerItem);
	RING_API_REGISTER("qboxlayout_insertspacing",ring_QBoxLayout_insertSpacing);
	RING_API_REGISTER("qboxlayout_insertstretch",ring_QBoxLayout_insertStretch);
	RING_API_REGISTER("qboxlayout_insertwidget",ring_QBoxLayout_insertWidget);
	RING_API_REGISTER("qboxlayout_setdirection",ring_QBoxLayout_setDirection);
	RING_API_REGISTER("qboxlayout_setspacing",ring_QBoxLayout_setSpacing);
	RING_API_REGISTER("qboxlayout_setstretch",ring_QBoxLayout_setStretch);
	RING_API_REGISTER("qboxlayout_setstretchfactor",ring_QBoxLayout_setStretchFactor);
	RING_API_REGISTER("qboxlayout_setstretchfactor_2",ring_QBoxLayout_setStretchFactor_2);
	RING_API_REGISTER("qboxlayout_spacing",ring_QBoxLayout_spacing);
	RING_API_REGISTER("qboxlayout_stretch",ring_QBoxLayout_stretch);
	RING_API_REGISTER("qlayout_activate",ring_QLayout_activate);
	RING_API_REGISTER("qlayout_addwidget",ring_QLayout_addWidget);
	RING_API_REGISTER("qlayout_contentsmargins",ring_QLayout_contentsMargins);
	RING_API_REGISTER("qlayout_contentsrect",ring_QLayout_contentsRect);
	RING_API_REGISTER("qlayout_getcontentsmargins",ring_QLayout_getContentsMargins);
	RING_API_REGISTER("qlayout_isenabled",ring_QLayout_isEnabled);
	RING_API_REGISTER("qlayout_menubar",ring_QLayout_menuBar);
	RING_API_REGISTER("qlayout_parentwidget",ring_QLayout_parentWidget);
	RING_API_REGISTER("qlayout_removeitem",ring_QLayout_removeItem);
	RING_API_REGISTER("qlayout_removewidget",ring_QLayout_removeWidget);
	RING_API_REGISTER("qlayout_setalignment",ring_QLayout_setAlignment);
	RING_API_REGISTER("qlayout_setalignment_2",ring_QLayout_setAlignment_2);
	RING_API_REGISTER("qlayout_setalignment_3",ring_QLayout_setAlignment_3);
	RING_API_REGISTER("qlayout_setcontentsmargins",ring_QLayout_setContentsMargins);
	RING_API_REGISTER("qlayout_setcontentsmargins_2",ring_QLayout_setContentsMargins_2);
	RING_API_REGISTER("qlayout_setenabled",ring_QLayout_setEnabled);
	RING_API_REGISTER("qlayout_setmenubar",ring_QLayout_setMenuBar);
	RING_API_REGISTER("qlayout_setsizeconstraint",ring_QLayout_setSizeConstraint);
	RING_API_REGISTER("qlayout_setspacing",ring_QLayout_setSpacing);
	RING_API_REGISTER("qlayout_sizeconstraint",ring_QLayout_sizeConstraint);
	RING_API_REGISTER("qlayout_spacing",ring_QLayout_spacing);
	RING_API_REGISTER("qlayout_update",ring_QLayout_update);
	RING_API_REGISTER("qlayout_closestacceptablesize",ring_QLayout_closestAcceptableSize);
	RING_API_REGISTER("qscrollarea_alignment",ring_QScrollArea_alignment);
	RING_API_REGISTER("qscrollarea_ensurevisible",ring_QScrollArea_ensureVisible);
	RING_API_REGISTER("qscrollarea_ensurewidgetvisible",ring_QScrollArea_ensureWidgetVisible);
	RING_API_REGISTER("qscrollarea_setalignment",ring_QScrollArea_setAlignment);
	RING_API_REGISTER("qscrollarea_setwidget",ring_QScrollArea_setWidget);
	RING_API_REGISTER("qscrollarea_setwidgetresizable",ring_QScrollArea_setWidgetResizable);
	RING_API_REGISTER("qscrollarea_takewidget",ring_QScrollArea_takeWidget);
	RING_API_REGISTER("qscrollarea_widget",ring_QScrollArea_widget);
	RING_API_REGISTER("qscrollarea_widgetresizable",ring_QScrollArea_widgetResizable);
	RING_API_REGISTER("qsplitter_addwidget",ring_QSplitter_addWidget);
	RING_API_REGISTER("qsplitter_childrencollapsible",ring_QSplitter_childrenCollapsible);
	RING_API_REGISTER("qsplitter_count",ring_QSplitter_count);
	RING_API_REGISTER("qsplitter_getrange",ring_QSplitter_getRange);
	RING_API_REGISTER("qsplitter_handle",ring_QSplitter_handle);
	RING_API_REGISTER("qsplitter_handlewidth",ring_QSplitter_handleWidth);
	RING_API_REGISTER("qsplitter_indexof",ring_QSplitter_indexOf);
	RING_API_REGISTER("qsplitter_insertwidget",ring_QSplitter_insertWidget);
	RING_API_REGISTER("qsplitter_iscollapsible",ring_QSplitter_isCollapsible);
	RING_API_REGISTER("qsplitter_opaqueresize",ring_QSplitter_opaqueResize);
	RING_API_REGISTER("qsplitter_orientation",ring_QSplitter_orientation);
	RING_API_REGISTER("qsplitter_refresh",ring_QSplitter_refresh);
	RING_API_REGISTER("qsplitter_restorestate",ring_QSplitter_restoreState);
	RING_API_REGISTER("qsplitter_savestate",ring_QSplitter_saveState);
	RING_API_REGISTER("qsplitter_setchildrencollapsible",ring_QSplitter_setChildrenCollapsible);
	RING_API_REGISTER("qsplitter_setcollapsible",ring_QSplitter_setCollapsible);
	RING_API_REGISTER("qsplitter_sethandlewidth",ring_QSplitter_setHandleWidth);
	RING_API_REGISTER("qsplitter_setopaqueresize",ring_QSplitter_setOpaqueResize);
	RING_API_REGISTER("qsplitter_setorientation",ring_QSplitter_setOrientation);
	RING_API_REGISTER("qsplitter_setsizes",ring_QSplitter_setSizes);
	RING_API_REGISTER("qsplitter_setstretchfactor",ring_QSplitter_setStretchFactor);
	RING_API_REGISTER("qsplitter_sizes",ring_QSplitter_sizes);
	RING_API_REGISTER("qsplitter_widget",ring_QSplitter_widget);
	RING_API_REGISTER("qcompleter_casesensitivity",ring_QCompleter_caseSensitivity);
	RING_API_REGISTER("qcompleter_completioncolumn",ring_QCompleter_completionColumn);
	RING_API_REGISTER("qcompleter_completioncount",ring_QCompleter_completionCount);
	RING_API_REGISTER("qcompleter_completionmode",ring_QCompleter_completionMode);
	RING_API_REGISTER("qcompleter_completionmodel",ring_QCompleter_completionModel);
	RING_API_REGISTER("qcompleter_completionprefix",ring_QCompleter_completionPrefix);
	RING_API_REGISTER("qcompleter_completionrole",ring_QCompleter_completionRole);
	RING_API_REGISTER("qcompleter_currentcompletion",ring_QCompleter_currentCompletion);
	RING_API_REGISTER("qcompleter_currentindex",ring_QCompleter_currentIndex);
	RING_API_REGISTER("qcompleter_currentrow",ring_QCompleter_currentRow);
	RING_API_REGISTER("qcompleter_filtermode",ring_QCompleter_filterMode);
	RING_API_REGISTER("qcompleter_maxvisibleitems",ring_QCompleter_maxVisibleItems);
	RING_API_REGISTER("qcompleter_model",ring_QCompleter_model);
	RING_API_REGISTER("qcompleter_modelsorting",ring_QCompleter_modelSorting);
	RING_API_REGISTER("qcompleter_popup",ring_QCompleter_popup);
	RING_API_REGISTER("qcompleter_setcasesensitivity",ring_QCompleter_setCaseSensitivity);
	RING_API_REGISTER("qcompleter_setcompletioncolumn",ring_QCompleter_setCompletionColumn);
	RING_API_REGISTER("qcompleter_setcompletionmode",ring_QCompleter_setCompletionMode);
	RING_API_REGISTER("qcompleter_setcompletionrole",ring_QCompleter_setCompletionRole);
	RING_API_REGISTER("qcompleter_setcurrentrow",ring_QCompleter_setCurrentRow);
	RING_API_REGISTER("qcompleter_setfiltermode",ring_QCompleter_setFilterMode);
	RING_API_REGISTER("qcompleter_setmaxvisibleitems",ring_QCompleter_setMaxVisibleItems);
	RING_API_REGISTER("qcompleter_setmodel",ring_QCompleter_setModel);
	RING_API_REGISTER("qcompleter_setmodelsorting",ring_QCompleter_setModelSorting);
	RING_API_REGISTER("qcompleter_setpopup",ring_QCompleter_setPopup);
	RING_API_REGISTER("qcompleter_setwidget",ring_QCompleter_setWidget);
	RING_API_REGISTER("qcompleter_widget",ring_QCompleter_widget);
	RING_API_REGISTER("qcompleter_wraparound",ring_QCompleter_wrapAround);
	RING_API_REGISTER("qcompleter_complete",ring_QCompleter_complete);
	RING_API_REGISTER("qcompleter_setcompletionprefix",ring_QCompleter_setCompletionPrefix);
	RING_API_REGISTER("qcompleter_setwraparound",ring_QCompleter_setWrapAround);
	RING_API_REGISTER("qmdiarea_activationorder",ring_QMdiArea_activationOrder);
	RING_API_REGISTER("qmdiarea_activesubwindow",ring_QMdiArea_activeSubWindow);
	RING_API_REGISTER("qmdiarea_addsubwindow",ring_QMdiArea_addSubWindow);
	RING_API_REGISTER("qmdiarea_background",ring_QMdiArea_background);
	RING_API_REGISTER("qmdiarea_currentsubwindow",ring_QMdiArea_currentSubWindow);
	RING_API_REGISTER("qmdiarea_documentmode",ring_QMdiArea_documentMode);
	RING_API_REGISTER("qmdiarea_removesubwindow",ring_QMdiArea_removeSubWindow);
	RING_API_REGISTER("qmdiarea_setactivationorder",ring_QMdiArea_setActivationOrder);
	RING_API_REGISTER("qmdiarea_setbackground",ring_QMdiArea_setBackground);
	RING_API_REGISTER("qmdiarea_setdocumentmode",ring_QMdiArea_setDocumentMode);
	RING_API_REGISTER("qmdiarea_setoption",ring_QMdiArea_setOption);
	RING_API_REGISTER("qmdiarea_settabposition",ring_QMdiArea_setTabPosition);
	RING_API_REGISTER("qmdiarea_settabshape",ring_QMdiArea_setTabShape);
	RING_API_REGISTER("qmdiarea_settabsclosable",ring_QMdiArea_setTabsClosable);
	RING_API_REGISTER("qmdiarea_settabsmovable",ring_QMdiArea_setTabsMovable);
	RING_API_REGISTER("qmdiarea_setviewmode",ring_QMdiArea_setViewMode);
	RING_API_REGISTER("qmdiarea_subwindowlist",ring_QMdiArea_subWindowList);
	RING_API_REGISTER("qmdiarea_tabposition",ring_QMdiArea_tabPosition);
	RING_API_REGISTER("qmdiarea_tabshape",ring_QMdiArea_tabShape);
	RING_API_REGISTER("qmdiarea_tabsclosable",ring_QMdiArea_tabsClosable);
	RING_API_REGISTER("qmdiarea_tabsmovable",ring_QMdiArea_tabsMovable);
	RING_API_REGISTER("qmdiarea_testoption",ring_QMdiArea_testOption);
	RING_API_REGISTER("qmdiarea_viewmode",ring_QMdiArea_viewMode);
	RING_API_REGISTER("qmdiarea_activatenextsubwindow",ring_QMdiArea_activateNextSubWindow);
	RING_API_REGISTER("qmdiarea_activateprevioussubwindow",ring_QMdiArea_activatePreviousSubWindow);
	RING_API_REGISTER("qmdiarea_cascadesubwindows",ring_QMdiArea_cascadeSubWindows);
	RING_API_REGISTER("qmdiarea_closeactivesubwindow",ring_QMdiArea_closeActiveSubWindow);
	RING_API_REGISTER("qmdiarea_closeallsubwindows",ring_QMdiArea_closeAllSubWindows);
	RING_API_REGISTER("qmdiarea_setactivesubwindow",ring_QMdiArea_setActiveSubWindow);
	RING_API_REGISTER("qmdiarea_tilesubwindows",ring_QMdiArea_tileSubWindows);
	RING_API_REGISTER("qmdisubwindow_isshaded",ring_QMdiSubWindow_isShaded);
	RING_API_REGISTER("qmdisubwindow_keyboardpagestep",ring_QMdiSubWindow_keyboardPageStep);
	RING_API_REGISTER("qmdisubwindow_keyboardsinglestep",ring_QMdiSubWindow_keyboardSingleStep);
	RING_API_REGISTER("qmdisubwindow_mdiarea",ring_QMdiSubWindow_mdiArea);
	RING_API_REGISTER("qmdisubwindow_setkeyboardpagestep",ring_QMdiSubWindow_setKeyboardPageStep);
	RING_API_REGISTER("qmdisubwindow_setkeyboardsinglestep",ring_QMdiSubWindow_setKeyboardSingleStep);
	RING_API_REGISTER("qmdisubwindow_setoption",ring_QMdiSubWindow_setOption);
	RING_API_REGISTER("qmdisubwindow_setsystemmenu",ring_QMdiSubWindow_setSystemMenu);
	RING_API_REGISTER("qmdisubwindow_setwidget",ring_QMdiSubWindow_setWidget);
	RING_API_REGISTER("qmdisubwindow_systemmenu",ring_QMdiSubWindow_systemMenu);
	RING_API_REGISTER("qmdisubwindow_testoption",ring_QMdiSubWindow_testOption);
	RING_API_REGISTER("qmdisubwindow_widget",ring_QMdiSubWindow_widget);
	RING_API_REGISTER("qmdisubwindow_showshaded",ring_QMdiSubWindow_showShaded);
	RING_API_REGISTER("qmdisubwindow_showsystemmenu",ring_QMdiSubWindow_showSystemMenu);
	RING_API_REGISTER("qlistview_batchsize",ring_QListView_batchSize);
	RING_API_REGISTER("qlistview_clearpropertyflags",ring_QListView_clearPropertyFlags);
	RING_API_REGISTER("qlistview_flow",ring_QListView_flow);
	RING_API_REGISTER("qlistview_gridsize",ring_QListView_gridSize);
	RING_API_REGISTER("qlistview_isrowhidden",ring_QListView_isRowHidden);
	RING_API_REGISTER("qlistview_isselectionrectvisible",ring_QListView_isSelectionRectVisible);
	RING_API_REGISTER("qlistview_iswrapping",ring_QListView_isWrapping);
	RING_API_REGISTER("qlistview_layoutmode",ring_QListView_layoutMode);
	RING_API_REGISTER("qlistview_modelcolumn",ring_QListView_modelColumn);
	RING_API_REGISTER("qlistview_movement",ring_QListView_movement);
	RING_API_REGISTER("qlistview_resizemode",ring_QListView_resizeMode);
	RING_API_REGISTER("qlistview_setbatchsize",ring_QListView_setBatchSize);
	RING_API_REGISTER("qlistview_setflow",ring_QListView_setFlow);
	RING_API_REGISTER("qlistview_setgridsize",ring_QListView_setGridSize);
	RING_API_REGISTER("qlistview_setlayoutmode",ring_QListView_setLayoutMode);
	RING_API_REGISTER("qlistview_setmodelcolumn",ring_QListView_setModelColumn);
	RING_API_REGISTER("qlistview_setmovement",ring_QListView_setMovement);
	RING_API_REGISTER("qlistview_setresizemode",ring_QListView_setResizeMode);
	RING_API_REGISTER("qlistview_setrowhidden",ring_QListView_setRowHidden);
	RING_API_REGISTER("qlistview_setselectionrectvisible",ring_QListView_setSelectionRectVisible);
	RING_API_REGISTER("qlistview_setspacing",ring_QListView_setSpacing);
	RING_API_REGISTER("qlistview_setuniformitemsizes",ring_QListView_setUniformItemSizes);
	RING_API_REGISTER("qlistview_setviewmode",ring_QListView_setViewMode);
	RING_API_REGISTER("qlistview_setwordwrap",ring_QListView_setWordWrap);
	RING_API_REGISTER("qlistview_setwrapping",ring_QListView_setWrapping);
	RING_API_REGISTER("qlistview_spacing",ring_QListView_spacing);
	RING_API_REGISTER("qlistview_uniformitemsizes",ring_QListView_uniformItemSizes);
	RING_API_REGISTER("qlistview_viewmode",ring_QListView_viewMode);
	RING_API_REGISTER("qlistview_wordwrap",ring_QListView_wordWrap);
	RING_API_REGISTER("qtoolbutton_arrowtype",ring_QToolButton_arrowType);
	RING_API_REGISTER("qtoolbutton_autoraise",ring_QToolButton_autoRaise);
	RING_API_REGISTER("qtoolbutton_defaultaction",ring_QToolButton_defaultAction);
	RING_API_REGISTER("qtoolbutton_menu",ring_QToolButton_menu);
	RING_API_REGISTER("qtoolbutton_popupmode",ring_QToolButton_popupMode);
	RING_API_REGISTER("qtoolbutton_setarrowtype",ring_QToolButton_setArrowType);
	RING_API_REGISTER("qtoolbutton_setautoraise",ring_QToolButton_setAutoRaise);
	RING_API_REGISTER("qtoolbutton_setmenu",ring_QToolButton_setMenu);
	RING_API_REGISTER("qtoolbutton_setpopupmode",ring_QToolButton_setPopupMode);
	RING_API_REGISTER("qtoolbutton_toolbuttonstyle",ring_QToolButton_toolButtonStyle);
	RING_API_REGISTER("qtoolbutton_setdefaultaction",ring_QToolButton_setDefaultAction);
	RING_API_REGISTER("qtoolbutton_settoolbuttonstyle",ring_QToolButton_setToolButtonStyle);
	RING_API_REGISTER("qtoolbutton_showmenu",ring_QToolButton_showMenu);
	RING_API_REGISTER("qtoolbutton_settriggeredevent",ring_QToolButton_settriggeredEvent);
	RING_API_REGISTER("qtoolbutton_gettriggeredevent",ring_QToolButton_gettriggeredEvent);
	RING_API_REGISTER("qtoolbutton_setclickevent",ring_QToolButton_setClickEvent);
	RING_API_REGISTER("qtoolbutton_getclickevent",ring_QToolButton_getClickEvent);
	RING_API_REGISTER("qtextbrowser_backwardhistorycount",ring_QTextBrowser_backwardHistoryCount);
	RING_API_REGISTER("qtextbrowser_clearhistory",ring_QTextBrowser_clearHistory);
	RING_API_REGISTER("qtextbrowser_forwardhistorycount",ring_QTextBrowser_forwardHistoryCount);
	RING_API_REGISTER("qtextbrowser_historytitle",ring_QTextBrowser_historyTitle);
	RING_API_REGISTER("qtextbrowser_historyurl",ring_QTextBrowser_historyUrl);
	RING_API_REGISTER("qtextbrowser_isbackwardavailable",ring_QTextBrowser_isBackwardAvailable);
	RING_API_REGISTER("qtextbrowser_isforwardavailable",ring_QTextBrowser_isForwardAvailable);
	RING_API_REGISTER("qtextbrowser_openexternallinks",ring_QTextBrowser_openExternalLinks);
	RING_API_REGISTER("qtextbrowser_openlinks",ring_QTextBrowser_openLinks);
	RING_API_REGISTER("qtextbrowser_searchpaths",ring_QTextBrowser_searchPaths);
	RING_API_REGISTER("qtextbrowser_setopenexternallinks",ring_QTextBrowser_setOpenExternalLinks);
	RING_API_REGISTER("qtextbrowser_setopenlinks",ring_QTextBrowser_setOpenLinks);
	RING_API_REGISTER("qtextbrowser_setsearchpaths",ring_QTextBrowser_setSearchPaths);
	RING_API_REGISTER("qtextbrowser_source",ring_QTextBrowser_source);
	RING_API_REGISTER("qtextbrowser_setanchorclickedevent",ring_QTextBrowser_setanchorClickedEvent);
	RING_API_REGISTER("qtextbrowser_setbackwardavailableevent",ring_QTextBrowser_setbackwardAvailableEvent);
	RING_API_REGISTER("qtextbrowser_setforwardavailableevent",ring_QTextBrowser_setforwardAvailableEvent);
	RING_API_REGISTER("qtextbrowser_sethighlightedevent",ring_QTextBrowser_sethighlightedEvent);
	RING_API_REGISTER("qtextbrowser_sethistorychangedevent",ring_QTextBrowser_sethistoryChangedEvent);
	RING_API_REGISTER("qtextbrowser_setsourcechangedevent",ring_QTextBrowser_setsourceChangedEvent);
	RING_API_REGISTER("qtextbrowser_getanchorclickedevent",ring_QTextBrowser_getanchorClickedEvent);
	RING_API_REGISTER("qtextbrowser_getbackwardavailableevent",ring_QTextBrowser_getbackwardAvailableEvent);
	RING_API_REGISTER("qtextbrowser_getforwardavailableevent",ring_QTextBrowser_getforwardAvailableEvent);
	RING_API_REGISTER("qtextbrowser_gethighlightedevent",ring_QTextBrowser_gethighlightedEvent);
	RING_API_REGISTER("qtextbrowser_gethistorychangedevent",ring_QTextBrowser_gethistoryChangedEvent);
	RING_API_REGISTER("qtextbrowser_getsourcechangedevent",ring_QTextBrowser_getsourceChangedEvent);
	RING_API_REGISTER("qstackedwidget_addwidget",ring_QStackedWidget_addWidget);
	RING_API_REGISTER("qstackedwidget_count",ring_QStackedWidget_count);
	RING_API_REGISTER("qstackedwidget_currentindex",ring_QStackedWidget_currentIndex);
	RING_API_REGISTER("qstackedwidget_currentwidget",ring_QStackedWidget_currentWidget);
	RING_API_REGISTER("qstackedwidget_indexof",ring_QStackedWidget_indexOf);
	RING_API_REGISTER("qstackedwidget_insertwidget",ring_QStackedWidget_insertWidget);
	RING_API_REGISTER("qstackedwidget_removewidget",ring_QStackedWidget_removeWidget);
	RING_API_REGISTER("qstackedwidget_widget",ring_QStackedWidget_widget);
	RING_API_REGISTER("qstackedwidget_setcurrentindex",ring_QStackedWidget_setCurrentIndex);
	RING_API_REGISTER("qstackedwidget_setcurrentwidget",ring_QStackedWidget_setCurrentWidget);
	RING_API_REGISTER("qstackedwidget_setcurrentchangedevent",ring_QStackedWidget_setcurrentChangedEvent);
	RING_API_REGISTER("qstackedwidget_setwidgetremovedevent",ring_QStackedWidget_setwidgetRemovedEvent);
	RING_API_REGISTER("qstackedwidget_getcurrentchangedevent",ring_QStackedWidget_getcurrentChangedEvent);
	RING_API_REGISTER("qstackedwidget_getwidgetremovedevent",ring_QStackedWidget_getwidgetRemovedEvent);
	RING_API_REGISTER("qcalendarwidget_dateeditacceptdelay",ring_QCalendarWidget_dateEditAcceptDelay);
	RING_API_REGISTER("qcalendarwidget_datetextformat",ring_QCalendarWidget_dateTextFormat);
	RING_API_REGISTER("qcalendarwidget_datetextformat_2",ring_QCalendarWidget_dateTextFormat_2);
	RING_API_REGISTER("qcalendarwidget_firstdayofweek",ring_QCalendarWidget_firstDayOfWeek);
	RING_API_REGISTER("qcalendarwidget_headertextformat",ring_QCalendarWidget_headerTextFormat);
	RING_API_REGISTER("qcalendarwidget_horizontalheaderformat",ring_QCalendarWidget_horizontalHeaderFormat);
	RING_API_REGISTER("qcalendarwidget_isdateeditenabled",ring_QCalendarWidget_isDateEditEnabled);
	RING_API_REGISTER("qcalendarwidget_isgridvisible",ring_QCalendarWidget_isGridVisible);
	RING_API_REGISTER("qcalendarwidget_isnavigationbarvisible",ring_QCalendarWidget_isNavigationBarVisible);
	RING_API_REGISTER("qcalendarwidget_maximumdate",ring_QCalendarWidget_maximumDate);
	RING_API_REGISTER("qcalendarwidget_minimumdate",ring_QCalendarWidget_minimumDate);
	RING_API_REGISTER("qcalendarwidget_monthshown",ring_QCalendarWidget_monthShown);
	RING_API_REGISTER("qcalendarwidget_selecteddate",ring_QCalendarWidget_selectedDate);
	RING_API_REGISTER("qcalendarwidget_selectionmode",ring_QCalendarWidget_selectionMode);
	RING_API_REGISTER("qcalendarwidget_setdateeditacceptdelay",ring_QCalendarWidget_setDateEditAcceptDelay);
	RING_API_REGISTER("qcalendarwidget_setdateeditenabled",ring_QCalendarWidget_setDateEditEnabled);
	RING_API_REGISTER("qcalendarwidget_setdatetextformat",ring_QCalendarWidget_setDateTextFormat);
	RING_API_REGISTER("qcalendarwidget_setfirstdayofweek",ring_QCalendarWidget_setFirstDayOfWeek);
	RING_API_REGISTER("qcalendarwidget_setheadertextformat",ring_QCalendarWidget_setHeaderTextFormat);
	RING_API_REGISTER("qcalendarwidget_sethorizontalheaderformat",ring_QCalendarWidget_setHorizontalHeaderFormat);
	RING_API_REGISTER("qcalendarwidget_setmaximumdate",ring_QCalendarWidget_setMaximumDate);
	RING_API_REGISTER("qcalendarwidget_setminimumdate",ring_QCalendarWidget_setMinimumDate);
	RING_API_REGISTER("qcalendarwidget_setselectionmode",ring_QCalendarWidget_setSelectionMode);
	RING_API_REGISTER("qcalendarwidget_setverticalheaderformat",ring_QCalendarWidget_setVerticalHeaderFormat);
	RING_API_REGISTER("qcalendarwidget_setweekdaytextformat",ring_QCalendarWidget_setWeekdayTextFormat);
	RING_API_REGISTER("qcalendarwidget_verticalheaderformat",ring_QCalendarWidget_verticalHeaderFormat);
	RING_API_REGISTER("qcalendarwidget_weekdaytextformat",ring_QCalendarWidget_weekdayTextFormat);
	RING_API_REGISTER("qcalendarwidget_yearshown",ring_QCalendarWidget_yearShown);
	RING_API_REGISTER("qcalendarwidget_setcurrentpage",ring_QCalendarWidget_setCurrentPage);
	RING_API_REGISTER("qcalendarwidget_setdaterange",ring_QCalendarWidget_setDateRange);
	RING_API_REGISTER("qcalendarwidget_setgridvisible",ring_QCalendarWidget_setGridVisible);
	RING_API_REGISTER("qcalendarwidget_setnavigationbarvisible",ring_QCalendarWidget_setNavigationBarVisible);
	RING_API_REGISTER("qcalendarwidget_setselecteddate",ring_QCalendarWidget_setSelectedDate);
	RING_API_REGISTER("qcalendarwidget_shownextmonth",ring_QCalendarWidget_showNextMonth);
	RING_API_REGISTER("qcalendarwidget_shownextyear",ring_QCalendarWidget_showNextYear);
	RING_API_REGISTER("qcalendarwidget_showpreviousmonth",ring_QCalendarWidget_showPreviousMonth);
	RING_API_REGISTER("qcalendarwidget_showpreviousyear",ring_QCalendarWidget_showPreviousYear);
	RING_API_REGISTER("qcalendarwidget_showselecteddate",ring_QCalendarWidget_showSelectedDate);
	RING_API_REGISTER("qcalendarwidget_showtoday",ring_QCalendarWidget_showToday);
	RING_API_REGISTER("qcalendarwidget_setactivatedevent",ring_QCalendarWidget_setactivatedEvent);
	RING_API_REGISTER("qcalendarwidget_setclickedevent",ring_QCalendarWidget_setclickedEvent);
	RING_API_REGISTER("qcalendarwidget_setcurrentpagechangedevent",ring_QCalendarWidget_setcurrentPageChangedEvent);
	RING_API_REGISTER("qcalendarwidget_setselectionchangedevent",ring_QCalendarWidget_setselectionChangedEvent);
	RING_API_REGISTER("qcalendarwidget_getactivatedevent",ring_QCalendarWidget_getactivatedEvent);
	RING_API_REGISTER("qcalendarwidget_getclickedevent",ring_QCalendarWidget_getclickedEvent);
	RING_API_REGISTER("qcalendarwidget_getcurrentpagechangedevent",ring_QCalendarWidget_getcurrentPageChangedEvent);
	RING_API_REGISTER("qcalendarwidget_getselectionchangedevent",ring_QCalendarWidget_getselectionChangedEvent);
	RING_API_REGISTER("qtabbar_addtab",ring_QTabBar_addTab);
	RING_API_REGISTER("qtabbar_addtab_2",ring_QTabBar_addTab_2);
	RING_API_REGISTER("qtabbar_count",ring_QTabBar_count);
	RING_API_REGISTER("qtabbar_currentindex",ring_QTabBar_currentIndex);
	RING_API_REGISTER("qtabbar_documentmode",ring_QTabBar_documentMode);
	RING_API_REGISTER("qtabbar_drawbase",ring_QTabBar_drawBase);
	RING_API_REGISTER("qtabbar_elidemode",ring_QTabBar_elideMode);
	RING_API_REGISTER("qtabbar_expanding",ring_QTabBar_expanding);
	RING_API_REGISTER("qtabbar_iconsize",ring_QTabBar_iconSize);
	RING_API_REGISTER("qtabbar_inserttab",ring_QTabBar_insertTab);
	RING_API_REGISTER("qtabbar_inserttab_2",ring_QTabBar_insertTab_2);
	RING_API_REGISTER("qtabbar_ismovable",ring_QTabBar_isMovable);
	RING_API_REGISTER("qtabbar_istabenabled",ring_QTabBar_isTabEnabled);
	RING_API_REGISTER("qtabbar_movetab",ring_QTabBar_moveTab);
	RING_API_REGISTER("qtabbar_removetab",ring_QTabBar_removeTab);
	RING_API_REGISTER("qtabbar_selectionbehavioronremove",ring_QTabBar_selectionBehaviorOnRemove);
	RING_API_REGISTER("qtabbar_setdocumentmode",ring_QTabBar_setDocumentMode);
	RING_API_REGISTER("qtabbar_setdrawbase",ring_QTabBar_setDrawBase);
	RING_API_REGISTER("qtabbar_setelidemode",ring_QTabBar_setElideMode);
	RING_API_REGISTER("qtabbar_setexpanding",ring_QTabBar_setExpanding);
	RING_API_REGISTER("qtabbar_seticonsize",ring_QTabBar_setIconSize);
	RING_API_REGISTER("qtabbar_setmovable",ring_QTabBar_setMovable);
	RING_API_REGISTER("qtabbar_setselectionbehavioronremove",ring_QTabBar_setSelectionBehaviorOnRemove);
	RING_API_REGISTER("qtabbar_setshape",ring_QTabBar_setShape);
	RING_API_REGISTER("qtabbar_settabbutton",ring_QTabBar_setTabButton);
	RING_API_REGISTER("qtabbar_settabdata",ring_QTabBar_setTabData);
	RING_API_REGISTER("qtabbar_settabenabled",ring_QTabBar_setTabEnabled);
	RING_API_REGISTER("qtabbar_settabicon",ring_QTabBar_setTabIcon);
	RING_API_REGISTER("qtabbar_settabtext",ring_QTabBar_setTabText);
	RING_API_REGISTER("qtabbar_settabtextcolor",ring_QTabBar_setTabTextColor);
	RING_API_REGISTER("qtabbar_settabtooltip",ring_QTabBar_setTabToolTip);
	RING_API_REGISTER("qtabbar_settabwhatsthis",ring_QTabBar_setTabWhatsThis);
	RING_API_REGISTER("qtabbar_settabsclosable",ring_QTabBar_setTabsClosable);
	RING_API_REGISTER("qtabbar_setusesscrollbuttons",ring_QTabBar_setUsesScrollButtons);
	RING_API_REGISTER("qtabbar_shape",ring_QTabBar_shape);
	RING_API_REGISTER("qtabbar_tabat",ring_QTabBar_tabAt);
	RING_API_REGISTER("qtabbar_tabbutton",ring_QTabBar_tabButton);
	RING_API_REGISTER("qtabbar_tabdata",ring_QTabBar_tabData);
	RING_API_REGISTER("qtabbar_tabicon",ring_QTabBar_tabIcon);
	RING_API_REGISTER("qtabbar_tabrect",ring_QTabBar_tabRect);
	RING_API_REGISTER("qtabbar_tabtext",ring_QTabBar_tabText);
	RING_API_REGISTER("qtabbar_tabtextcolor",ring_QTabBar_tabTextColor);
	RING_API_REGISTER("qtabbar_tabtooltip",ring_QTabBar_tabToolTip);
	RING_API_REGISTER("qtabbar_tabwhatsthis",ring_QTabBar_tabWhatsThis);
	RING_API_REGISTER("qtabbar_tabsclosable",ring_QTabBar_tabsClosable);
	RING_API_REGISTER("qtabbar_usesscrollbuttons",ring_QTabBar_usesScrollButtons);
	RING_API_REGISTER("qtabbar_setcurrentindex",ring_QTabBar_setCurrentIndex);
	RING_API_REGISTER("qtabbar_setcurrentchangedevent",ring_QTabBar_setcurrentChangedEvent);
	RING_API_REGISTER("qtabbar_settabcloserequestedevent",ring_QTabBar_settabCloseRequestedEvent);
	RING_API_REGISTER("qtabbar_settabmovedevent",ring_QTabBar_settabMovedEvent);
	RING_API_REGISTER("qtabbar_getcurrentchangedevent",ring_QTabBar_getcurrentChangedEvent);
	RING_API_REGISTER("qtabbar_gettabcloserequestedevent",ring_QTabBar_gettabCloseRequestedEvent);
	RING_API_REGISTER("qtabbar_gettabmovedevent",ring_QTabBar_gettabMovedEvent);
	RING_API_REGISTER("qgraphicsview_matrix",ring_QGraphicsView_matrix);
	RING_API_REGISTER("qgraphicsview_resetmatrix",ring_QGraphicsView_resetMatrix);
	RING_API_REGISTER("qgraphicsview_setmatrix",ring_QGraphicsView_setMatrix);
	RING_API_REGISTER("qgraphicsview_alignment",ring_QGraphicsView_alignment);
	RING_API_REGISTER("qgraphicsview_backgroundbrush",ring_QGraphicsView_backgroundBrush);
	RING_API_REGISTER("qgraphicsview_cachemode",ring_QGraphicsView_cacheMode);
	RING_API_REGISTER("qgraphicsview_centeron",ring_QGraphicsView_centerOn);
	RING_API_REGISTER("qgraphicsview_centeron_2",ring_QGraphicsView_centerOn_2);
	RING_API_REGISTER("qgraphicsview_centeron_3",ring_QGraphicsView_centerOn_3);
	RING_API_REGISTER("qgraphicsview_dragmode",ring_QGraphicsView_dragMode);
	RING_API_REGISTER("qgraphicsview_ensurevisible",ring_QGraphicsView_ensureVisible);
	RING_API_REGISTER("qgraphicsview_ensurevisible_2",ring_QGraphicsView_ensureVisible_2);
	RING_API_REGISTER("qgraphicsview_ensurevisible_3",ring_QGraphicsView_ensureVisible_3);
	RING_API_REGISTER("qgraphicsview_fitinview",ring_QGraphicsView_fitInView);
	RING_API_REGISTER("qgraphicsview_fitinview_2",ring_QGraphicsView_fitInView_2);
	RING_API_REGISTER("qgraphicsview_fitinview_3",ring_QGraphicsView_fitInView_3);
	RING_API_REGISTER("qgraphicsview_foregroundbrush",ring_QGraphicsView_foregroundBrush);
	RING_API_REGISTER("qgraphicsview_isinteractive",ring_QGraphicsView_isInteractive);
	RING_API_REGISTER("qgraphicsview_istransformed",ring_QGraphicsView_isTransformed);
	RING_API_REGISTER("qgraphicsview_itemat",ring_QGraphicsView_itemAt);
	RING_API_REGISTER("qgraphicsview_itemat_2",ring_QGraphicsView_itemAt_2);
	RING_API_REGISTER("qgraphicsview_items",ring_QGraphicsView_items);
	RING_API_REGISTER("qgraphicsview_items_2",ring_QGraphicsView_items_2);
	RING_API_REGISTER("qgraphicsview_items_3",ring_QGraphicsView_items_3);
	RING_API_REGISTER("qgraphicsview_items_4",ring_QGraphicsView_items_4);
	RING_API_REGISTER("qgraphicsview_items_5",ring_QGraphicsView_items_5);
	RING_API_REGISTER("qgraphicsview_items_6",ring_QGraphicsView_items_6);
	RING_API_REGISTER("qgraphicsview_items_7",ring_QGraphicsView_items_7);
	RING_API_REGISTER("qgraphicsview_mapfromscene",ring_QGraphicsView_mapFromScene);
	RING_API_REGISTER("qgraphicsview_mapfromscene_2",ring_QGraphicsView_mapFromScene_2);
	RING_API_REGISTER("qgraphicsview_mapfromscene_3",ring_QGraphicsView_mapFromScene_3);
	RING_API_REGISTER("qgraphicsview_mapfromscene_4",ring_QGraphicsView_mapFromScene_4);
	RING_API_REGISTER("qgraphicsview_mapfromscene_5",ring_QGraphicsView_mapFromScene_5);
	RING_API_REGISTER("qgraphicsview_mapfromscene_6",ring_QGraphicsView_mapFromScene_6);
	RING_API_REGISTER("qgraphicsview_maptoscene",ring_QGraphicsView_mapToScene);
	RING_API_REGISTER("qgraphicsview_maptoscene_2",ring_QGraphicsView_mapToScene_2);
	RING_API_REGISTER("qgraphicsview_maptoscene_3",ring_QGraphicsView_mapToScene_3);
	RING_API_REGISTER("qgraphicsview_maptoscene_4",ring_QGraphicsView_mapToScene_4);
	RING_API_REGISTER("qgraphicsview_maptoscene_5",ring_QGraphicsView_mapToScene_5);
	RING_API_REGISTER("qgraphicsview_maptoscene_6",ring_QGraphicsView_mapToScene_6);
	RING_API_REGISTER("qgraphicsview_optimizationflags",ring_QGraphicsView_optimizationFlags);
	RING_API_REGISTER("qgraphicsview_render",ring_QGraphicsView_render);
	RING_API_REGISTER("qgraphicsview_renderhints",ring_QGraphicsView_renderHints);
	RING_API_REGISTER("qgraphicsview_resetcachedcontent",ring_QGraphicsView_resetCachedContent);
	RING_API_REGISTER("qgraphicsview_resettransform",ring_QGraphicsView_resetTransform);
	RING_API_REGISTER("qgraphicsview_resizeanchor",ring_QGraphicsView_resizeAnchor);
	RING_API_REGISTER("qgraphicsview_rotate",ring_QGraphicsView_rotate);
	RING_API_REGISTER("qgraphicsview_rubberbandrect",ring_QGraphicsView_rubberBandRect);
	RING_API_REGISTER("qgraphicsview_rubberbandselectionmode",ring_QGraphicsView_rubberBandSelectionMode);
	RING_API_REGISTER("qgraphicsview_scale",ring_QGraphicsView_scale);
	RING_API_REGISTER("qgraphicsview_scene",ring_QGraphicsView_scene);
	RING_API_REGISTER("qgraphicsview_scenerect",ring_QGraphicsView_sceneRect);
	RING_API_REGISTER("qgraphicsview_setalignment",ring_QGraphicsView_setAlignment);
	RING_API_REGISTER("qgraphicsview_setbackgroundbrush",ring_QGraphicsView_setBackgroundBrush);
	RING_API_REGISTER("qgraphicsview_setcachemode",ring_QGraphicsView_setCacheMode);
	RING_API_REGISTER("qgraphicsview_setdragmode",ring_QGraphicsView_setDragMode);
	RING_API_REGISTER("qgraphicsview_setforegroundbrush",ring_QGraphicsView_setForegroundBrush);
	RING_API_REGISTER("qgraphicsview_setinteractive",ring_QGraphicsView_setInteractive);
	RING_API_REGISTER("qgraphicsview_setoptimizationflag",ring_QGraphicsView_setOptimizationFlag);
	RING_API_REGISTER("qgraphicsview_setoptimizationflags",ring_QGraphicsView_setOptimizationFlags);
	RING_API_REGISTER("qgraphicsview_setrenderhint",ring_QGraphicsView_setRenderHint);
	RING_API_REGISTER("qgraphicsview_setrenderhints",ring_QGraphicsView_setRenderHints);
	RING_API_REGISTER("qgraphicsview_setresizeanchor",ring_QGraphicsView_setResizeAnchor);
	RING_API_REGISTER("qgraphicsview_setrubberbandselectionmode",ring_QGraphicsView_setRubberBandSelectionMode);
	RING_API_REGISTER("qgraphicsview_setscene",ring_QGraphicsView_setScene);
	RING_API_REGISTER("qgraphicsview_setscenerect",ring_QGraphicsView_setSceneRect);
	RING_API_REGISTER("qgraphicsview_setscenerect_2",ring_QGraphicsView_setSceneRect_2);
	RING_API_REGISTER("qgraphicsview_settransform",ring_QGraphicsView_setTransform);
	RING_API_REGISTER("qgraphicsview_settransformationanchor",ring_QGraphicsView_setTransformationAnchor);
	RING_API_REGISTER("qgraphicsview_setviewportupdatemode",ring_QGraphicsView_setViewportUpdateMode);
	RING_API_REGISTER("qgraphicsview_shear",ring_QGraphicsView_shear);
	RING_API_REGISTER("qgraphicsview_transform",ring_QGraphicsView_transform);
	RING_API_REGISTER("qgraphicsview_transformationanchor",ring_QGraphicsView_transformationAnchor);
	RING_API_REGISTER("qgraphicsview_translate",ring_QGraphicsView_translate);
	RING_API_REGISTER("qgraphicsview_viewporttransform",ring_QGraphicsView_viewportTransform);
	RING_API_REGISTER("qgraphicsview_viewportupdatemode",ring_QGraphicsView_viewportUpdateMode);
	RING_API_REGISTER("qgraphicsview_invalidatescene",ring_QGraphicsView_invalidateScene);
	RING_API_REGISTER("qgraphicsview_updatescene",ring_QGraphicsView_updateScene);
	RING_API_REGISTER("qgraphicsview_updatescenerect",ring_QGraphicsView_updateSceneRect);
	RING_API_REGISTER("qgraphicsscene_activepanel",ring_QGraphicsScene_activePanel);
	RING_API_REGISTER("qgraphicsscene_activewindow",ring_QGraphicsScene_activeWindow);
	RING_API_REGISTER("qgraphicsscene_addellipse",ring_QGraphicsScene_addEllipse);
	RING_API_REGISTER("qgraphicsscene_addellipse_2",ring_QGraphicsScene_addEllipse_2);
	RING_API_REGISTER("qgraphicsscene_additem",ring_QGraphicsScene_addItem);
	RING_API_REGISTER("qgraphicsscene_addline",ring_QGraphicsScene_addLine);
	RING_API_REGISTER("qgraphicsscene_addline_2",ring_QGraphicsScene_addLine_2);
	RING_API_REGISTER("qgraphicsscene_addpath",ring_QGraphicsScene_addPath);
	RING_API_REGISTER("qgraphicsscene_addpixmap",ring_QGraphicsScene_addPixmap);
	RING_API_REGISTER("qgraphicsscene_addpolygon",ring_QGraphicsScene_addPolygon);
	RING_API_REGISTER("qgraphicsscene_addrect",ring_QGraphicsScene_addRect);
	RING_API_REGISTER("qgraphicsscene_addrect_2",ring_QGraphicsScene_addRect_2);
	RING_API_REGISTER("qgraphicsscene_addsimpletext",ring_QGraphicsScene_addSimpleText);
	RING_API_REGISTER("qgraphicsscene_addtext",ring_QGraphicsScene_addText);
	RING_API_REGISTER("qgraphicsscene_addwidget",ring_QGraphicsScene_addWidget);
	RING_API_REGISTER("qgraphicsscene_backgroundbrush",ring_QGraphicsScene_backgroundBrush);
	RING_API_REGISTER("qgraphicsscene_bsptreedepth",ring_QGraphicsScene_bspTreeDepth);
	RING_API_REGISTER("qgraphicsscene_clearfocus",ring_QGraphicsScene_clearFocus);
	RING_API_REGISTER("qgraphicsscene_collidingitems",ring_QGraphicsScene_collidingItems);
	RING_API_REGISTER("qgraphicsscene_createitemgroup",ring_QGraphicsScene_createItemGroup);
	RING_API_REGISTER("qgraphicsscene_destroyitemgroup",ring_QGraphicsScene_destroyItemGroup);
	RING_API_REGISTER("qgraphicsscene_focusitem",ring_QGraphicsScene_focusItem);
	RING_API_REGISTER("qgraphicsscene_font",ring_QGraphicsScene_font);
	RING_API_REGISTER("qgraphicsscene_foregroundbrush",ring_QGraphicsScene_foregroundBrush);
	RING_API_REGISTER("qgraphicsscene_hasfocus",ring_QGraphicsScene_hasFocus);
	RING_API_REGISTER("qgraphicsscene_height",ring_QGraphicsScene_height);
	RING_API_REGISTER("qgraphicsscene_inputmethodquery",ring_QGraphicsScene_inputMethodQuery);
	RING_API_REGISTER("qgraphicsscene_invalidate",ring_QGraphicsScene_invalidate);
	RING_API_REGISTER("qgraphicsscene_isactive",ring_QGraphicsScene_isActive);
	RING_API_REGISTER("qgraphicsscene_itemat",ring_QGraphicsScene_itemAt);
	RING_API_REGISTER("qgraphicsscene_itemat_2",ring_QGraphicsScene_itemAt_2);
	RING_API_REGISTER("qgraphicsscene_itemindexmethod",ring_QGraphicsScene_itemIndexMethod);
	RING_API_REGISTER("qgraphicsscene_items",ring_QGraphicsScene_items);
	RING_API_REGISTER("qgraphicsscene_items_2",ring_QGraphicsScene_items_2);
	RING_API_REGISTER("qgraphicsscene_items_3",ring_QGraphicsScene_items_3);
	RING_API_REGISTER("qgraphicsscene_items_4",ring_QGraphicsScene_items_4);
	RING_API_REGISTER("qgraphicsscene_items_5",ring_QGraphicsScene_items_5);
	RING_API_REGISTER("qgraphicsscene_items_6",ring_QGraphicsScene_items_6);
	RING_API_REGISTER("qgraphicsscene_itemsboundingrect",ring_QGraphicsScene_itemsBoundingRect);
	RING_API_REGISTER("qgraphicsscene_minimumrendersize",ring_QGraphicsScene_minimumRenderSize);
	RING_API_REGISTER("qgraphicsscene_mousegrabberitem",ring_QGraphicsScene_mouseGrabberItem);
	RING_API_REGISTER("qgraphicsscene_palette",ring_QGraphicsScene_palette);
	RING_API_REGISTER("qgraphicsscene_removeitem",ring_QGraphicsScene_removeItem);
	RING_API_REGISTER("qgraphicsscene_render",ring_QGraphicsScene_render);
	RING_API_REGISTER("qgraphicsscene_scenerect",ring_QGraphicsScene_sceneRect);
	RING_API_REGISTER("qgraphicsscene_selecteditems",ring_QGraphicsScene_selectedItems);
	RING_API_REGISTER("qgraphicsscene_selectionarea",ring_QGraphicsScene_selectionArea);
	RING_API_REGISTER("qgraphicsscene_sendevent",ring_QGraphicsScene_sendEvent);
	RING_API_REGISTER("qgraphicsscene_setactivepanel",ring_QGraphicsScene_setActivePanel);
	RING_API_REGISTER("qgraphicsscene_setactivewindow",ring_QGraphicsScene_setActiveWindow);
	RING_API_REGISTER("qgraphicsscene_setbackgroundbrush",ring_QGraphicsScene_setBackgroundBrush);
	RING_API_REGISTER("qgraphicsscene_setbsptreedepth",ring_QGraphicsScene_setBspTreeDepth);
	RING_API_REGISTER("qgraphicsscene_setfocus",ring_QGraphicsScene_setFocus);
	RING_API_REGISTER("qgraphicsscene_setfocusitem",ring_QGraphicsScene_setFocusItem);
	RING_API_REGISTER("qgraphicsscene_setfont",ring_QGraphicsScene_setFont);
	RING_API_REGISTER("qgraphicsscene_setforegroundbrush",ring_QGraphicsScene_setForegroundBrush);
	RING_API_REGISTER("qgraphicsscene_setitemindexmethod",ring_QGraphicsScene_setItemIndexMethod);
	RING_API_REGISTER("qgraphicsscene_setminimumrendersize",ring_QGraphicsScene_setMinimumRenderSize);
	RING_API_REGISTER("qgraphicsscene_setpalette",ring_QGraphicsScene_setPalette);
	RING_API_REGISTER("qgraphicsscene_setscenerect",ring_QGraphicsScene_setSceneRect);
	RING_API_REGISTER("qgraphicsscene_setscenerect_2",ring_QGraphicsScene_setSceneRect_2);
	RING_API_REGISTER("qgraphicsscene_setselectionarea",ring_QGraphicsScene_setSelectionArea);
	RING_API_REGISTER("qgraphicsscene_setselectionarea_2",ring_QGraphicsScene_setSelectionArea_2);
	RING_API_REGISTER("qgraphicsscene_setselectionarea_3",ring_QGraphicsScene_setSelectionArea_3);
	RING_API_REGISTER("qgraphicsscene_setstickyfocus",ring_QGraphicsScene_setStickyFocus);
	RING_API_REGISTER("qgraphicsscene_setstyle",ring_QGraphicsScene_setStyle);
	RING_API_REGISTER("qgraphicsscene_stickyfocus",ring_QGraphicsScene_stickyFocus);
	RING_API_REGISTER("qgraphicsscene_style",ring_QGraphicsScene_style);
	RING_API_REGISTER("qgraphicsscene_update",ring_QGraphicsScene_update);
	RING_API_REGISTER("qgraphicsscene_views",ring_QGraphicsScene_views);
	RING_API_REGISTER("qgraphicsscene_width",ring_QGraphicsScene_width);
	RING_API_REGISTER("qgraphicsscene_advance",ring_QGraphicsScene_advance);
	RING_API_REGISTER("qgraphicsscene_clear",ring_QGraphicsScene_clear);
	RING_API_REGISTER("qgraphicsscene_clearselection",ring_QGraphicsScene_clearSelection);
	RING_API_REGISTER("qgraphicsscene_invalidate_2",ring_QGraphicsScene_invalidate_2);
	RING_API_REGISTER("qgraphicsscene_update_2",ring_QGraphicsScene_update_2);
	RING_API_REGISTER("qgraphicsscene_setchangedevent",ring_QGraphicsScene_setchangedEvent);
	RING_API_REGISTER("qgraphicsscene_setfocusitemchangedevent",ring_QGraphicsScene_setfocusItemChangedEvent);
	RING_API_REGISTER("qgraphicsscene_setscenerectchangedevent",ring_QGraphicsScene_setsceneRectChangedEvent);
	RING_API_REGISTER("qgraphicsscene_setselectionchangedevent",ring_QGraphicsScene_setselectionChangedEvent);
	RING_API_REGISTER("qgraphicsscene_getchangedevent",ring_QGraphicsScene_getchangedEvent);
	RING_API_REGISTER("qgraphicsscene_getfocusitemchangedevent",ring_QGraphicsScene_getfocusItemChangedEvent);
	RING_API_REGISTER("qgraphicsscene_getscenerectchangedevent",ring_QGraphicsScene_getsceneRectChangedEvent);
	RING_API_REGISTER("qgraphicsscene_getselectionchangedevent",ring_QGraphicsScene_getselectionChangedEvent);
	RING_API_REGISTER("qstyle_combinedlayoutspacing",ring_QStyle_combinedLayoutSpacing);
	RING_API_REGISTER("qstyle_drawcomplexcontrol",ring_QStyle_drawComplexControl);
	RING_API_REGISTER("qstyle_drawcontrol",ring_QStyle_drawControl);
	RING_API_REGISTER("qstyle_drawitempixmap",ring_QStyle_drawItemPixmap);
	RING_API_REGISTER("qstyle_drawitemtext",ring_QStyle_drawItemText);
	RING_API_REGISTER("qstyle_drawprimitive",ring_QStyle_drawPrimitive);
	RING_API_REGISTER("qstyle_generatediconpixmap",ring_QStyle_generatedIconPixmap);
	RING_API_REGISTER("qstyle_hittestcomplexcontrol",ring_QStyle_hitTestComplexControl);
	RING_API_REGISTER("qstyle_itempixmaprect",ring_QStyle_itemPixmapRect);
	RING_API_REGISTER("qstyle_itemtextrect",ring_QStyle_itemTextRect);
	RING_API_REGISTER("qstyle_layoutspacing",ring_QStyle_layoutSpacing);
	RING_API_REGISTER("qstyle_pixelmetric",ring_QStyle_pixelMetric);
	RING_API_REGISTER("qstyle_pixelmetric_2",ring_QStyle_pixelMetric_2);
	RING_API_REGISTER("qstyle_polish",ring_QStyle_polish);
	RING_API_REGISTER("qstyle_polish_2",ring_QStyle_polish_2);
	RING_API_REGISTER("qstyle_polish_3",ring_QStyle_polish_3);
	RING_API_REGISTER("qstyle_proxy",ring_QStyle_proxy);
	RING_API_REGISTER("qstyle_sizefromcontents",ring_QStyle_sizeFromContents);
	RING_API_REGISTER("qstyle_standardicon",ring_QStyle_standardIcon);
	RING_API_REGISTER("qstyle_standardpalette",ring_QStyle_standardPalette);
	RING_API_REGISTER("qstyle_stylehint",ring_QStyle_styleHint);
	RING_API_REGISTER("qstyle_subcontrolrect",ring_QStyle_subControlRect);
	RING_API_REGISTER("qstyle_subelementrect",ring_QStyle_subElementRect);
	RING_API_REGISTER("qstyle_unpolish",ring_QStyle_unpolish);
	RING_API_REGISTER("qstyle_unpolish_2",ring_QStyle_unpolish_2);
	RING_API_REGISTER("qstyle_alignedrect",ring_QStyle_alignedRect);
	RING_API_REGISTER("qstyle_sliderpositionfromvalue",ring_QStyle_sliderPositionFromValue);
	RING_API_REGISTER("qstyle_slidervaluefromposition",ring_QStyle_sliderValueFromPosition);
	RING_API_REGISTER("qstyle_visualalignment",ring_QStyle_visualAlignment);
	RING_API_REGISTER("qstyle_visualpos",ring_QStyle_visualPos);
	RING_API_REGISTER("qstyle_visualrect",ring_QStyle_visualRect);
	RING_API_REGISTER("qtest_qsleep",ring_QTest_qsleep);
	RING_API_REGISTER("qobject_new",ring_QObject_new);
	RING_API_REGISTER("qsize_new",ring_QSize_new);
	RING_API_REGISTER("qdir_new",ring_QDir_new);
	RING_API_REGISTER("qurl_new",ring_QUrl_new);
	RING_API_REGISTER("qevent_new",ring_QEvent_new);
	RING_API_REGISTER("qtimer_new",ring_QTimer_new);
	RING_API_REGISTER("qbytearray_new",ring_QByteArray_new);
	RING_API_REGISTER("qfileinfo_new",ring_QFileInfo_new);
	RING_API_REGISTER("qstringlist_new",ring_QStringList_new);
	RING_API_REGISTER("qrect_new",ring_QRect_new);
	RING_API_REGISTER("qtime_new",ring_QTime_new);
	RING_API_REGISTER("qdate_new",ring_QDate_new);
	RING_API_REGISTER("qvariant_new",ring_QVariant_new);
	RING_API_REGISTER("qvariant2_new",ring_QVariant2_new);
	RING_API_REGISTER("qvariant3_new",ring_QVariant3_new);
	RING_API_REGISTER("qvariant4_new",ring_QVariant4_new);
	RING_API_REGISTER("qvariant5_new",ring_QVariant5_new);
	RING_API_REGISTER("qvariantint_new",ring_QVariantInt_new);
	RING_API_REGISTER("qvariantfloat_new",ring_QVariantFloat_new);
	RING_API_REGISTER("qvariantdouble_new",ring_QVariantDouble_new);
	RING_API_REGISTER("qvariantstring_new",ring_QVariantString_new);
	RING_API_REGISTER("qxmlstreamreader_new",ring_QXmlStreamReader_new);
	RING_API_REGISTER("qxmlstreamwriter_new",ring_QXmlStreamWriter_new);
	RING_API_REGISTER("qxmlstreamnotationdeclaration_new",ring_QXmlStreamNotationDeclaration_new);
	RING_API_REGISTER("qxmlstreamnamespacedeclaration_new",ring_QXmlStreamNamespaceDeclaration_new);
	RING_API_REGISTER("qxmlstreamentitydeclaration_new",ring_QXmlStreamEntityDeclaration_new);
	RING_API_REGISTER("qxmlstreamentityresolver_new",ring_QXmlStreamEntityResolver_new);
	RING_API_REGISTER("qxmlstreamattributes_new",ring_QXmlStreamAttributes_new);
	RING_API_REGISTER("qxmlstreamattribute_new",ring_QXmlStreamAttribute_new);
	RING_API_REGISTER("qregularexpression_new",ring_QRegularExpression_new);
	RING_API_REGISTER("qregularexpressionmatch_new",ring_QRegularExpressionMatch_new);
	RING_API_REGISTER("qregularexpressionmatchiterator_new",ring_QRegularExpressionMatchIterator_new);
	RING_API_REGISTER("qjsonarray_new",ring_QJsonArray_new);
	RING_API_REGISTER("qjsondocument_new",ring_QJsonDocument_new);
	RING_API_REGISTER("qjsonobject_new",ring_QJsonObject_new);
	RING_API_REGISTER("qjsonparseerror_new",ring_QJsonParseError_new);
	RING_API_REGISTER("qjsonvalue_new",ring_QJsonValue_new);
	RING_API_REGISTER("qpointf_new",ring_QPointF_new);
	RING_API_REGISTER("qpoint_new",ring_QPoint_new);
	RING_API_REGISTER("qstring2_new",ring_QString2_new);
	RING_API_REGISTER("qstringref_new",ring_QStringRef_new);
	RING_API_REGISTER("qbuffer_new",ring_QBuffer_new);
	RING_API_REGISTER("qdatetime_new",ring_QDateTime_new);
	RING_API_REGISTER("qfile_new",ring_QFile_new);
	RING_API_REGISTER("qfile2_new",ring_QFile2_new);
	RING_API_REGISTER("qmimedata_new",ring_QMimeData_new);
	RING_API_REGISTER("qchar_new",ring_QChar_new);
	RING_API_REGISTER("qchildevent_new",ring_QChildEvent_new);
	RING_API_REGISTER("qtextstream_new",ring_QTextStream_new);
	RING_API_REGISTER("qtextstream2_new",ring_QTextStream2_new);
	RING_API_REGISTER("qtextstream3_new",ring_QTextStream3_new);
	RING_API_REGISTER("qtextstream4_new",ring_QTextStream4_new);
	RING_API_REGISTER("qtextstream5_new",ring_QTextStream5_new);
	RING_API_REGISTER("qlocale_new",ring_QLocale_new);
	RING_API_REGISTER("qthread_new",ring_QThread_new);
	RING_API_REGISTER("qthreadpool_new",ring_QThreadPool_new);
	RING_API_REGISTER("qprocess_new",ring_QProcess_new);
	RING_API_REGISTER("quuid_new",ring_QUuid_new);
	RING_API_REGISTER("qmutex_new",ring_QMutex_new);
	RING_API_REGISTER("qmutexlocker_new",ring_QMutexLocker_new);
	RING_API_REGISTER("qbitmap_new",ring_QBitmap_new);
	RING_API_REGISTER("qpixmap_new",ring_QPixmap_new);
	RING_API_REGISTER("qpixmap2_new",ring_QPixmap2_new);
	RING_API_REGISTER("qicon_new",ring_QIcon_new);
	RING_API_REGISTER("qpainter_new",ring_QPainter_new);
	RING_API_REGISTER("qpainter2_new",ring_QPainter2_new);
	RING_API_REGISTER("qpicture_new",ring_QPicture_new);
	RING_API_REGISTER("qpen_new",ring_QPen_new);
	RING_API_REGISTER("qcolor_new",ring_QColor_new);
	RING_API_REGISTER("qfont_new",ring_QFont_new);
	RING_API_REGISTER("qbrush_new",ring_QBrush_new);
	RING_API_REGISTER("qtextcursor_new",ring_QTextCursor_new);
	RING_API_REGISTER("qkeysequence_new",ring_QKeySequence_new);
	RING_API_REGISTER("qtextdocument_new",ring_QTextDocument_new);
	RING_API_REGISTER("qtextblock_new",ring_QTextBlock_new);
	RING_API_REGISTER("qpainterpath_new",ring_QPainterPath_new);
	RING_API_REGISTER("qimage_new",ring_QImage_new);
	RING_API_REGISTER("qtextcharformat_new",ring_QTextCharFormat_new);
	RING_API_REGISTER("qfontmetrics_new",ring_QFontMetrics_new);
	RING_API_REGISTER("qlineargradient_new",ring_QLinearGradient_new);
	RING_API_REGISTER("qcursor_new",ring_QCursor_new);
	RING_API_REGISTER("qwindow_new",ring_QWindow_new);
	RING_API_REGISTER("qguiapplication_new",ring_QGuiApplication_new);
	RING_API_REGISTER("qregion_new",ring_QRegion_new);
	RING_API_REGISTER("qvector2d_new",ring_QVector2D_new);
	RING_API_REGISTER("qvector3d_new",ring_QVector3D_new);
	RING_API_REGISTER("qvector4d_new",ring_QVector4D_new);
	RING_API_REGISTER("qquaternion_new",ring_QQuaternion_new);
	RING_API_REGISTER("qmatrix4x4_new",ring_QMatrix4x4_new);
	RING_API_REGISTER("qdrag_new",ring_QDrag_new);
	RING_API_REGISTER("qdropevent_new",ring_QDropEvent_new);
	RING_API_REGISTER("qdragmoveevent_new",ring_QDragMoveEvent_new);
	RING_API_REGISTER("qdragenterevent_new",ring_QDragEnterEvent_new);
	RING_API_REGISTER("qdragleaveevent_new",ring_QDragLeaveEvent_new);
	RING_API_REGISTER("qmovie_new",ring_QMovie_new);
	RING_API_REGISTER("qwidget_new",ring_QWidget_new);
	RING_API_REGISTER("qlabel_new",ring_QLabel_new);
	RING_API_REGISTER("qpushbutton_new",ring_QPushButton_new);
	RING_API_REGISTER("qlineedit_new",ring_QLineEdit_new);
	RING_API_REGISTER("qvboxlayout_new",ring_QVBoxLayout_new);
	RING_API_REGISTER("qhboxlayout_new",ring_QHBoxLayout_new);
	RING_API_REGISTER("qtextedit_new",ring_QTextEdit_new);
	RING_API_REGISTER("qlistwidget_new",ring_QListWidget_new);
	RING_API_REGISTER("qtreeview_new",ring_QTreeView_new);
	RING_API_REGISTER("qfilesystemmodel_new",ring_QFileSystemModel_new);
	RING_API_REGISTER("qtreewidget_new",ring_QTreeWidget_new);
	RING_API_REGISTER("qtreewidgetitem_new",ring_QTreeWidgetItem_new);
	RING_API_REGISTER("qcombobox_new",ring_QComboBox_new);
	RING_API_REGISTER("qmenubar_new",ring_QMenuBar_new);
	RING_API_REGISTER("qmenu_new",ring_QMenu_new);
	RING_API_REGISTER("qtoolbar_new",ring_QToolBar_new);
	RING_API_REGISTER("qmainwindow_new",ring_QMainWindow_new);
	RING_API_REGISTER("qstatusbar_new",ring_QStatusBar_new);
	RING_API_REGISTER("qdockwidget_new",ring_QDockWidget_new);
	RING_API_REGISTER("qtabwidget_new",ring_QTabWidget_new);
	RING_API_REGISTER("qtablewidgetitem_new",ring_QTableWidgetItem_new);
	RING_API_REGISTER("qframe_new",ring_QFrame_new);
	RING_API_REGISTER("qframe2_new",ring_QFrame2_new);
	RING_API_REGISTER("qframe3_new",ring_QFrame3_new);
	RING_API_REGISTER("qabstractscrollarea_new",ring_QAbstractScrollArea_new);
	RING_API_REGISTER("qtableview_new",ring_QTableView_new);
	RING_API_REGISTER("qtablewidget_new",ring_QTableWidget_new);
	RING_API_REGISTER("qprogressbar_new",ring_QProgressBar_new);
	RING_API_REGISTER("qspinbox_new",ring_QSpinBox_new);
	RING_API_REGISTER("qabstractslider_new",ring_QAbstractSlider_new);
	RING_API_REGISTER("qslider_new",ring_QSlider_new);
	RING_API_REGISTER("qdateedit_new",ring_QDateEdit_new);
	RING_API_REGISTER("qdatetimeedit_new",ring_QDateTimeEdit_new);
	RING_API_REGISTER("qabstractspinbox_new",ring_QAbstractSpinBox_new);
	RING_API_REGISTER("qdial_new",ring_QDial_new);
	RING_API_REGISTER("qcheckbox_new",ring_QCheckBox_new);
	RING_API_REGISTER("qradiobutton_new",ring_QRadioButton_new);
	RING_API_REGISTER("qbuttongroup_new",ring_QButtonGroup_new);
	RING_API_REGISTER("qaction_new",ring_QAction_new);
	RING_API_REGISTER("qmessagebox_new",ring_QMessageBox_new);
	RING_API_REGISTER("qfiledialog_new",ring_QFileDialog_new);
	RING_API_REGISTER("qdirmodel_new",ring_QDirModel_new);
	RING_API_REGISTER("qfontdialog_new",ring_QFontDialog_new);
	RING_API_REGISTER("qdialog_new",ring_QDialog_new);
	RING_API_REGISTER("qcolordialog_new",ring_QColorDialog_new);
	RING_API_REGISTER("qlcdnumber_new",ring_QLCDNumber_new);
	RING_API_REGISTER("qinputdialog_new",ring_QInputDialog_new);
	RING_API_REGISTER("qallevents_new",ring_QAllEvents_new);
	RING_API_REGISTER("qdesktopwidget_new",ring_QDesktopWidget_new);
	RING_API_REGISTER("qlistwidgetitem_new",ring_QListWidgetItem_new);
	RING_API_REGISTER("qsystemtrayicon_new",ring_QSystemTrayIcon_new);
	RING_API_REGISTER("ringcodehighlighter_new",ring_RingCodeHighlighter_new);
	RING_API_REGISTER("qplaintextedit_new",ring_QPlainTextEdit_new);
	RING_API_REGISTER("codeeditor_new",ring_CodeEditor_new);
	RING_API_REGISTER("qgridlayout_new",ring_QGridLayout_new);
	RING_API_REGISTER("qheaderview_new",ring_QHeaderView_new);
	RING_API_REGISTER("qsplashscreen_new",ring_QSplashScreen_new);
	RING_API_REGISTER("qboxlayout_new",ring_QBoxLayout_new);
	RING_API_REGISTER("qscrollarea_new",ring_QScrollArea_new);
	RING_API_REGISTER("qsplitter_new",ring_QSplitter_new);
	RING_API_REGISTER("qcompleter_new",ring_QCompleter_new);
	RING_API_REGISTER("qcompleter2_new",ring_QCompleter2_new);
	RING_API_REGISTER("qcompleter3_new",ring_QCompleter3_new);
	RING_API_REGISTER("qcompleter4_new",ring_QCompleter4_new);
	RING_API_REGISTER("qmdiarea_new",ring_QMdiArea_new);
	RING_API_REGISTER("qmdisubwindow_new",ring_QMdiSubWindow_new);
	RING_API_REGISTER("qlistview_new",ring_QListView_new);
	RING_API_REGISTER("qtoolbutton_new",ring_QToolButton_new);
	RING_API_REGISTER("qtextbrowser_new",ring_QTextBrowser_new);
	RING_API_REGISTER("qstackedwidget_new",ring_QStackedWidget_new);
	RING_API_REGISTER("qcalendarwidget_new",ring_QCalendarWidget_new);
	RING_API_REGISTER("qtabbar_new",ring_QTabBar_new);
	RING_API_REGISTER("qscrollbar_new",ring_QScrollBar_new);
	RING_API_REGISTER("qgraphicsview_new",ring_QGraphicsView_new);
	RING_API_REGISTER("qgraphicsscene_new",ring_QGraphicsScene_new);
	RING_API_REGISTER("qobject_delete",ring_QObject_delete);
	RING_API_REGISTER("qsize_delete",ring_QSize_delete);
	RING_API_REGISTER("qdir_delete",ring_QDir_delete);
	RING_API_REGISTER("qurl_delete",ring_QUrl_delete);
	RING_API_REGISTER("qevent_delete",ring_QEvent_delete);
	RING_API_REGISTER("qtimer_delete",ring_QTimer_delete);
	RING_API_REGISTER("qbytearray_delete",ring_QByteArray_delete);
	RING_API_REGISTER("qfileinfo_delete",ring_QFileInfo_delete);
	RING_API_REGISTER("qstringlist_delete",ring_QStringList_delete);
	RING_API_REGISTER("qrect_delete",ring_QRect_delete);
	RING_API_REGISTER("qtime_delete",ring_QTime_delete);
	RING_API_REGISTER("qdate_delete",ring_QDate_delete);
	RING_API_REGISTER("qvariant_delete",ring_QVariant_delete);
	RING_API_REGISTER("qvariant2_delete",ring_QVariant2_delete);
	RING_API_REGISTER("qvariant3_delete",ring_QVariant3_delete);
	RING_API_REGISTER("qvariant4_delete",ring_QVariant4_delete);
	RING_API_REGISTER("qvariant5_delete",ring_QVariant5_delete);
	RING_API_REGISTER("qvariantint_delete",ring_QVariantInt_delete);
	RING_API_REGISTER("qvariantfloat_delete",ring_QVariantFloat_delete);
	RING_API_REGISTER("qvariantdouble_delete",ring_QVariantDouble_delete);
	RING_API_REGISTER("qvariantstring_delete",ring_QVariantString_delete);
	RING_API_REGISTER("qxmlstreamreader_delete",ring_QXmlStreamReader_delete);
	RING_API_REGISTER("qxmlstreamwriter_delete",ring_QXmlStreamWriter_delete);
	RING_API_REGISTER("qxmlstreamnotationdeclaration_delete",ring_QXmlStreamNotationDeclaration_delete);
	RING_API_REGISTER("qxmlstreamnamespacedeclaration_delete",ring_QXmlStreamNamespaceDeclaration_delete);
	RING_API_REGISTER("qxmlstreamentitydeclaration_delete",ring_QXmlStreamEntityDeclaration_delete);
	RING_API_REGISTER("qxmlstreamentityresolver_delete",ring_QXmlStreamEntityResolver_delete);
	RING_API_REGISTER("qxmlstreamattributes_delete",ring_QXmlStreamAttributes_delete);
	RING_API_REGISTER("qxmlstreamattribute_delete",ring_QXmlStreamAttribute_delete);
	RING_API_REGISTER("qregularexpression_delete",ring_QRegularExpression_delete);
	RING_API_REGISTER("qregularexpressionmatch_delete",ring_QRegularExpressionMatch_delete);
	RING_API_REGISTER("qregularexpressionmatchiterator_delete",ring_QRegularExpressionMatchIterator_delete);
	RING_API_REGISTER("qjsonarray_delete",ring_QJsonArray_delete);
	RING_API_REGISTER("qjsondocument_delete",ring_QJsonDocument_delete);
	RING_API_REGISTER("qjsonobject_delete",ring_QJsonObject_delete);
	RING_API_REGISTER("qjsonparseerror_delete",ring_QJsonParseError_delete);
	RING_API_REGISTER("qjsonvalue_delete",ring_QJsonValue_delete);
	RING_API_REGISTER("qpointf_delete",ring_QPointF_delete);
	RING_API_REGISTER("qpoint_delete",ring_QPoint_delete);
	RING_API_REGISTER("qstring2_delete",ring_QString2_delete);
	RING_API_REGISTER("qstringref_delete",ring_QStringRef_delete);
	RING_API_REGISTER("qbuffer_delete",ring_QBuffer_delete);
	RING_API_REGISTER("qdatetime_delete",ring_QDateTime_delete);
	RING_API_REGISTER("qfile_delete",ring_QFile_delete);
	RING_API_REGISTER("qfile2_delete",ring_QFile2_delete);
	RING_API_REGISTER("qmimedata_delete",ring_QMimeData_delete);
	RING_API_REGISTER("qchar_delete",ring_QChar_delete);
	RING_API_REGISTER("qchildevent_delete",ring_QChildEvent_delete);
	RING_API_REGISTER("qtextstream_delete",ring_QTextStream_delete);
	RING_API_REGISTER("qtextstream2_delete",ring_QTextStream2_delete);
	RING_API_REGISTER("qtextstream3_delete",ring_QTextStream3_delete);
	RING_API_REGISTER("qtextstream4_delete",ring_QTextStream4_delete);
	RING_API_REGISTER("qtextstream5_delete",ring_QTextStream5_delete);
	RING_API_REGISTER("qlocale_delete",ring_QLocale_delete);
	RING_API_REGISTER("qthread_delete",ring_QThread_delete);
	RING_API_REGISTER("qthreadpool_delete",ring_QThreadPool_delete);
	RING_API_REGISTER("qprocess_delete",ring_QProcess_delete);
	RING_API_REGISTER("quuid_delete",ring_QUuid_delete);
	RING_API_REGISTER("qmutex_delete",ring_QMutex_delete);
	RING_API_REGISTER("qmutexlocker_delete",ring_QMutexLocker_delete);
	RING_API_REGISTER("qbitmap_delete",ring_QBitmap_delete);
	RING_API_REGISTER("qpixmap_delete",ring_QPixmap_delete);
	RING_API_REGISTER("qpixmap2_delete",ring_QPixmap2_delete);
	RING_API_REGISTER("qicon_delete",ring_QIcon_delete);
	RING_API_REGISTER("qpainter_delete",ring_QPainter_delete);
	RING_API_REGISTER("qpainter2_delete",ring_QPainter2_delete);
	RING_API_REGISTER("qpicture_delete",ring_QPicture_delete);
	RING_API_REGISTER("qpen_delete",ring_QPen_delete);
	RING_API_REGISTER("qcolor_delete",ring_QColor_delete);
	RING_API_REGISTER("qfont_delete",ring_QFont_delete);
	RING_API_REGISTER("qbrush_delete",ring_QBrush_delete);
	RING_API_REGISTER("qtextcursor_delete",ring_QTextCursor_delete);
	RING_API_REGISTER("qkeysequence_delete",ring_QKeySequence_delete);
	RING_API_REGISTER("qtextdocument_delete",ring_QTextDocument_delete);
	RING_API_REGISTER("qtextblock_delete",ring_QTextBlock_delete);
	RING_API_REGISTER("qpainterpath_delete",ring_QPainterPath_delete);
	RING_API_REGISTER("qimage_delete",ring_QImage_delete);
	RING_API_REGISTER("qtextcharformat_delete",ring_QTextCharFormat_delete);
	RING_API_REGISTER("qfontmetrics_delete",ring_QFontMetrics_delete);
	RING_API_REGISTER("qlineargradient_delete",ring_QLinearGradient_delete);
	RING_API_REGISTER("qcursor_delete",ring_QCursor_delete);
	RING_API_REGISTER("qwindow_delete",ring_QWindow_delete);
	RING_API_REGISTER("qguiapplication_delete",ring_QGuiApplication_delete);
	RING_API_REGISTER("qregion_delete",ring_QRegion_delete);
	RING_API_REGISTER("qvector2d_delete",ring_QVector2D_delete);
	RING_API_REGISTER("qvector3d_delete",ring_QVector3D_delete);
	RING_API_REGISTER("qvector4d_delete",ring_QVector4D_delete);
	RING_API_REGISTER("qquaternion_delete",ring_QQuaternion_delete);
	RING_API_REGISTER("qmatrix4x4_delete",ring_QMatrix4x4_delete);
	RING_API_REGISTER("qdrag_delete",ring_QDrag_delete);
	RING_API_REGISTER("qdropevent_delete",ring_QDropEvent_delete);
	RING_API_REGISTER("qdragmoveevent_delete",ring_QDragMoveEvent_delete);
	RING_API_REGISTER("qdragenterevent_delete",ring_QDragEnterEvent_delete);
	RING_API_REGISTER("qdragleaveevent_delete",ring_QDragLeaveEvent_delete);
	RING_API_REGISTER("qmovie_delete",ring_QMovie_delete);
	RING_API_REGISTER("qwidget_delete",ring_QWidget_delete);
	RING_API_REGISTER("qlabel_delete",ring_QLabel_delete);
	RING_API_REGISTER("qpushbutton_delete",ring_QPushButton_delete);
	RING_API_REGISTER("qlineedit_delete",ring_QLineEdit_delete);
	RING_API_REGISTER("qvboxlayout_delete",ring_QVBoxLayout_delete);
	RING_API_REGISTER("qhboxlayout_delete",ring_QHBoxLayout_delete);
	RING_API_REGISTER("qtextedit_delete",ring_QTextEdit_delete);
	RING_API_REGISTER("qlistwidget_delete",ring_QListWidget_delete);
	RING_API_REGISTER("qtreeview_delete",ring_QTreeView_delete);
	RING_API_REGISTER("qfilesystemmodel_delete",ring_QFileSystemModel_delete);
	RING_API_REGISTER("qtreewidget_delete",ring_QTreeWidget_delete);
	RING_API_REGISTER("qtreewidgetitem_delete",ring_QTreeWidgetItem_delete);
	RING_API_REGISTER("qcombobox_delete",ring_QComboBox_delete);
	RING_API_REGISTER("qmenubar_delete",ring_QMenuBar_delete);
	RING_API_REGISTER("qmenu_delete",ring_QMenu_delete);
	RING_API_REGISTER("qtoolbar_delete",ring_QToolBar_delete);
	RING_API_REGISTER("qmainwindow_delete",ring_QMainWindow_delete);
	RING_API_REGISTER("qstatusbar_delete",ring_QStatusBar_delete);
	RING_API_REGISTER("qdockwidget_delete",ring_QDockWidget_delete);
	RING_API_REGISTER("qtabwidget_delete",ring_QTabWidget_delete);
	RING_API_REGISTER("qtablewidgetitem_delete",ring_QTableWidgetItem_delete);
	RING_API_REGISTER("qframe_delete",ring_QFrame_delete);
	RING_API_REGISTER("qframe2_delete",ring_QFrame2_delete);
	RING_API_REGISTER("qframe3_delete",ring_QFrame3_delete);
	RING_API_REGISTER("qabstractscrollarea_delete",ring_QAbstractScrollArea_delete);
	RING_API_REGISTER("qtableview_delete",ring_QTableView_delete);
	RING_API_REGISTER("qtablewidget_delete",ring_QTableWidget_delete);
	RING_API_REGISTER("qprogressbar_delete",ring_QProgressBar_delete);
	RING_API_REGISTER("qspinbox_delete",ring_QSpinBox_delete);
	RING_API_REGISTER("qabstractslider_delete",ring_QAbstractSlider_delete);
	RING_API_REGISTER("qslider_delete",ring_QSlider_delete);
	RING_API_REGISTER("qdateedit_delete",ring_QDateEdit_delete);
	RING_API_REGISTER("qdatetimeedit_delete",ring_QDateTimeEdit_delete);
	RING_API_REGISTER("qabstractspinbox_delete",ring_QAbstractSpinBox_delete);
	RING_API_REGISTER("qdial_delete",ring_QDial_delete);
	RING_API_REGISTER("qcheckbox_delete",ring_QCheckBox_delete);
	RING_API_REGISTER("qradiobutton_delete",ring_QRadioButton_delete);
	RING_API_REGISTER("qbuttongroup_delete",ring_QButtonGroup_delete);
	RING_API_REGISTER("qaction_delete",ring_QAction_delete);
	RING_API_REGISTER("qmessagebox_delete",ring_QMessageBox_delete);
	RING_API_REGISTER("qfiledialog_delete",ring_QFileDialog_delete);
	RING_API_REGISTER("qdirmodel_delete",ring_QDirModel_delete);
	RING_API_REGISTER("qfontdialog_delete",ring_QFontDialog_delete);
	RING_API_REGISTER("qdialog_delete",ring_QDialog_delete);
	RING_API_REGISTER("qcolordialog_delete",ring_QColorDialog_delete);
	RING_API_REGISTER("qlcdnumber_delete",ring_QLCDNumber_delete);
	RING_API_REGISTER("qinputdialog_delete",ring_QInputDialog_delete);
	RING_API_REGISTER("qallevents_delete",ring_QAllEvents_delete);
	RING_API_REGISTER("qdesktopwidget_delete",ring_QDesktopWidget_delete);
	RING_API_REGISTER("qlistwidgetitem_delete",ring_QListWidgetItem_delete);
	RING_API_REGISTER("qsystemtrayicon_delete",ring_QSystemTrayIcon_delete);
	RING_API_REGISTER("ringcodehighlighter_delete",ring_RingCodeHighlighter_delete);
	RING_API_REGISTER("qplaintextedit_delete",ring_QPlainTextEdit_delete);
	RING_API_REGISTER("codeeditor_delete",ring_CodeEditor_delete);
	RING_API_REGISTER("qgridlayout_delete",ring_QGridLayout_delete);
	RING_API_REGISTER("qheaderview_delete",ring_QHeaderView_delete);
	RING_API_REGISTER("qsplashscreen_delete",ring_QSplashScreen_delete);
	RING_API_REGISTER("qboxlayout_delete",ring_QBoxLayout_delete);
	RING_API_REGISTER("qscrollarea_delete",ring_QScrollArea_delete);
	RING_API_REGISTER("qsplitter_delete",ring_QSplitter_delete);
	RING_API_REGISTER("qcompleter_delete",ring_QCompleter_delete);
	RING_API_REGISTER("qcompleter2_delete",ring_QCompleter2_delete);
	RING_API_REGISTER("qcompleter3_delete",ring_QCompleter3_delete);
	RING_API_REGISTER("qcompleter4_delete",ring_QCompleter4_delete);
	RING_API_REGISTER("qmdiarea_delete",ring_QMdiArea_delete);
	RING_API_REGISTER("qmdisubwindow_delete",ring_QMdiSubWindow_delete);
	RING_API_REGISTER("qlistview_delete",ring_QListView_delete);
	RING_API_REGISTER("qtoolbutton_delete",ring_QToolButton_delete);
	RING_API_REGISTER("qtextbrowser_delete",ring_QTextBrowser_delete);
	RING_API_REGISTER("qstackedwidget_delete",ring_QStackedWidget_delete);
	RING_API_REGISTER("qcalendarwidget_delete",ring_QCalendarWidget_delete);
	RING_API_REGISTER("qtabbar_delete",ring_QTabBar_delete);
	RING_API_REGISTER("qscrollbar_delete",ring_QScrollBar_delete);
	RING_API_REGISTER("qgraphicsview_delete",ring_QGraphicsView_delete);
	RING_API_REGISTER("qgraphicsscene_delete",ring_QGraphicsScene_delete);
}
