<class>
name: QWebView
para: QWidget *parent
parent: QWidget
codename: GWebView
passvmpointer
</class>

<comment>
bool findText(QString, QWebPage::FindFlag options)
</comment>
bool hasSelection(void)
QWebHistory *history(void)
<comment>
QIcon icon(void)
bool isModified(void)
</comment>
void load(QUrl) # In RingQt use : void loadpage(QUrl) 
<comment>
void load(QNetworkRequest , int operation, QByteArray))
</comment>
QWebPage *page(void)
QAction *pageAction(QWebPage::WebAction action)
<comment>
int renderHints(void)
QString selectedHtml(void)
</comment>
QString selectedText(void)
void setContent(QByteArray,QString,QUrl)
void setHtml(QString,QUrl)
void setPage(QWebPage *page)
<comment>
void setRenderHint(QPainter::RenderHint hint, bool enabled)
void setRenderHints(QPainter::RenderHint hints)
void setTextSizeMultiplier(qreal factor)
</comment>
void setUrl(QUrl)
void setZoomFactor(qreal factor)
QWebSettings *settings(void)
<comment>
qreal textSizeMultiplier(void)
</comment>
QString title(void)
void triggerPageAction(QWebPage::WebAction action, bool checked)
QUrl url(void)
qreal zoomFactor(void)
void back(void)
void forward(void)
void print(QPrinter *printer)
void reload(void)
void stop(void)

<comment>
void seticonChangedEvent(const char *)
void setlinkClickedEvent(const char *)
</comment>
void setloadFinishedEvent(const char *)
void setloadProgressEvent(const char *)
void setloadStartedEvent(const char *)
void setselectionChangedEvent(const char *)
<comment>
void setstatusBarMessageEvent(const char *)
</comment>
void settitleChangedEvent(const char *)
void seturlChangedEvent(const char *)

const char *getloadFinishedEvent(void)
const char *getloadProgressEvent(void)
const char *getloadStartedEvent(void)
const char *getselectionChangedEvent(void)
const char *gettitleChangedEvent(void)
const char *geturlChangedEvent(void)
