<class>
name: QOpenGLFunctions_3_2_Core
para: void
</class>

void glActiveTexture(GLenum texture)
void glAttachShader(GLuint program, GLuint shader)
void glBeginConditionalRender(GLuint id, GLenum mode)
void glBeginQuery(GLenum target, GLuint id)
void glBeginTransformFeedback(GLenum primitiveMode)
void glBindAttribLocation(GLuint program, GLuint index, GLchar *name)
void glBindBuffer(GLenum target, GLuint buffer)
void glBindBufferBase(GLenum target, GLuint index, GLuint buffer)
void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
void glBindFragDataLocation(GLuint program, GLuint color, GLchar *name)
void glBindFramebuffer(GLenum target, GLuint framebuffer)
void glBindRenderbuffer(GLenum target, GLuint renderbuffer)
void glBindTexture(GLenum target, GLuint texture)
void glBindVertexArray(GLuint array)
void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
void glBlendEquation(GLenum mode)
void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)
void glBlendFunc(GLenum sfactor, GLenum dfactor)
void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
void glBufferData(GLenum target, GLsizeiptr size, GLvoid *data, GLenum usage)
void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data)
GLenum glCheckFramebufferStatus(GLenum target)
void glClampColor(GLenum target, GLenum clamp)
void glClear(GLbitfield mask)
void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
void glClearBufferfv(GLenum buffer, GLint drawbuffer, GLfloat *value)
void glClearBufferiv(GLenum buffer, GLint drawbuffer, GLint *value)
void glClearBufferuiv(GLenum buffer, GLint drawbuffer, GLuint *value)
void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
void glClearDepth(GLdouble depth)
void glClearStencil(GLint s)
GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
void glCompileShader(GLuint shader)
void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid *data)
void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid *data)
void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid *data)
void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid *data)
void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid *data)
void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid *data)
void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
GLuint glCreateProgram(void)
GLuint glCreateShader(GLenum type)
void glCullFace(GLenum mode)
void glDeleteBuffers(GLsizei n, GLuint *buffers)
void glDeleteFramebuffers(GLsizei n, GLuint *framebuffers)
void glDeleteProgram(GLuint program)
void glDeleteQueries(GLsizei n, GLuint *ids)
void glDeleteRenderbuffers(GLsizei n, GLuint *renderbuffers)
void glDeleteShader(GLuint shader)
void glDeleteSync(GLsync sync)
void glDeleteTextures(GLsizei n, GLuint *textures)
void glDeleteVertexArrays(GLsizei n, GLuint *arrays)
void glDepthFunc(GLenum func)
void glDepthMask(GLboolean flag)
void glDepthRange(GLdouble nearVal, GLdouble farVal)
void glDetachShader(GLuint program, GLuint shader)
void glDisable(GLenum cap)
void glDisableVertexAttribArray(GLuint index)
void glDisablei(GLenum target, GLuint index)
void glDrawArrays(GLenum mode, GLint first, GLsizei count)
void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount)
void glDrawBuffer(GLenum mode)
void glDrawBuffers(GLsizei n, GLenum *bufs)
void glDrawElements(GLenum mode, GLsizei count, GLenum type, GLvoid *indices)
void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, GLvoid *indices, GLint basevertex)
void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, GLvoid *indices, GLsizei instancecount)
void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, GLvoid *indices, GLsizei instancecount, GLint basevertex)
void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid *indices)
void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid *indices, GLint basevertex)
void glEnable(GLenum cap)
void glEnableVertexAttribArray(GLuint index)
void glEnablei(GLenum target, GLuint index)
void glEndConditionalRender(void)
void glEndQuery(GLenum target)
void glEndTransformFeedback(void)
GLsync glFenceSync(GLenum condition, GLbitfield flags)
void glFinish(void)
void glFlush(void)
void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length)
void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level)
void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
void glFrontFace(GLenum mode)
void glGenBuffers(GLsizei n, GLuint *buffers)
void glGenFramebuffers(GLsizei n, GLuint *framebuffers)
void glGenQueries(GLsizei n, GLuint *ids)
void glGenRenderbuffers(GLsizei n, GLuint *renderbuffers)
void glGenTextures(GLsizei n, GLuint *textures)
void glGenVertexArrays(GLsizei n, GLuint *arrays)
void glGenerateMipmap(GLenum target)
void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName)
void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)
void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName)
void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, GLuint *uniformIndices, GLenum pname, GLint *params)
void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj)
GLint glGetAttribLocation(GLuint program, GLchar *name)
void glGetBooleani_v(GLenum target, GLuint index, GLboolean *data)
void glGetBooleanv(GLenum pname, GLboolean *params)
void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 *params)
void glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params)
<comment>
void glGetBufferPointerv(GLenum target, GLenum pname, GLvoid **params)
</comment>
void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data)
void glGetCompressedTexImage(GLenum target, GLint level, GLvoid *img)
void glGetDoublev(GLenum pname, GLdouble *params)
GLenum glGetError(void)
void glGetFloatv(GLenum pname, GLfloat *params)
GLint glGetFragDataLocation(GLuint program, GLchar *name)
void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params)
void glGetInteger64i_v(GLenum target, GLuint index, GLint64 *data)
void glGetInteger64v(GLenum pname, GLint64 *params)
void glGetIntegeri_v(GLenum target, GLuint index, GLint *data)
void glGetIntegerv(GLenum pname, GLint *params)
void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val)
<comment>
void glGetPointerv(GLenum pname, GLvoid **params)
</comment>
void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
void glGetProgramiv(GLuint program, GLenum pname, GLint *params)
void glGetQueryObjectiv(GLuint id, GLenum pname, GLint *params)
void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params)
void glGetQueryiv(GLenum target, GLenum pname, GLint *params)
void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params)
void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)
void glGetShaderiv(GLuint shader, GLenum pname, GLint *params)
GLubyte * glGetString(GLenum name)
GLubyte * glGetStringi(GLenum name, GLuint index)
void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params)
void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params)
void glGetTexParameterIiv(GLenum target, GLenum pname, GLint *params)
void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params)
void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params)
void glGetTexParameteriv(GLenum target, GLenum pname, GLint *params)
void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
GLuint glGetUniformBlockIndex(GLuint program, GLchar *uniformBlockName)
<comment>
void glGetUniformIndices(GLuint program, GLsizei uniformCount, GLchar * *uniformNames, GLuint *uniformIndices)
</comment>
GLint glGetUniformLocation(GLuint program, GLchar *name)
void glGetUniformfv(GLuint program, GLint location, GLfloat *params)
void glGetUniformiv(GLuint program, GLint location, GLint *params)
void glGetUniformuiv(GLuint program, GLint location, GLuint *params)
void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params)
void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params)
<comment>
void glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid **pointer)
</comment>
void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble *params)
void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params)
void glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params)
void glHint(GLenum target, GLenum mode)
void glIndexub(GLubyte c)
void glIndexubv(GLubyte *c)
GLboolean glIsBuffer(GLuint buffer)
GLboolean glIsEnabled(GLenum cap)
GLboolean glIsEnabledi(GLenum target, GLuint index)
GLboolean glIsFramebuffer(GLuint framebuffer)
GLboolean glIsProgram(GLuint program)
GLboolean glIsQuery(GLuint id)
GLboolean glIsRenderbuffer(GLuint renderbuffer)
GLboolean glIsShader(GLuint shader)
GLboolean glIsSync(GLsync sync)
GLboolean glIsTexture(GLuint texture)
GLboolean glIsVertexArray(GLuint array)
void glLineWidth(GLfloat width)
void glLinkProgram(GLuint program)
void glLogicOp(GLenum opcode)
GLvoid * glMapBuffer(GLenum target, GLenum access)
GLvoid * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
void glMultiDrawArrays(GLenum mode, GLint *first, GLsizei *count, GLsizei drawcount)
<comment>
void glMultiDrawElements(GLenum mode, GLsizei *count, GLenum type, GLvoid * *indices, GLsizei drawcount)
void glMultiDrawElementsBaseVertex(GLenum mode, GLsizei *count, GLenum type, GLvoid * *indices, GLsizei drawcount, GLint *basevertex)
</comment>
void glPixelStoref(GLenum pname, GLfloat param)
void glPixelStorei(GLenum pname, GLint param)
void glPointParameterf(GLenum pname, GLfloat param)
void glPointParameterfv(GLenum pname, GLfloat *params)
void glPointParameteri(GLenum pname, GLint param)
void glPointParameteriv(GLenum pname, GLint *params)
void glPointSize(GLfloat size)
void glPolygonMode(GLenum face, GLenum mode)
void glPolygonOffset(GLfloat factor, GLfloat units)
void glPrimitiveRestartIndex(GLuint index)
void glProvokingVertex(GLenum mode)
void glReadBuffer(GLenum mode)
void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
void glSampleCoverage(GLfloat value, GLboolean invert)
void glSampleMaski(GLuint index, GLbitfield mask)
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
<comment>
void glShaderSource(GLuint shader, GLsizei count, GLchar * *string, GLint *length)
</comment>
void glStencilFunc(GLenum func, GLint ref, GLuint mask)
void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask)
void glStencilMask(GLuint mask)
void glStencilMaskSeparate(GLenum face, GLuint mask)
void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)
void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer)
void glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid *pixels)
void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid *pixels)
void glTexImage2DMultisample(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid *pixels)
void glTexImage3DMultisample(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
void glTexParameterIiv(GLenum target, GLenum pname, GLint *params)
void glTexParameterIuiv(GLenum target, GLenum pname, GLuint *params)
void glTexParameterf(GLenum target, GLenum pname, GLfloat param)
void glTexParameterfv(GLenum target, GLenum pname, GLfloat *params)
void glTexParameteri(GLenum target, GLenum pname, GLint param)
void glTexParameteriv(GLenum target, GLenum pname, GLint *params)
void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid *pixels)
void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid *pixels)
<comment>
void glTransformFeedbackVaryings(GLuint program, GLsizei count, GLchar * *varyings, GLenum bufferMode)
</comment>
void glUniform1f(GLint location, GLfloat v0)
void glUniform1fv(GLint location, GLsizei count, GLfloat *value)
void glUniform1i(GLint location, GLint v0)
void glUniform1iv(GLint location, GLsizei count, GLint *value)
void glUniform1ui(GLint location, GLuint v0)
void glUniform1uiv(GLint location, GLsizei count, GLuint *value)
void glUniform2f(GLint location, GLfloat v0, GLfloat v1)
void glUniform2fv(GLint location, GLsizei count, GLfloat *value)
void glUniform2i(GLint location, GLint v0, GLint v1)
void glUniform2iv(GLint location, GLsizei count, GLint *value)
void glUniform2ui(GLint location, GLuint v0, GLuint v1)
void glUniform2uiv(GLint location, GLsizei count, GLuint *value)
void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
void glUniform3fv(GLint location, GLsizei count, GLfloat *value)
void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2)
void glUniform3iv(GLint location, GLsizei count, GLint *value)
void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2)
void glUniform3uiv(GLint location, GLsizei count, GLuint *value)
void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
void glUniform4fv(GLint location, GLsizei count, GLfloat *value)
void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
void glUniform4iv(GLint location, GLsizei count, GLint *value)
void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
void glUniform4uiv(GLint location, GLsizei count, GLuint *value)
void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat *value)
GLboolean glUnmapBuffer(GLenum target)
void glUseProgram(GLuint program)
void glValidateProgram(GLuint program)
<comment>
void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, GLvoid *pointer)
</comment>
void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid *pointer)
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
