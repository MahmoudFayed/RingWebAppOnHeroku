<class>
name: QOpenGLShaderProgram
para: QObject *
</class>

<comment>
bool addCacheableShaderFromSourceCode(QOpenGLShader::ShaderType type, char *source)
bool addCacheableShaderFromSourceCode@2(QOpenGLShader::ShaderType type, QByteArray source)
bool addCacheableShaderFromSourceCode@3(QOpenGLShader::ShaderType type, QString source)
bool addCacheableShaderFromSourceFile(QOpenGLShader::ShaderType type, QString fileName)
</comment>
bool addShader(QOpenGLShader *shader)
bool addShaderFromSourceCode(QOpenGLShader::ShaderType type, char *source)
bool addShaderFromSourceCode@2(QOpenGLShader::ShaderType type, QByteArray source)
bool addShaderFromSourceCode@3(QOpenGLShader::ShaderType type, QString source)
bool addShaderFromSourceFile(QOpenGLShader::ShaderType type, QString fileName)
int attributeLocation(char *name)
int attributeLocation@2(QByteArray name)
int attributeLocation@3(QString name)
bool bind(void)
void bindAttributeLocation(char *name, int location)
void bindAttributeLocation@2(QByteArray name, int location)
void bindAttributeLocation@3(QString name, int location)
<comment>
bool create(void)
</comment>
QVector<float> defaultInnerTessellationLevels(void)
QVector<float> defaultOuterTessellationLevels(void)
void disableAttributeArray(int location)
void disableAttributeArray@2(char *name)
void enableAttributeArray(int location)
void enableAttributeArray@2(char *name)
bool isLinked(void)
bool link(void)
QString log(void)
int maxGeometryOutputVertices(void)
int patchVertexCount(void)
GLuint programId(void)
void release(void)
void removeAllShaders(void)
void removeShader(QOpenGLShader *shader)
void setAttributeArray(int location, GLfloat *values, int tupleSize, int stride)
void setAttributeArray@2(int location, QVector2D *values, int stride)
void setAttributeArray@3(int location, QVector3D *values, int stride)
void setAttributeArray@4(int location, QVector4D *values, int stride)
void setAttributeArray@5(int location, GLenum type, void *values, int tupleSize, int stride)
void setAttributeArray@6(char *name, GLfloat *values, int tupleSize, int stride)
void setAttributeArray@7(char *name, QVector2D *values, int stride)
void setAttributeArray@8(char *name, QVector3D *values, int stride)
void setAttributeArray@9(char *name, QVector4D *values, int stride)
void setAttributeArray@10(char *name, GLenum type, void *values, int tupleSize, int stride)
void setAttributeBuffer(int location, GLenum type, int offset, int tupleSize, int stride)
void setAttributeBuffer@2(char *name, GLenum type, int offset, int tupleSize, int stride)
void setAttributeValue(int location, GLfloat value)
void setAttributeValue@2(int location, GLfloat x, GLfloat y)
void setAttributeValue@3(int location, GLfloat x, GLfloat y, GLfloat z)
void setAttributeValue@4(int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
void setAttributeValue@5(int location, QVector2D value)
void setAttributeValue@6(int location, QVector3D value)
void setAttributeValue@7(int location, QVector4D value)
void setAttributeValue@8(int location, QColor value)
void setAttributeValue@9(int location, GLfloat *values, int columns, int rows)
void setAttributeValue@10(char *name, GLfloat value)
void setAttributeValue@11(char *name, GLfloat x, GLfloat y)
void setAttributeValue@12(char *name, GLfloat x, GLfloat y, GLfloat z)
void setAttributeValue@13(char *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
void setAttributeValue@14(char *name, QVector2D value)
void setAttributeValue@15(char *name, QVector3D value)
void setAttributeValue@16(char *name, QVector4D value)
<comment>
void setAttributeValue@17(char *name, QColor value)
void setAttributeValue@18(char *name, GLfloat *values, int columns, int rows)
</comment>

void setDefaultInnerTessellationLevels(QVector<float> levels)
void setDefaultOuterTessellationLevels(QVector<float> levels)
void setPatchVertexCount(int count)
void setUniformValue(int location, GLfloat value)
void setUniformValue@2(int location, GLint value)
void setUniformValue@3(char *name, QColor color)
void setUniformValue@4(char *name, QPoint point)
void setUniformValue@5(char *name, QPointF point)
void setUniformValue@6(char *name, QSize size)
void setUniformValue@7(char *name, QSizeF size)
void setUniformValue@8(char *name, QMatrix2x2 value)
void setUniformValue@9(char *name, QMatrix2x3 value)
void setUniformValue@10(char *name, QMatrix2x4 value)
void setUniformValue@11(char *name, QMatrix3x2 value)
void setUniformValue@12(char *name, QMatrix3x3 value)
void setUniformValue@13(char *name, QMatrix3x4 value)
void setUniformValue@14(char *name, QMatrix4x2 value)
void setUniformValue@15(char *name, QMatrix4x3 value)
void setUniformValue@16(char *name, QMatrix4x4 value)
<comment>
void setUniformValue@17(char *name, GLfloat[2][2] value)
void setUniformValue@18(char *name, GLfloat[3][3] value)
void setUniformValue@19(char *name, GLfloat[4][4] value)
</comment>
void setUniformValue@20(char *name, QTransform value)
void setUniformValue@21(int location, GLuint value)
void setUniformValue@22(int location, GLfloat x, GLfloat y)
void setUniformValue@23(int location, GLfloat x, GLfloat y, GLfloat z)
void setUniformValue@24(int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
void setUniformValue@25(int location, QVector2D value)
void setUniformValue@26(int location, QVector3D value)
void setUniformValue@27(int location, QVector4D value)
void setUniformValue@28(int location, QColor color)
void setUniformValue@29(int location, QPoint point)
void setUniformValue@30(int location, QPointF point)
void setUniformValue@31(int location, QSize size)
void setUniformValue@32(int location, QSizeF size)
void setUniformValue@33(int location, QMatrix2x2 value)
void setUniformValue@34(int location, QMatrix2x3 value)
void setUniformValue@35(int location, QMatrix2x4 value)
void setUniformValue@36(int location, QMatrix3x2 value)
void setUniformValue@37(int location, QMatrix3x3 value)
void setUniformValue@38(int location, QMatrix3x4 value)
void setUniformValue@39(int location, QMatrix4x2 value)
void setUniformValue@40(int location, QMatrix4x3 value)
void setUniformValue@41(int location, QMatrix4x4 value)
<comment>
void setUniformValue@42(int location, GLfloat[2][2] value)
void setUniformValue@43(int location, GLfloat[3][3] value)
void setUniformValue@44(int location, GLfloat[4][4] value)
</comment>
void setUniformValue@45(int location, QTransform value)
void setUniformValue@46(char *name, GLfloat value)
void setUniformValue@47(char *name, GLint value)
void setUniformValue@48(char *name, GLuint value)
void setUniformValue@49(char *name, GLfloat x, GLfloat y)
void setUniformValue@50(char *name, GLfloat x, GLfloat y, GLfloat z)
void setUniformValue@51(char *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
void setUniformValue@52(char *name, QVector2D value)
void setUniformValue@53(char *name, QVector3D value)
void setUniformValue@54(char *name, QVector4D value)
void setUniformValueArray(int location, GLfloat *values, int count, int tupleSize)
void setUniformValueArray@2(int location, GLint *values, int count)
void setUniformValueArray@3(int location, GLuint *values, int count)
void setUniformValueArray@4(int location, QVector2D *values, int count)
void setUniformValueArray@5(int location, QVector3D *values, int count)
void setUniformValueArray@6(int location, QVector4D *values, int count)
void setUniformValueArray@7(int location, QMatrix2x2 *values, int count)
void setUniformValueArray@8(int location, QMatrix2x3 *values, int count)
void setUniformValueArray@9(int location, QMatrix2x4 *values, int count)
void setUniformValueArray@10(int location, QMatrix3x2 *values, int count)
void setUniformValueArray@11(int location, QMatrix3x3 *values, int count)
void setUniformValueArray@12(int location, QMatrix3x4 *values, int count)
void setUniformValueArray@13(int location, QMatrix4x2 *values, int count)
void setUniformValueArray@14(int location, QMatrix4x3 *values, int count)
void setUniformValueArray@15(int location, QMatrix4x4 *values, int count)
void setUniformValueArray@16(char *name, GLfloat *values, int count, int tupleSize)
void setUniformValueArray@17(char *name, GLint *values, int count)
void setUniformValueArray@18(char *name, GLuint *values, int count)
void setUniformValueArray@19(char *name, QVector2D *values, int count)
void setUniformValueArray@20(char *name, QVector3D *values, int count)
void setUniformValueArray@21(char *name, QVector4D *values, int count)
void setUniformValueArray@22(char *name, QMatrix2x2 *values, int count)
void setUniformValueArray@23(char *name, QMatrix2x3 *values, int count)
void setUniformValueArray@24(char *name, QMatrix2x4 *values, int count)
void setUniformValueArray@25(char *name, QMatrix3x2 *values, int count)
void setUniformValueArray@26(char *name, QMatrix3x3 *values, int count)
void setUniformValueArray@27(char *name, QMatrix3x4 *values, int count)
void setUniformValueArray@28(char *name, QMatrix4x2 *values, int count)
void setUniformValueArray@29(char *name, QMatrix4x3 *values, int count)
void setUniformValueArray@30(char *name, QMatrix4x4 *values, int count)
QList<QOpenGLShader *> shaders(void)
int uniformLocation(char *name)
int uniformLocation@2(QByteArray name)
int uniformLocation@3(QString name)
bool hasOpenGLShaderPrograms(QOpenGLContext *context)

