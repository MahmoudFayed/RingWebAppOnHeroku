<class>
name: QCursor
para: void
</class>

<comment>
See: https://doc.qt.io/qt-5/qcursor.html#bitmap-1
Previously, Qt provided a version of bitmap() which returned the bitmap by-pointer.
That version is now deprecated
</comment>

<filter> sysget("RINGQT_QT515") = "" or sysget("RINGQT_ANDROID_QT512") = "1"
QBitmap *bitmap(void)
QBitmap *mask(void)
</filter>

<filter> sysget("RINGQT_QT515") = "1" and sysget("RINGQT_ANDROID_QT512") = ""

<register>
QBitmap bitmap(void)
QBitmap mask(void)
</register>

<code>
RING_FUNC(ring_QCursor_bitmap)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->bitmap(Qt::ReturnByValue);
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}

RING_FUNC(ring_QCursor_mask)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISCPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->mask(Qt::ReturnByValue);
		RING_API_RETMANAGEDCPOINTER(pValue,"QBitmap",ring_QBitmap_freefunc);
	}
}
</code>

</filter>

QPoint hotSpot(void)
QPixmap pixmap(void)
void setShape(Qt::CursorShape shape)
Qt::CursorShape shape(void)
QPoint pos(void)
QPoint pos@2(QScreen *)
void setPos(int x, int y)
void setPos@2(QScreen *screen, int x, int y)
void setPos@3(QPoint)
void setPos@4(QScreen *screen, QPoint)

