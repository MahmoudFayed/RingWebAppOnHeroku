<class>
name: QVector3D
para: float,float,float
</class>

float distanceToLine(QVector3D point, QVector3D direction)
float distanceToPlane(QVector3D plane, QVector3D normal)
float distanceToPlane@2(QVector3D plane1, QVector3D plane2, QVector3D plane3)
float distanceToPoint(QVector3D point)
bool isNull(void)
float length(void)
float lengthSquared(void)
void normalize(void)
QVector3D normalized(void)
<comment>
QVector3D project(QMatrix4x4 modelView, QMatrix4x4 projection, QRect viewport)
</comment>
void setX(float x)
void setY(float y)
void setZ(float z)
QPoint toPoint(void)
QPointF toPointF(void)
QVector2D toVector2D(void)
QVector4D toVector4D(void)
<comment>
QVector3D unproject(QMatrix4x4 modelView, QMatrix4x4 projection, QRect viewport)
</comment>
float x(void)
float y(void)
float z(void)
QVector3D crossProduct(QVector3D v1, QVector3D v2)
float dotProduct(QVector3D v1, QVector3D v2)
QVector3D normal(QVector3D v1, QVector3D v2)
QVector3D normal@2(QVector3D v1, QVector3D v2, QVector3D v3)

