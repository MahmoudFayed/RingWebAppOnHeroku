<class>
name: QThread
para: QObject *
parent: QObject
codename: GThread
passvmpointer
</class>

QAbstractEventDispatcher *eventDispatcher(void)
void exit(int returnCode) # In RingQt use : void exitfromthread(int returnCode)
bool isFinished(void)
bool isInterruptionRequested(void)
bool isRunning(void)

<comment>
int loopLevel(void)
</comment>

QThread::Priority priority(void)
void requestInterruption(void)
void setEventDispatcher(QAbstractEventDispatcher *eventDispatcher)
void setPriority(QThread::Priority priority)
void setStackSize(uint stackSize)
uint stackSize(void)
bool wait(unsigned long time)
void quit(void)
void start(QThread::Priority priority)
void terminate(void)
QThread *currentThread(void)
Qt::HANDLE currentThreadId(void)
int idealThreadCount(void)
void msleep(unsigned long msecs)
void sleep(unsigned long secs)
void usleep(unsigned long usecs)
void yieldCurrentThread(void)

void setStartedEvent(const char *)
void setFinishedEvent(const char *)

const char *getStartedEvent(void)
const char *getFinishedEvent(void)
