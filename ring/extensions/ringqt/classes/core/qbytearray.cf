<class>
name: QByteArray
para: void
</class>

QByteArray append(const char *str)
QByteArray append@2(const char *str,int size)
char at(int i)
int capacity(void)
void chop(int n)
void clear(void)
const char *constData(void)
bool contains(const char *str)
int count(const char *str)
const char *data(void)
bool endsWith(const char *str)
QByteArray fill(char ch, int size)
int indexOf(const char *str, int from)
QByteArray insert(int i, const char *str, int len)
bool isEmpty(void)
bool isNull(void)
int lastIndexOf(const char *str, int from)
QByteArray left(int len)
QByteArray leftJustified(int width, char fill, bool truncate)
int length(void)
QByteArray mid(int pos, int len)
QByteArray prepend(const char *str, int len)
void push_back(const char *str)
void push_front(const char *str)
QByteArray remove(int pos, int len)
QByteArray repeated(int times)
QByteArray replace(int pos, int len, const char *after, int alen)
QByteArray replace@2(int pos, int len, QByteArray after)
QByteArray replace@3(int pos, int len, const char *after)
QByteArray replace@4(char before, const char *after)
QByteArray replace@5(char before, QByteArray after)
QByteArray replace@6(const char *before, const char *after)
QByteArray replace@7(const char *before, int bsize, const char *after, int asize)
QByteArray replace@8(const QByteArray before, QByteArray after)
QByteArray replace@9(const QByteArray before, const char *after)
QByteArray replace@10(const char *before, QByteArray after)
QByteArray replace@11(char before, char after)
void reserve(int size)
void resize(int size)
QByteArray right(int len)
QByteArray rightJustified(int width, char fill, bool truncate)
QByteArray setNum(int n, int base)
QByteArray setRawData(const char *data, uint size)
QByteArray simplified(void)
int size(void)
void squeeze(void)
bool startsWith(const char *str)
void swap(QByteArray other)
QByteArray toBase64(void)
double toDouble(bool * ok)
float toFloat(bool * ok)
QByteArray toHex(void)
int toInt(bool *ok, int base)
long toLong(bool *ok, int base)
qlonglong toLongLong(bool *ok, int base)
QByteArray toLower(void)
QByteArray toPercentEncoding(QByteArray,QByteArray, char percent)
short toShort(bool *ok, int base)
int toUInt(bool *ok, int base)
int toULong(bool *ok, int base)
int toULongLong(bool * ok, int base)
int toUShort(bool * ok, int base)
QByteArray toUpper(void)
QByteArray trimmed(void)
void truncate(int pos)
QByteArray fromBase64(QByteArray)
QByteArray fromHex(QByteArray)
QByteArray fromPercentEncoding(QByteArray, char percent)
QByteArray fromRawData(const char *data, int size)
QByteArray number(int n, int base)
<comment>
int qChecksum(const char *data, uint len)
QByteArray qCompress(QByteArray data, int compressionLevel)
QByteArray qUncompress(const char *data, int nbytes)
int qstrcmp(const char *str1, const char *str2)
char *qstrcpy(char *dst, const char *src)
char *qstrdup(const char *src)
int qstricmp(const char *str1, const char *str2)
uint qstrlen(const char *str)
int qstrncmp(const char *str1, const char *str2, int len)
char *qstrncpy(char *dst, const char *src, uint len)
int qstrnicmp(const char *str1, const char *str2, uint len)
uint qstrnlen(const char *str, uint maxlen)
int qvsnprintf(char *str, size_t n, const char *fmt, va_list ap)
</comment>
