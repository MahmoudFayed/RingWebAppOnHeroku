<ignorecpointertype>
<nodllstartup>

<code>
/* Copyright (c) 2022 Mahmoud Fayed <msfclipper@yahoo.com> */

#include "httplib.h"
using namespace httplib;

#include <mutex>  

std::mutex ringhttplibmtx;

extern "C" {
	#include "ring.h"

	RING_API void ringlib_init(RingState *pRingState);
}

#include "ringhttplib.h"

</code>

<constant>
CPPHTTPLIB_KEEPALIVE_TIMEOUT_SECOND
CPPHTTPLIB_KEEPALIVE_MAX_COUNT
CPPHTTPLIB_CONNECTION_TIMEOUT_SECOND
CPPHTTPLIB_CONNECTION_TIMEOUT_USECOND
CPPHTTPLIB_READ_TIMEOUT_SECOND
CPPHTTPLIB_READ_TIMEOUT_USECOND
CPPHTTPLIB_WRITE_TIMEOUT_SECOND
CPPHTTPLIB_WRITE_TIMEOUT_USECOND
CPPHTTPLIB_IDLE_INTERVAL_SECOND
CPPHTTPLIB_IDLE_INTERVAL_USECOND 
CPPHTTPLIB_REQUEST_URI_MAX_LENGTH
CPPHTTPLIB_REDIRECT_MAX_COUNT
CPPHTTPLIB_PAYLOAD_MAX_LENGTH
CPPHTTPLIB_TCP_NODELAY
CPPHTTPLIB_COMPRESSION_BUFSIZ
CPPHTTPLIB_THREAD_POOL_COUNT
CPPHTTPLIB_RECV_FLAGS
CPPHTTPLIB_LISTEN_BACKLOG
</constant>

<runcode>
aNumberTypes + "size_t"
aNumberTypes + "char"
aNumberTypes + "time_t"

aEnumTypes + "HandlerResponse"
aEnumTypes + "Error"
aEnumTypes + "EncodingType"

aStringTypes + "std::string"
aStringTypes + "string"

aBeforeReturn + ["std::string",".c_str()"]
aBeforeReturn + ["string",".c_str()"]
</runcode>

<struct>
MultipartFormData {string name,string content,string filename,string content_type}
</struct>

<loadfile> classes/server.cf
<loadfile> classes/response.cf
<loadfile> classes/request.cf
<loadfile> classes/client.cf
<loadfile> classes/result.cf
